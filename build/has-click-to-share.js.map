{"version":3,"file":"has-click-to-share.js","mappings":"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CAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0B;;AAE1B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,gDAAmB;AAC3C;AACA,iNAAiN,mBAAmB;AACpO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW,oBAAoB;AAC5C,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA,6BAA6B,6CAAgB;AAC7C;AACA,0KAA0K,qBAAqB;AAC/L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC,yBAAyB,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW,oBAAoB;AAC5C,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC,YAAY,gDAAmB,6BAA6B,aAAa;AACzE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yCAAY;AAC/B;AACA,IAAI,4CAAe;AACnB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA,aAAa,kCAAkC;AAC/C;AACA;AACA,OAAO;AACP,aAAa,cAAc;AAC3B;AACA,MAAM;AACN;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,iBAAiB,0BAA0B;AAC3C,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAmD;AAC/D,yCAAyC,2CAAc;AACvD,qBAAqB,yCAAY;AACjC,iCAAiC,yCAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB,yCAAY;AAC9B;AACA;AACA;AACA,kBAAkB,8CAAiB;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,IAAI,4CAAe;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,YAAY,kEAAkE;AAC9E,kBAAkB,yCAAY;AAC9B;AACA;AACA;AACA;AACA,kBAAkB,8CAAiB;AACnC;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,iCAAiC,2CAAc;AAC/C;AACA;AACA,IAAI,4CAAe;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA,iBAAiB,UAAU,aAAa,YAAY;AACpD,aAAa,kCAAkC;AAC/C,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAoD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,2BAA2B,yCAAY;AACvC;AACA;AACA,KAAK;AACL,IAAI,4CAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sBAAsB,8CAAiB;AACvC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,oBAAoB,8CAAiB;AACrC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,mBAAmB,GAAG,SAAS,8BAA8B,yBAAyB;AACtF;AACA;AACA,2BAA2B,UAAU;AACrC,yBAAyB,QAAQ;AACjC,wBAAwB,OAAO;AAC/B,sBAAsB,KAAK;AAC3B;AACA,mBAAmB,yCAAyC;AAC5D,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kDAAkD;AAClD;AACA,WAAW,KAAK,GAAG,6DAA6D;AAChF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,8CAA8C,iDAAoB;;AAElE;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,gHAAgH;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA,aAAa,4DAA4D;AACzE;AACA;AACA;AACA,MAAM;AACN,aAAa,iBAAiB;AAC9B;AACA;AACA,MAAM;AACN;AACA;AACA,uBAAuB,wCAAwC;AAC/D,UAAU;AACV,wBAAwB,UAAU,oBAAoB,MAAM,eAAe;AAC3E;AACA,wCAAwC,eAAe,mBAAmB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAqE;AACjF,gCAAgC,2CAAc;AAC9C,gBAAgB,yCAAY;AAC5B,sBAAsB,yCAAY;AAClC,kBAAkB,yCAAY;AAC9B,sBAAsB,yCAAY;AAClC;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAiB,IAAI,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,yBAAyB,8CAAiB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,IAAI,4CAAe;AACnB;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,4CAAe;AACnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,8CAAiB;AAC/B,cAAc,8CAAiB;AAC/B,iBAAiB,8CAAiB;AAClC,gBAAgB,8CAAiB;AACjC,gBAAgB,8CAAiB;AACjC,gBAAgB,8CAAiB;AACjC,gBAAgB,8CAAiB;AACjC,iBAAiB,8CAAiB;AAClC,gBAAgB,0CAAa;AAC7B;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,wCAAwC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU,IAAI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK,GAAG,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2CAA2C,uBAAuB,eAAe;AACjF;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qBAAqB;AACjG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,+CAA+C,UAAU,IAAI;AAC7D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA,0CAA0C,QAAQ,UAAU;AAC5D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,wCAAwC,IAAI,sBAAsB;AAClE,SAAS;AACT;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,qDAAqD,OAAO,QAAQ;AACpE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA,oCAAoC,eAAe;AACnD,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,oBAAoB;AACpB,wEAAwE;AACxE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,aAAa,4CAA4C,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,qCAAqC,wBAAwB;AAC7D,iBAAiB,iCAAiC,gBAAgB,GAAG;AACrE,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,yBAAyB,yCAAY;AACrC,yCAAyC,2CAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,yBAAyB;AACzB,kBAAkB;AAClB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAAiB;AACnC;AACA;AACA;AACA;AACA;AACA,kCAAkC,uBAAuB;AACzD;AACA,SAAS;AACT,KAAK;AACL,IAAI,4CAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,KAAK;AACL,IAAI,4CAAe;AACnB;AACA,KAAK;AACL;AACA;AACA;;AAE2I;AAC3I;;;;;;;;;;;;;;;;;;UC1wEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNoC;AACpC,IAAQ9K,EAAE,GAAKC,EAAE,CAACC,IAAI,CAAdF,EAAE;AACV,IAAQgL,iBAAiB,GAAK/K,EAAE,CAACgL,MAAM,CAA/BD,iBAAiB;;AAEzB;AAC0B;AAEnB,IAAMG,IAAI,GAAG,oBAAoB;AACxCH,iBAAiB,CAAED,wCAAQ,EAAE;EAC5BK,KAAK,EAAEpL,EAAE,CAAE,gBAAgB,EAAE,qBAAqB,CAAE;EAAE;EACtDqL,UAAU,EAAErL,EAAE,CAAE,wCAAwC,EAAE,qBAAqB,CAAE;EACjFsL,IAAI,eAAE;IAAK,eAAY,MAAM;IAAC,SAAS,EAAC,OAAO;IAAC,eAAY,KAAK;IAAC,aAAU,WAAW;IAAC,SAAS,EAAC,qCAAqC;IAAC,IAAI,EAAC,KAAK;IAAC,KAAK,EAAC,4BAA4B;IAAC,OAAO,EAAC;EAAa,gBAAC;IAAM,IAAI,EAAC,cAAc;IAAC,CAAC,EAAC;EAA0c,EAAQ,CAAM;EAChsBC,QAAQ,EAAE,QAAQ;EAAE;EACpBC,QAAQ,EAAE,CACTxL,EAAE,CAAE,OAAO,EAAE,qBAAqB,CAAE,EACpCA,EAAE,CAAE,QAAQ,EAAE,qBAAqB,CAAE,EACrCA,EAAE,CAAE,QAAQ,EAAE,qBAAqB,CAAE,EACrCA,EAAE,CAAE,OAAO,EAAE,qBAAqB,CAAE,EACpCA,EAAE,CAAE,SAAS,EAAE,qBAAqB,CAAE,EACtCA,EAAE,CAAE,UAAU,EAAE,qBAAqB,CAAE,EACvCA,EAAE,CAAE,OAAO,EAAE,qBAAqB,CAAE,EACpCA,EAAE,CAAE,SAAS,EAAE,qBAAqB,CAAE,CACtC;EACDkL,IAAI,EAAJA,6CAAI;EAEJ;EACAO,IAAI,kBAAG;IACN,OAAO,IAAI;EACZ;AACD,CAAC,CAAE,C","sources":["webpack://highlight-and-share/./src/blocks/click-to-share/edit.js","webpack://highlight-and-share/./src/react/Components/ColorPicker/index.js","webpack://highlight-and-share/./src/react/Components/DimensionsBlock/index.js","webpack://highlight-and-share/./src/react/Components/unit-picker/index.js","webpack://highlight-and-share/./src/react/Hooks/useDeviceType.js","webpack://highlight-and-share/./src/react/Utils/DimensionsHelper.js","webpack://highlight-and-share/./src/react/Utils/ShorthandCSS.js","webpack://highlight-and-share/./node_modules/classnames/index.js","webpack://highlight-and-share/./node_modules/hex-to-rgba/build/index.js","webpack://highlight-and-share/./src/react/Components/DimensionsBlock/editor.scss","webpack://highlight-and-share/./src/react/Components/unit-picker/editor.scss","webpack://highlight-and-share/external window \"React\"","webpack://highlight-and-share/external window [\"wp\",\"components\"]","webpack://highlight-and-share/external window [\"wp\",\"data\"]","webpack://highlight-and-share/external window [\"wp\",\"element\"]","webpack://highlight-and-share/external window [\"wp\",\"i18n\"]","webpack://highlight-and-share/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://highlight-and-share/webpack/bootstrap","webpack://highlight-and-share/webpack/runtime/compat get default export","webpack://highlight-and-share/webpack/runtime/define property getters","webpack://highlight-and-share/webpack/runtime/hasOwnProperty shorthand","webpack://highlight-and-share/webpack/runtime/make namespace object","webpack://highlight-and-share/./src/blocks/click-to-share/block.js"],"sourcesContent":["/**\n * External dependencies\n */\n\nimport classnames from 'classnames';\nimport { useEffect } from 'react';\nimport ColorPicker from '../../react/Components/ColorPicker';\nimport DimensionsControlBlock from '../../react/Components/DimensionsBlock';\nimport useDeviceType from '../../react/Hooks/useDeviceType';\nimport { buildDimensionsCSS } from '../../react/Utils/DimensionsHelper';\n\nconst { __ } = wp.i18n;\n\nconst { PanelBody, RangeControl, SelectControl, TextControl, ButtonGroup, Button, BaseControl } = wp.components;\n\nconst { InspectorControls, RichText, useBlockProps } = wp.blockEditor;\n\nconst { useInstanceId } = wp.compose;\n\nconst HAS_Click_To_Share = ( props ) => {\n\tconst [ deviceType, setDeviceType ] = useDeviceType( 'Desktop' );\n\tconst generatedUniqueId = useInstanceId(\n\t\tHAS_Click_To_Share,\n\t\t'has-cts'\n\t);\n\n\tconst { attributes, setAttributes } = props;\n\tconst {\n\t\tshareText,\n\t\tbackgroundColor,\n\t\ttextColor,\n\t\tfontSize,\n\t\tclickText,\n\t\tpadding,\n\t\tborder,\n\t\tborderRadius,\n\t\tborderColor,\n\t\tfontWeight,\n\t\tclickShareFontSize,\n\t\tmaxWidth,\n\t\talignment,\n\t\tmarginTop,\n\t\tmarginRight,\n\t\tmarginBottom,\n\t\tmarginLeft,\n\t\tpaddingSize,\n\t\tuniqueId,\n\t} = attributes;\n\n\tuseEffect( () => {\n\t\t// Set unique ID for block (for styling).\n\t\tsetAttributes( { uniqueId: generatedUniqueId } );\n\n\t\t// Port padding to new dimensions object.\n\t\tif ( padding !== -1 ) {\n\t\t\tconst portPadding = paddingSize;\n\t\t\tportPadding.desktop = {\n\t\t\t\ttop: padding,\n\t\t\t\tright: padding,\n\t\t\t\tbottom: padding,\n\t\t\t\tleft: padding,\n\t\t\t\tunit: 'px',\n\t\t\t\tunitSync: true,\n\t\t\t};\n\t\t\tsetAttributes( {\n\t\t\t\tpaddingSize: portPadding,\n\t\t\t\tpadding: -1,\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\tconst hasStyles = {\n\t\tfontSize: fontSize + 'px',\n\t\tpadding: buildDimensionsCSS( paddingSize, deviceType ),\n\t\tborder: `${ border }px solid ${ borderColor }`,\n\t\tborderRadius: borderRadius + 'px',\n\t\tbackgroundColor,\n\t\tcolor: textColor,\n\t\tmaxWidth: `${ maxWidth }%`,\n\t\tmarginLeft: marginLeft + 'px',\n\t\tmarginRight: marginRight + 'px',\n\t\tmarginBottom: marginBottom + 'px',\n\t\tmarginTop: marginTop + 'px',\n\t};\n\tif ( 'center' == alignment ) {\n\t\thasStyles.margin = '0 auto';\n\t}\n\tif ( 'left' == alignment ) {\n\t\thasStyles.float = 'left';\n\t}\n\tif ( 'right' == alignment ) {\n\t\thasStyles.float = 'right';\n\t}\n\tconst fontWeightArr = Array();\n\tfontWeightArr.push( {\n\t\tlabel: __( 'Normal', 'highlight-and-share' ),\n\t\tvalue: 100,\n\t} );\n\tfontWeightArr.push( { label: __( 'Bold', 'highlight-and-share' ), value: 400 } );\n\tfontWeightArr.push( {\n\t\tlabel: __( 'Bolder', 'highlight-and-share' ),\n\t\tvalue: 700,\n\t} );\n\n\tconst alignmentArr = Array();\n\talignmentArr.push( {\n\t\tlabel: __( 'Left', 'highlight-and-share' ),\n\t\tvalue: 'left',\n\t} );\n\talignmentArr.push( {\n\t\tlabel: __( 'center', 'highlight-and-share' ),\n\t\tvalue: 'center',\n\t} );\n\talignmentArr.push( {\n\t\tlabel: __( 'right', 'highlight-and-share' ),\n\t\tvalue: 'right',\n\t} );\n\n\t/* For sticky responsive: forked from GenerateBlocks */\n\tconst panelHeader = document.querySelector( '.edit-post-sidebar .edit-post-sidebar__panel-tabs' );\n\tconst panelHeaderHeight = panelHeader ? panelHeader.offsetHeight : 0;\n\n\tconst inspectorControls = (\n\t\t<InspectorControls>\n\t\t\t<div id=\"has-screensize-group\" className=\"has-screensize-variants\" style={ { top: panelHeaderHeight + 'px' } }>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={ deviceType === 'Desktop' ? 'primary' : 'secondary' }\n\t\t\t\t\t\tonClick={ ( e ) => {\n\t\t\t\t\t\t\tsetDeviceType( 'Desktop' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon=\"laptop\"\n\t\t\t\t\t\ticonSize=\"14\"\n\t\t\t\t\t\tlabel={ __( 'Desktop', 'highlight-and-share' ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={ deviceType === 'Tablet' ? 'primary' : 'secondary' }\n\t\t\t\t\t\tonClick={ ( e ) => {\n\t\t\t\t\t\t\tsetDeviceType( 'Tablet' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon=\"tablet\"\n\t\t\t\t\t\tlabel={ __( 'Tablet', 'highlight-and-share' ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant={ deviceType === 'Mobile' ? 'primary' : 'secondary' }\n\t\t\t\t\t\tonClick={ ( e ) => {\n\t\t\t\t\t\t\tsetDeviceType( 'Mobile' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ticon=\"smartphone\"\n\t\t\t\t\t\tlabel={ __( 'Mobile', 'highlight-and-share' ) }\n\t\t\t\t\t/>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Highlight and Share Settings', 'highlight-and-share' ) }\n\t\t\t>\n\t\t\t\t<DimensionsControlBlock\n\t\t\t\t\tlabel={ __( 'Border Radius', 'highlight-and-share' ) }\n\t\t\t\t\tallowNegatives={ false }\n\t\t\t\t\tvalues={ paddingSize }\n\t\t\t\t\tlabelTop={ __( 'T-Left', 'highlight-and-share' ) }\n\t\t\t\t\tlabelRight={ __( 'T-Right', 'highlight-and-share' ) }\n\t\t\t\t\tlabelBottom={ __( 'B-Right', 'highlight-and-share' ) }\n\t\t\t\t\tlabelLeft={ __( 'B-Left', 'highlight-and-share' ) }\n\t\t\t\t\tunits={ [ 'px', 'em', 'rem' ] }\n\t\t\t\t\tscreenSize={ deviceType }\n\t\t\t\t\tonValuesChange={ ( newValues ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tpaddingSize: newValues,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<ColorPicker\n\t\t\t\t\tvalue={ backgroundColor }\n\t\t\t\t\tkey={ 'background-color' }\n\t\t\t\t\tonChange={ ( slug, newValue ) => {\n\t\t\t\t\t\tsetAttributes( { backgroundColor: newValue } );\n\t\t\t\t\t} }\n\t\t\t\t\tlabel={ __( 'Background Color', 'highlight-and-share' ) }\n\t\t\t\t\tdefaultColors={ has_gutenberg.colorPalette }\n\t\t\t\t\tdefaultColor={ backgroundColor }\n\t\t\t\t\tslug={ 'background-color' }\n\t\t\t\t/>\n\t\t\t\t<ColorPicker\n\t\t\t\t\tvalue={ textColor }\n\t\t\t\t\tkey={ 'text-color' }\n\t\t\t\t\tonChange={ ( slug, newValue ) => {\n\t\t\t\t\t\tsetAttributes( { textColor: newValue } );\n\t\t\t\t\t} }\n\t\t\t\t\tlabel={ __( 'Text Color', 'highlight-and-share' ) }\n\t\t\t\t\tdefaultColors={ has_gutenberg.colorPalette }\n\t\t\t\t\tdefaultColor={ textColor }\n\t\t\t\t\tslug={ 'text-color' }\n\t\t\t\t/>\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel={ __( 'Font Weight', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ fontWeight }\n\t\t\t\t\toptions={ fontWeightArr }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetAttributes( { fontWeight: value } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Click to Share Text', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ clickText }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetAttributes( { clickText: value } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Spacing and Font Settings', 'highlight-and-share' ) }\n\t\t\t\tinitialOpen={ false }\n\t\t\t>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Font Size', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ fontSize }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { fontSize: value } ) }\n\t\t\t\t\tmin={ 10 }\n\t\t\t\t\tmax={ 40 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Click to Share Font Size', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ clickShareFontSize }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { clickShareFontSize: value } )\n\t\t\t\t\t}\n\t\t\t\t\tmin={ 10 }\n\t\t\t\t\tmax={ 40 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Border', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ border }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { border: value } ) }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 10 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Border Rounded', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ borderRadius }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetAttributes( { borderRadius: value } );\n\t\t\t\t\t} }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 30 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<ColorPicker\n\t\t\t\t\tvalue={ borderColor }\n\t\t\t\t\tkey={ 'border-color' }\n\t\t\t\t\tonChange={ ( slug, newValue ) => {\n\t\t\t\t\t\tsetAttributes( { borderColor: newValue } );\n\t\t\t\t\t} }\n\t\t\t\t\tlabel={ __( 'Border Color', 'highlight-and-share' ) }\n\t\t\t\t\tdefaultColors={ has_gutenberg.colorPalette }\n\t\t\t\t\tdefaultColor={ borderColor }\n\t\t\t\t\tslug={ 'border-color' }\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ __( 'Alignment, Width, and Margins', 'highlight-and-share' ) }\n\t\t\t>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Max Width', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ maxWidth }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { maxWidth: value } ) }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 100 }\n\t\t\t\t\tstep={ 5 }\n\t\t\t\t/>\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel={ __( 'Alignment', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ alignment }\n\t\t\t\t\toptions={ alignmentArr }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tsetAttributes( { alignment: value } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Margin Left', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ marginLeft }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { marginLeft: value } ) }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 20 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Margin Right', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ marginRight }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { marginRight: value } ) }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 20 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Margin Top', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ marginTop }\n\t\t\t\t\tonChange={ ( value ) => setAttributes( { marginTop: value } ) }\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 20 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t\t<RangeControl\n\t\t\t\t\tlabel={ __( 'Margin Bottom', 'highlight-and-share' ) }\n\t\t\t\t\tvalue={ marginBottom }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { marginBottom: value } )\n\t\t\t\t\t}\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 20 }\n\t\t\t\t\tstep={ 1 }\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n\n\tconst block = (\n\t\t<>\n\t\t\t{ inspectorControls }\n\n\t\t\t<div className={ classnames( 'has-click-to-share' ) } style={ hasStyles }>\n\t\t\t\t<div className=\"has-click-to-share-wrapper\">\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\tplaceholder={ __( 'Add share text', 'highlight-and-share' ) }\n\t\t\t\t\t\tvalue={ shareText }\n\t\t\t\t\t\tclassName=\"has-click-to-share-text\"\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\t\tfontSize: fontSize + 'px',\n\t\t\t\t\t\t\tfontWeight,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tallowedFormats={ [] }\n\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\tsetAttributes( { shareText: value } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"has-click-to-share-cta\"\n\t\t\t\t\t\tstyle={ { fontSize: clickShareFontSize } }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ clickText }{ ' ' }\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\twidth: clickShareFontSize,\n\t\t\t\t\t\t\t\theight: clickShareFontSize,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\t\t\tdata-prefix=\"fas\"\n\t\t\t\t\t\t\tdata-icon=\"share-alt\"\n\t\t\t\t\t\t\tclassName=\"svg-inline--fa fa-share-alt fa-w-14\"\n\t\t\t\t\t\t\trole=\"img\"\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tviewBox=\"0 0 448 512\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\td=\"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( `highlight-and-share` ),\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<div { ...blockProps } id={ uniqueId }>{ block }</div>\n\t\t</>\n\t);\n};\n\nexport default HAS_Click_To_Share;\n","/**\n * Color Picker.\n *\n * Credit: Forked from @generateblocks\n */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport hexToRgba from 'hex-to-rgba';\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tTooltip,\n\tBaseControl,\n\tColorPicker,\n\tRangeControl,\n\tPopover,\n\tColorPalette,\n\tButton,\n} from '@wordpress/components';\n\nconst HASColorPicker = ( props ) => {\n\tconst [ colorKey, setColorKey ] = useState( props.slug );\n\tconst [ isVisible, setIsVisible ] = useState( false );\n\tconst [ color, setColor ] = useState( props.value );\n\n\tconst {\n\t\tdefaultColor,\n\t\tdefaultColors,\n\t\tvalue,\n\t\tonChange,\n\t\tonOpacityChange,\n\t\tlabel,\n\t\talpha = false,\n\t\tvalueOpacity,\n\t\tslug,\n\t} = props;\n\n\tuseEffect( () => {\n\t\tsetColor( value );\n\t}, [ value ] );\n\n\t// Retrieve colors while avoiding duplicates.\n\tconst getDefaultColors = () => {\n\t\tconst existingColors = [];\n\t\tconst newColors = [];\n\t\tdefaultColors.forEach( ( maybeNewColor, index ) => {\n\t\t\tif ( ! existingColors.includes( maybeNewColor.color ) ) {\n\t\t\t\texistingColors.push( maybeNewColor.color );\n\t\t\t\tnewColors.push( maybeNewColor );\n\t\t\t}\n\t\t} );\n\t\treturn newColors;\n\t};\n\n\tconst opacityIcon = (\n\t\t<svg\n\t\t\taria-hidden=\"true\"\n\t\t\tfocusable=\"false\"\n\t\t\tdata-prefix=\"fad\"\n\t\t\tdata-icon=\"tint\"\n\t\t\tclassName=\"svg-inline--fa fa-tint fa-w-11\"\n\t\t\trole=\"img\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 352 512\"\n\t\t>\n\t\t\t<g className=\"fa-group\">\n\t\t\t\t<path\n\t\t\t\t\tclassName=\"fa-secondary\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\td=\"M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448A112.14 112.14 0 0 1 64 336a16 16 0 0 1 32 0 80.09 80.09 0 0 0 80 80 16 16 0 0 1 0 32z\"\n\t\t\t\t\topacity=\"0.4\"\n\t\t\t\t></path>\n\t\t\t\t<path\n\t\t\t\t\tclassName=\"fa-primary\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\td=\"M176 448A112.14 112.14 0 0 1 64 336a16 16 0 0 1 32 0 80.09 80.09 0 0 0 80 80 16 16 0 0 1 0 32z\"\n\t\t\t\t></path>\n\t\t\t</g>\n\t\t</svg>\n\t);\n\n\t/**\n\t * Toggle whether the color popup is showing.\n\t */\n\tconst toggleVisible = () => {\n\t\tsetIsVisible( true );\n\t};\n\n\t/**\n\t * Close color popup if visible.\n\t */\n\tconst toggleClose = () => {\n\t\tif ( isVisible ) {\n\t\t\tsetIsVisible( false );\n\t\t}\n\t};\n\n\treturn (\n\t\t<BaseControl className=\"has-component-color-picker-wrapper\">\n\t\t\t{ !! label && (\n\t\t\t\t<div className=\"has-color-component-label\">\n\t\t\t\t\t<span>{ label }</span>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div className=\"has-component-color-picker\">\n\t\t\t\t<div className=\"has-color-picker-area has-component-color-picker-palette\">\n\t\t\t\t\t{ ! isVisible && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t\t'components-color-palette__item-wrapper components-circular-option-picker__option-wrapper has-color-picker-area has-component-color-picker-palette',\n\n\t\t\t\t\t\t\t\t\tvalue ? '' : 'components-color-palette__custom-color'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tooltip text={ __( 'Choose Color', 'quotes-dlx' ) }>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\taria-expanded={ isVisible }\n\t\t\t\t\t\t\t\t\t\tclassName=\"components-button components-circular-option-picker__option is-pressed\"\n\t\t\t\t\t\t\t\t\t\tonClick={ toggleVisible }\n\t\t\t\t\t\t\t\t\t\taria-label={ __(\n\t\t\t\t\t\t\t\t\t\t\t'Custom color picker',\n\t\t\t\t\t\t\t\t\t\t\t'quotes-dlx'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\t\t\tbackground: color\n\t\t\t\t\t\t\t\t\t\t\t\t? hexToRgba( color, valueOpacity )\n\t\t\t\t\t\t\t\t\t\t\t\t: 'transparent',\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className=\"components-color-palette__custom-color-gradient\" />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isVisible && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t'components-color-palette__item-wrapper components-circular-option-picker__option-wrapper has-color-picker-area has-component-color-picker-palette',\n\n\t\t\t\t\t\t\t\tvalue ? '' : 'components-color-palette__custom-color'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tooltip text={ __( 'Choose Color', 'quotes-dlx' ) }>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\taria-expanded={ isVisible }\n\t\t\t\t\t\t\t\t\tclassName=\"components-button components-circular-option-picker__option is-pressed\"\n\t\t\t\t\t\t\t\t\tonClick={ toggleClose }\n\t\t\t\t\t\t\t\t\taria-label={ __(\n\t\t\t\t\t\t\t\t\t\t'Custom color picker',\n\t\t\t\t\t\t\t\t\t\t'quotes-dlx'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\t\tbackground: color\n\t\t\t\t\t\t\t\t\t\t\t? hexToRgba( color, valueOpacity )\n\t\t\t\t\t\t\t\t\t\t\t: 'transparent',\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"components-color-palette__custom-color-gradient\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ isVisible && (\n\t\t\t\t\t\t<Popover\n\t\t\t\t\t\t\tclassName=\"has-component-color-picker\"\n\t\t\t\t\t\t\tonClose={ toggleClose }\n\t\t\t\t\t\t\tnoArrow={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BaseControl key={ colorKey }>\n\t\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\t\tkey={ colorKey }\n\t\t\t\t\t\t\t\t\tcolor={ color }\n\t\t\t\t\t\t\t\t\tonChangeComplete={ ( newColor ) => {\n\t\t\t\t\t\t\t\t\t\tsetColor( newColor.hex );\n\t\t\t\t\t\t\t\t\t\tonChange( slug, newColor.hex );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tdisableAlpha\n\t\t\t\t\t\t\t\t\tdefaultValue={ defaultColor }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseControl>\n\n\t\t\t\t\t\t\t{ alpha && (\n\t\t\t\t\t\t\t\t<div className=\"has-component-color-opacity\">\n\t\t\t\t\t\t\t\t\t<Tooltip text={ __( 'Opacity', 'quotes-dlx' ) }>\n\t\t\t\t\t\t\t\t\t\t{ opacityIcon }\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tvalue={ valueOpacity ? valueOpacity : 0 }\n\t\t\t\t\t\t\t\t\t\tonChange={ ( opacityValue ) => onOpacityChange( opacityValue ) }\n\t\t\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\t\t\tmax={ 1 }\n\t\t\t\t\t\t\t\t\t\tstep={ 0.01 }\n\t\t\t\t\t\t\t\t\t\tinitialPosition={ 1 }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<BaseControl className=\"has-component-color-picker-palette\">\n\t\t\t\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\t\t\t\tcolors={ getDefaultColors() }\n\t\t\t\t\t\t\t\t\tvalue={ color }\n\t\t\t\t\t\t\t\t\tonChange={ ( newColor ) => {\n\t\t\t\t\t\t\t\t\t\tonChange( slug, newColor );\n\t\t\t\t\t\t\t\t\t\tsetColor( newColor );\n\t\t\t\t\t\t\t\t\t\tsetColorKey( newColor );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tdisableCustomColors={ true }\n\t\t\t\t\t\t\t\t\tclearable={ false }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t<div className=\"components-color-clear-color\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\tonChange( slug, defaultColor );\n\t\t\t\t\t\t\t\t\t\tsetColorKey( defaultColor );\n\t\t\t\t\t\t\t\t\t\tsetColor( defaultColor );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Clear Color', 'quotes-dlx' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Popover>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</BaseControl>\n\t);\n};\n\nexport default HASColorPicker;\n","/**\n * Dimensions Component.\n * Credit: Forked from @GenerateBlocks\n */\nimport React, { useEffect, useState } from 'react';\n\n/**\n * External dependencies\n */\nimport './editor.scss';\nimport UnitPicker from '../unit-picker';\n\nimport { __, sprintf, _x } from '@wordpress/i18n';\nimport { Button, Tooltip, TextControl } from '@wordpress/components';\nimport { useForm, Controller, useWatch, useFormState } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { geHierarchicalPlaceholderValue, getHierarchicalValueUnit, getHierarchicalValueUnitSync } from '../../Utils/DimensionsHelper';\n\nconst DimensionsControlBlock = ( props ) => {\n\tconst [ screenSize, setScreenSize ] = useState( 'desktop' );\n\n\tconst getDefaultValues = () => {\n\t\treturn {\n\t\t\tmobile: {\n\t\t\t\ttop: props.values.mobile.top,\n\t\t\t\tright: props.values.mobile.right,\n\t\t\t\tbottom: props.values.mobile.bottom,\n\t\t\t\tleft: props.values.mobile.left,\n\t\t\t\tunit: props.values.mobile.unit,\n\t\t\t\tunitSync: props.values.mobile.unitSync,\n\t\t\t},\n\t\t\ttablet: {\n\t\t\t\ttop: props.values.tablet.top,\n\t\t\t\tright: props.values.tablet.right,\n\t\t\t\tbottom: props.values.tablet.bottom,\n\t\t\t\tleft: props.values.tablet.left,\n\t\t\t\tunit: props.values.tablet.unit,\n\t\t\t\tunitSync: props.values.tablet.unitSync,\n\t\t\t},\n\t\t\tdesktop: {\n\t\t\t\ttop: props.values.desktop.top,\n\t\t\t\tright: props.values.desktop.right,\n\t\t\t\tbottom: props.values.desktop.bottom,\n\t\t\t\tleft: props.values.desktop.left,\n\t\t\t\tunit: props.values.desktop.unit,\n\t\t\t\tunitSync: props.values.desktop.unitSync,\n\t\t\t},\n\t\t};\n\t};\n\n\tconst {\n\t\tregister,\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tsetValue,\n\t\tgetValues,\n\t\treset,\n\t\ttrigger,\n\t} = useForm( {\n\t\tdefaultValues: getDefaultValues(),\n\t} );\n\n\tconst formValues = useWatch( { control } );\n\n\tconst { errors, isDirty, dirtyFields, touchedFields } = useFormState( {\n\t\tcontrol,\n\t} );\n\tconst {\n\t\tlabel = __( 'Padding', 'highlight-and-share' ),\n\t\tlabelTop = __( 'Top', 'highlight-and-share' ),\n\t\tlabelRight = __( 'Right', 'highlight-and-share' ),\n\t\tlabelBottom = __( 'Bottom', 'highlight-and-share' ),\n\t\tlabelLeft = __( 'Left', 'highlight-and-share' ),\n\t\tunits,\n\t\tonValuesChange,\n\t} = props;\n\n\tuseEffect( () => {\n\t\tonValuesChange( formValues );\n\t}, [ formValues ] );\n\n\tuseEffect( () =>{\n\t\tsetScreenSize( props.screenSize.toLowerCase() );\n\t\tsetValue( props.screenSize.toLowerCase(), getValues( props.screenSize.toLowerCase() ) );\n\t}, [ props.screenSize ] );\n\t/**\n\t * Change the all values in parent.\n\t *\n\t * @param {number} value Value to change to.\n\t */\n\tconst changeAllValues = ( value ) => {\n\t\tconst values = getValues( screenSize );\n\t\tvalues.top = value;\n\t\tvalues.right = value;\n\t\tvalues.bottom = value;\n\t\tvalues.left = value;\n\t\tsetValue( screenSize, values );\n\t};\n\n\t/**\n\t * When the sync value is selected, sync all values to the maximum number.\n\t */\n\tconst syncUnits = () => {\n\t\t// Toggle unit sync value.\n\t\tconst values = getValues( screenSize );\n\t\tvalues.unitSync = ! values.unitSync;\n\t\tsetValue( screenSize, values );\n\n\t\t// If we're syncing, set all values to the maximum.\n\t\tif ( values.unitSync ) {\n\t\t\tconst numbers = [\n\t\t\t\tgetValues( screenSize ).top,\n\t\t\t\tgetValues( screenSize ).right,\n\t\t\t\tgetValues( screenSize ).bottom,\n\t\t\t\tgetValues( screenSize ).left,\n\t\t\t];\n\t\t\tconst syncValue = Math.max.apply( null, numbers );\n\t\t\tchangeAllValues( syncValue );\n\t\t}\n\t};\n\n\t/**\n\t * Change the units.\n\t *\n\t * @param {string} value Unit changing (px, em, rem, vh).\n\t */\n\tconst onChangeUnits = ( value ) => {\n\t\tconst values = getValues( screenSize );\n\t\tvalues.unit = value;\n\t\tsetValue( screenSize, values );\n\t};\n\n\tconst onDimensionChange = ( value ) => {\n\t\tif ( getHierarchicalValueUnitSync( props.values, screenSize, getValues( screenSize ).unitSync ) ) {\n\t\t\tchangeAllValues( value );\n\t\t}\n\t};\n\n\tconst syncIcon = (\n\t\t<svg\n\t\t\taria-hidden=\"true\"\n\t\t\tfocusable=\"false\"\n\t\t\tdata-prefix=\"fad\"\n\t\t\tdata-icon=\"sync\"\n\t\t\tclassName=\"svg-inline--fa fa-sync fa-w-16\"\n\t\t\trole=\"img\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tviewBox=\"0 0 512 512\"\n\t\t>\n\t\t\t<g className=\"fa-group\">\n\t\t\t\t<path\n\t\t\t\t\tclassName=\"fa-secondary\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\td=\"M0 500V299.67a12 12 0 0 1 12-12h200.33a12 12 0 0 1 12 12v47.41a12 12 0 0 1-12.57 12l-101.87-4.88a176.07 176.07 0 0 0 317.25-56.94 12 12 0 0 1 11.67-9.26h49.09a12 12 0 0 1 11.8 14.18C478.07 417.08 377.19 504 256 504a247.43 247.43 0 0 1-188.76-87.17l4.13 82.57a12 12 0 0 1-12 12.6H12a12 12 0 0 1-12-12z\"\n\t\t\t\t\topacity=\"0.4\"\n\t\t\t\t></path>\n\t\t\t\t<path\n\t\t\t\t\tclassName=\"fa-primary\"\n\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\td=\"M12.3 209.82C33.93 94.92 134.81 8 256 8a247.4 247.4 0 0 1 188.9 87.34l-4-82.77A12 12 0 0 1 452.92 0h47.41a12 12 0 0 1 12 12v200.33a12 12 0 0 1-12 12H300a12 12 0 0 1-12-12v-47.41a12 12 0 0 1 12.57-12l101.53 4.88a176.07 176.07 0 0 0-317.24 56.94A12 12 0 0 1 73.19 224H24.1a12 12 0 0 1-11.8-14.18z\"\n\t\t\t\t></path>\n\t\t\t</g>\n\t\t</svg>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"components-base-control components-has-dimensions-control\">\n\t\t\t\t<Controller\n\t\t\t\t\tname={ `${ screenSize }.unit` }\n\t\t\t\t\tcontrol={ control }\n\t\t\t\t\trender={ ( { field: { onChange, value } } ) => (\n\t\t\t\t\t\t<UnitPicker\n\t\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\t\tvalue={ getHierarchicalValueUnit( props.values, screenSize, getValues( screenSize ).unit ) }\n\t\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\t\tonClick={ ( newValue ) => {\n\t\t\t\t\t\t\t\tonChange( newValue );\n\t\t\t\t\t\t\t\tonChangeUnits( newValue );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"components-has-dimensions-control__inputs\">\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tname={ `${ screenSize }.top` }\n\t\t\t\t\t\tcontrol={ control }\n\t\t\t\t\t\trender={ ( { field: { onChange, value } } ) => (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tvalue={ getValues( screenSize ).top }\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tlabel={ labelTop }\n\t\t\t\t\t\t\t\tclassName={ classNames( 'components-has-dimensions-control__number' ) }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\t\t\tonDimensionChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t\tonChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\tplaceholder={ geHierarchicalPlaceholderValue( props.values, screenSize, getValues( screenSize ).top, 'top' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tname={ `${ screenSize }.right` }\n\t\t\t\t\t\tcontrol={ control }\n\t\t\t\t\t\trender={ ( { field: { onChange, value } } ) => (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tvalue={ getValues( screenSize ).right }\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tlabel={ labelRight }\n\t\t\t\t\t\t\t\tclassName={ classNames( 'components-has-dimensions-control__number' ) }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\t\t\tonDimensionChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t\tonChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\tplaceholder={ geHierarchicalPlaceholderValue( props.values, screenSize, getValues( screenSize ).right, 'right' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tname={ `${ screenSize }.bottom` }\n\t\t\t\t\t\tcontrol={ control }\n\t\t\t\t\t\trender={ ( { field: { onChange, value } } ) => (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tvalue={ getValues( screenSize ).bottom }\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tlabel={ labelBottom }\n\t\t\t\t\t\t\t\tclassName={ classNames( 'components-has-dimensions-control__number' ) }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\t\t\tonDimensionChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t\tonChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\tplaceholder={ geHierarchicalPlaceholderValue( props.values, screenSize, getValues( screenSize ).bottom, 'bottom' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tname={ `${ screenSize }.left` }\n\t\t\t\t\t\tcontrol={ control }\n\t\t\t\t\t\trender={ ( { field: { onChange, value } } ) => (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tvalue={ getValues( screenSize ).left }\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tlabel={ labelLeft }\n\t\t\t\t\t\t\t\tclassName={ classNames( 'components-has-dimensions-control__number' ) }\n\t\t\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\t\t\tonDimensionChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t\tonChange( parseFloat( newValue ) );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\t\tplaceholder={ geHierarchicalPlaceholderValue( props.values, screenSize, getValues( screenSize ).left, 'left' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttext={\n\t\t\t\t\t\t\t!! getValues( screenSize ).unitSync\n\t\t\t\t\t\t\t\t? __( 'Unsync', 'highlight-and-share' )\n\t\t\t\t\t\t\t\t: __( 'Sync', 'highlight-and-share' )\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"components-has-dimensions-control_sync\"\n\t\t\t\t\t\t\taria-label={ __( 'Sync Units', 'generateblocks' ) }\n\t\t\t\t\t\t\tisPrimary={\n\t\t\t\t\t\t\t\tgetHierarchicalValueUnitSync( props.values, screenSize, getValues( screenSize ).unitSync )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-pressed={\n\t\t\t\t\t\t\t\tgetHierarchicalValueUnitSync( props.values, screenSize, getValues( screenSize ).unitSync )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\t\t\t\tonClick={ ( value ) => syncUnits() }\n\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ syncIcon }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"components-has-dimensions-control__input-labels\">\n\t\t\t\t\t<span className=\"components-has-dimensions-control__number-label\">\n\t\t\t\t\t\t{ labelTop }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-has-dimensions-control__number-label\">\n\t\t\t\t\t\t{ labelRight }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-has-dimensions-control__number-label\">\n\t\t\t\t\t\t{ labelBottom }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-has-dimensions-control__number-label\">\n\t\t\t\t\t\t{ labelLeft }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-has-dimensions-control__number-label\"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default DimensionsControlBlock;\n","/**\n * Unit Picker Component.\n * Credit: Forked from @GenerateBlocks\n */\nimport React from 'react';\n\nimport { __, sprintf, _x } from '@wordpress/i18n';\nimport './editor.scss';\n\nimport { ButtonGroup, Button, Tooltip } from '@wordpress/components';\n\nconst UnitChooser = ( props ) => {\n\tconst { label, value, onClick, units } = props;\n\n\treturn (\n\t\t<div className=\"components-has-units-control-header__units\">\n\t\t\t<div className=\"components-has-units-control-label__units\">{ label }</div>\n\n\t\t\t<div className=\"components-has-control__units\">\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tclassName=\"components-has-control-buttons__units\"\n\t\t\t\t\taria-label={ __( 'Select Units', 'highlight-and-share' ) }\n\t\t\t\t>\n\t\t\t\t\t{ units.map( ( unit ) => {\n\t\t\t\t\t\tlet unitName = unit;\n\n\t\t\t\t\t\tif ( 'px' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'Pixel',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( 'em' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'Em',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( '%' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'Percentage',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( 'vw' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'View Width',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( 'rem' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'Rem',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( 'deg' === unit ) {\n\t\t\t\t\t\t\tunitName = _x(\n\t\t\t\t\t\t\t\t'Degree',\n\t\t\t\t\t\t\t\t'A size unit for CSS markup',\n\t\t\t\t\t\t\t\t'highlight-and-share'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\ttext={ sprintf(\n\t\t\t\t\t\t\t\t\t/* translators: Unit type (px, em, %) */\n\t\t\t\t\t\t\t\t\t__( '%s Units', 'highlight-and-share' ),\n\t\t\t\t\t\t\t\t\tunitName\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tkey={ unit }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={ unit }\n\t\t\t\t\t\t\t\t\tclassName={ 'components-has-control-button__units--' + unit }\n\t\t\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\t\t\tisPrimary={ value === unit }\n\t\t\t\t\t\t\t\t\taria-pressed={ value === unit }\n\t\t\t\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: %s: values associated with CSS syntax, 'Pixel', 'Em', 'Percentage' */\n\t\t\t\t\t\t\t\t\t\t__( '%s Units', 'highlight-and-share' ),\n\t\t\t\t\t\t\t\t\t\tunitName\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tonClick={ () => onClick( unit ) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ unit }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UnitChooser;\n","import { useDispatch, useSelect, dispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\n/* Credits: Forked from GenerateBlocks */\n\nexport default () => {\n\tconst {\n\t\t__experimentalSetPreviewDeviceType: setPreviewDeviceType = () => {},\n\t} = useDispatch( 'core/edit-post' );\n\n\tconst deviceType = useSelect( ( select ) => {\n\t\tconst {\n\t\t\t__experimentalGetPreviewDeviceType: experimentalGetPreviewDeviceType = () => false,\n\t\t} = select( 'core/edit-post' );\n\n\t\treturn experimentalGetPreviewDeviceType();\n\t}, [] );\n\n\tuseEffect( () => {\n\t}, [ deviceType ] );\n\n\tconst setDeviceType = ( type ) => {\n\t\tsetPreviewDeviceType( type );\n\t};\n\n\treturn [ deviceType, setDeviceType ];\n};\n","import React from 'react';\nimport shorthandCSS from './ShorthandCSS';\n\n/**\n * Build CSS rules for dimensions and screen size.\n *\n * @param {Object} props      Dimensions array (see /components/DimensionsBlock).\n * @param {string} screenSize mobile|tablet|desktop.\n *\n * @return {string} CSS rules.\n */\nexport function buildDimensionsCSS( props, screenSize ) {\n\tscreenSize = screenSize.toLowerCase();\n\tconst dimensions = props[ screenSize ];\n\n\tif ( 'desktop' === screenSize ) {\n\t\tconst top = dimensions.top;\n\t\tconst right = dimensions.right;\n\t\tconst bottom = dimensions.bottom;\n\t\tconst left = dimensions.left;\n\t\tconst unit = dimensions.unit;\n\n\t\treturn shorthandCSS( top, right, bottom, left, unit );\n\t}\n\n\tif ( 'tablet' === screenSize || 'mobile' === screenSize ) {\n\t\tconst top = geHierarchicalPlaceholderValue( props, screenSize, dimensions.top, 'top' );\n\t\tconst right = geHierarchicalPlaceholderValue( props, screenSize, dimensions.right, 'right' );\n\t\tconst bottom = geHierarchicalPlaceholderValue( props, screenSize, dimensions.bottom, 'bottom' );\n\t\tconst left = geHierarchicalPlaceholderValue( props, screenSize, dimensions.left, 'left' );\n\t\tconst unit = getHierarchicalValueUnit( props, screenSize, dimensions.unit );\n\n\t\treturn shorthandCSS( top, right, bottom, left, unit );\n\t}\n\n\treturn '';\n}\n\n/**\n * Get a value placeholder based on hierarchy. If the value is not set, get the value from the parent.\n *\n * @param {Object} props      Values object.\n * @param {string} screenSize mobile|tablet|desktop.\n * @param {string} value      Current value.\n * @param {string} type       Type of value (top, right, bottom, left, etc.).\n *\n * @return {string} Value placeholder.\n */\nexport function geHierarchicalPlaceholderValue( props, screenSize, value, type ) {\n\t// Check mobile screen size.\n\tif ( 'mobile' === screenSize && '' === value ) {\n\t\t// Check tablet.\n\t\tif ( '' !== props.tablet[ type ] ) {\n\t\t\treturn props.tablet[ type ];\n\t\t} else if ( '' !== props.desktop[ type ] ) {\n\t\t\t// Check desktop.\n\t\t\treturn props.desktop[ type ];\n\t\t}\n\t}\n\n\t// Check tablet screen size.\n\tif ( 'tablet' === screenSize && '' === value ) {\n\t\tif ( '' !== props.desktop[ type ] ) {\n\t\t\t// Check desktop.\n\t\t\treturn props.desktop[ type ];\n\t\t}\n\t}\n\n\tif ( '' !== value ) {\n\t\treturn value;\n\t}\n\n\treturn '0';\n}\n\n/**\n * Get a value placeholder based on hierarchy. If the value is not set, get the value from the parent.\n *\n * @param {Object} props      Values object.\n * @param {string} screenSize mobile|tablet|desktop.\n * @param {string} value      Current value.\n *\n * @return {string} Value default or hierarchical value.\n */\nexport function getHierarchicalValueUnit( props, screenSize, value ) {\n\t// Check mobile screen size.\n\tif ( 'mobile' === screenSize && null === value ) {\n\t\tif ( null === props.tablet.unit ) {\n\t\t\treturn props.desktop.unit;\n\t\t}\n\t\treturn props.tablet.unit;\n\t}\n\tif ( 'tablet' === screenSize && null === value ) {\n\t\treturn props.desktop.unit;\n\t}\n\tif ( null === value ) {\n\t\treturn 'px';\n\t}\n\treturn value;\n}\n\n/**\n * Get a value based on hierarchy. If the value is not set, get the value from the parent.\n *\n * @param {Object} props      Values object.\n * @param {string} screenSize mobile|tablet|desktop.\n * @param {string} value      Current value.\n *\n * @return {boolean} Value default or hierarchical value.\n */\nexport function getHierarchicalValueUnitSync( props, screenSize, value ) {\n\t// Check mobile screen size.\n\tif ( 'mobile' === screenSize && null === value ) {\n\t\tif ( null === props.tablet.unitSync ) {\n\t\t\treturn props.desktop.unitSync;\n\t\t}\n\t\treturn props.tablet.unitSync;\n\t}\n\tif ( 'tablet' === screenSize && null === value ) {\n\t\treturn props.desktop.unitSync;\n\t}\n\tif ( null === value ) {\n\t\treturn true;\n\t}\n\treturn value;\n}\n","/* Credits: Forked from GenerateBlocks */\nexport default function shorthandCSS( top, right, bottom, left, unit ) {\n\tif ( '' === top && '' === right && '' === bottom && '' === left ) {\n\t\treturn;\n\t}\n\n\ttop = ( parseFloat( top ) != 0 && '' !== top ) ? parseFloat( top ) + unit + ' ' : '0 '; // eslint-disable-line eqeqeq\n\tright = ( parseFloat( right ) != 0 && '' !== right ) ? parseFloat( right ) + unit + ' ' : '0 '; // eslint-disable-line eqeqeq\n\tbottom = ( parseFloat( bottom ) != 0 && '' !== bottom ) ? parseFloat( bottom ) + unit + ' ' : '0 '; // eslint-disable-line eqeqeq\n\tleft = ( parseFloat( left ) != 0 && '' !== left ) ? parseFloat( left ) + unit + ' ' : '0 '; // eslint-disable-line eqeqeq\n\n\tif ( right === left ) {\n\t\tleft = '';\n\n\t\tif ( top === bottom ) {\n\t\t\tbottom = '';\n\n\t\t\tif ( top === right ) {\n\t\t\t\tright = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tconst output = top + right + bottom + left;\n\n\treturn output.trim();\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";\n\nvar removeHash = function removeHash(hex) {\n  return hex.charAt(0) === '#' ? hex.slice(1) : hex;\n};\n\nvar parseHex = function parseHex(nakedHex) {\n  var isShort = nakedHex.length === 3 || nakedHex.length === 4;\n  var twoDigitHexR = isShort ? \"\".concat(nakedHex.slice(0, 1)).concat(nakedHex.slice(0, 1)) : nakedHex.slice(0, 2);\n  var twoDigitHexG = isShort ? \"\".concat(nakedHex.slice(1, 2)).concat(nakedHex.slice(1, 2)) : nakedHex.slice(2, 4);\n  var twoDigitHexB = isShort ? \"\".concat(nakedHex.slice(2, 3)).concat(nakedHex.slice(2, 3)) : nakedHex.slice(4, 6);\n  var twoDigitHexA = (isShort ? \"\".concat(nakedHex.slice(3, 4)).concat(nakedHex.slice(3, 4)) : nakedHex.slice(6, 8)) || 'ff'; // const numericA = +((parseInt(a, 16) / 255).toFixed(2));\n\n  return {\n    r: twoDigitHexR,\n    g: twoDigitHexG,\n    b: twoDigitHexB,\n    a: twoDigitHexA\n  };\n};\n\nvar hexToDecimal = function hexToDecimal(hex) {\n  return parseInt(hex, 16);\n};\n\nvar hexesToDecimals = function hexesToDecimals(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  return {\n    r: hexToDecimal(r),\n    g: hexToDecimal(g),\n    b: hexToDecimal(b),\n    a: +(hexToDecimal(a) / 255).toFixed(2)\n  };\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}; // eslint-disable-line no-restricted-globals, max-len\n\n\nvar formatRgb = function formatRgb(decimalObject, parameterA) {\n  var r = decimalObject.r,\n      g = decimalObject.g,\n      b = decimalObject.b,\n      parsedA = decimalObject.a;\n  var a = isNumeric(parameterA) ? parameterA : parsedA;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n};\n/**\n * Turns an old-fashioned css hex color value into a rgb color value.\n *\n * If you specify an alpha value, you'll get a rgba() value instead.\n *\n * @param The hex value to convert. ('123456'. '#123456', ''123', '#123')\n * @param An alpha value to apply. (optional) ('0.5', '0.25')\n * @return An rgb or rgba value. ('rgb(11, 22, 33)'. 'rgba(11, 22, 33, 0.5)')\n */\n\n\nvar hexToRgba = function hexToRgba(hex, a) {\n  var hashlessHex = removeHash(hex);\n  var hexObject = parseHex(hashlessHex);\n  var decimalObject = hexesToDecimals(hexObject);\n  return formatRgb(decimalObject, a);\n};\n\nmodule.exports = hexToRgba;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\r\n    ? isCheckBoxInput(event.target)\r\n        ? event.target.checked\r\n        : event.target.value\r\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\r\n    if (!path || !isObject(obj)) {\r\n        return defaultValue;\r\n    }\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    FOCUS_OUT: 'focusout',\r\n    CHANGE: 'change',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nconst HookFormContext = React.createContext(null);\r\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst useFormContext = () => React.useContext(HookFormContext);\r\n/**\r\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @param props - all useFrom methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst FormProvider = (props) => {\r\n    const { children, ...data } = props;\r\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\r\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\r\n    const result = {\r\n        defaultValues: control._defaultValues,\r\n    };\r\n    for (const key in formState) {\r\n        Object.defineProperty(result, key, {\r\n            get: () => {\r\n                const _key = key;\r\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\r\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\r\n                }\r\n                localProxyFormState && (localProxyFormState[_key] = true);\r\n                return formState[_key];\r\n            },\r\n        });\r\n    }\r\n    return result;\r\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {\r\n    const { name, ...formState } = formStateData;\r\n    return (isEmptyObject(formState) ||\r\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\r\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\r\n            (!isRoot || VALIDATION_MODE.all)));\r\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\r\n    ? name === signalName\r\n    : !name ||\r\n        !signalName ||\r\n        name === signalName ||\r\n        convertToArrayPayload(name).some((currentName) => currentName &&\r\n            (currentName.startsWith(signalName) ||\r\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\r\n    const _props = React.useRef(props);\r\n    _props.current = props;\r\n    React.useEffect(() => {\r\n        const subscription = !props.disabled &&\r\n            _props.current.subject.subscribe({\r\n                next: _props.current.callback,\r\n            });\r\n        return () => {\r\n            subscription && subscription.unsubscribe();\r\n        };\r\n    }, [props.disabled]);\r\n}\n\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFormState(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, disabled, name, exact } = props || {};\r\n    const [formState, updateFormState] = React.useState(control._formState);\r\n    const _mounted = React.useRef(true);\r\n    const _localProxyFormState = React.useRef({\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    });\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        callback: React.useCallback((value) => _mounted.current &&\r\n            shouldSubscribeByName(_name.current, value.name, exact) &&\r\n            shouldRenderFormState(value, _localProxyFormState.current) &&\r\n            updateFormState({\r\n                ...control._formState,\r\n                ...value,\r\n            }), [control, exact]),\r\n        subject: control._subjects.state,\r\n    });\r\n    React.useEffect(() => {\r\n        _mounted.current = true;\r\n        return () => {\r\n            _mounted.current = false;\r\n        };\r\n    }, []);\r\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal) => {\r\n    const isArray = Array.isArray(names);\r\n    if (isString(names)) {\r\n        isGlobal && _names.watch.add(names);\r\n        return get(formValues, names);\r\n    }\r\n    if (isArray) {\r\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName),\r\n            get(formValues, fieldName)));\r\n    }\r\n    isGlobal && (_names.watchAll = true);\r\n    return formValues;\r\n};\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar objectHasFunction = (data) => {\r\n    for (const key in data) {\r\n        if (isFunction(data[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\r\nfunction useWatch(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        subject: control._subjects.watch,\r\n        callback: React.useCallback((formState) => {\r\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\r\n                const fieldValues = generateWatchOutput(_name.current, control._names, formState.values || control._formValues);\r\n                updateValue(isUndefined(_name.current) ||\r\n                    (isObject(fieldValues) && !objectHasFunction(fieldValues))\r\n                    ? { ...fieldValues }\r\n                    : Array.isArray(fieldValues)\r\n                        ? [...fieldValues]\r\n                        : isUndefined(fieldValues)\r\n                            ? defaultValue\r\n                            : fieldValues);\r\n            }\r\n        }, [control, exact, defaultValue]),\r\n    });\r\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\r\n        ? control._getWatch(name)\r\n        : defaultValue);\r\n    React.useEffect(() => control._removeUnmounted());\r\n    return value;\r\n}\n\n/**\r\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns field properties, field and form state. {@link UseControllerReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function Input(props) {\r\n *   const { field, fieldState, formState } = useController(props);\r\n *   return (\r\n *     <div>\r\n *       <input {...field} placeholder={props.name} />\r\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\r\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useController(props) {\r\n    const methods = useFormContext();\r\n    const { name, control = methods.control, shouldUnregister } = props;\r\n    const isArrayField = isNameInFieldArray(control._names.array, name);\r\n    const value = useWatch({\r\n        control,\r\n        name,\r\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\r\n        exact: true,\r\n    });\r\n    const formState = useFormState({\r\n        control,\r\n        name,\r\n    });\r\n    const _registerProps = React.useRef(control.register(name, {\r\n        ...props.rules,\r\n        value,\r\n    }));\r\n    React.useEffect(() => {\r\n        const updateMounted = (name, value) => {\r\n            const field = get(control._fields, name);\r\n            if (field) {\r\n                field._f.mount = value;\r\n            }\r\n        };\r\n        updateMounted(name, true);\r\n        return () => {\r\n            const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\r\n            (isArrayField\r\n                ? _shouldUnregisterField && !control._stateFlags.action\r\n                : _shouldUnregisterField)\r\n                ? control.unregister(name)\r\n                : updateMounted(name, false);\r\n        };\r\n    }, [name, control, isArrayField, shouldUnregister]);\r\n    return {\r\n        field: {\r\n            name,\r\n            value,\r\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\r\n                target: {\r\n                    value: getEventValue(event),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.CHANGE,\r\n            }), [name]),\r\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\r\n                target: {\r\n                    value: get(control._formValues, name),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.BLUR,\r\n            }), [name, control]),\r\n            ref: (elm) => {\r\n                const field = get(control._fields, name);\r\n                if (field && elm) {\r\n                    field._f.ref = {\r\n                        focus: () => elm.focus(),\r\n                        select: () => elm.select(),\r\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\r\n                        reportValidity: () => elm.reportValidity(),\r\n                    };\r\n                }\r\n            },\r\n        },\r\n        formState,\r\n        fieldState: Object.defineProperties({}, {\r\n            invalid: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.errors, name),\r\n            },\r\n            isDirty: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.dirtyFields, name),\r\n            },\r\n            isTouched: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.touchedFields, name),\r\n            },\r\n            error: {\r\n                enumerable: true,\r\n                get: () => get(formState.errors, name),\r\n            },\r\n        }),\r\n    };\r\n}\n\n/**\r\n * Component based on `useController` hook to work with controlled component.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns provide field handler functions, field and form state.\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { control } = useForm<FormValues>({\r\n *     defaultValues: {\r\n *       test: \"\"\r\n *     }\r\n *   });\r\n *\r\n *   return (\r\n *     <form>\r\n *       <Controller\r\n *         control={control}\r\n *         name=\"test\"\r\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\r\n *           <>\r\n *             <input\r\n *               onChange={onChange} // send value to hook form\r\n *               onBlur={onBlur} // notify when input is touched\r\n *               value={value} // return updated value\r\n *               ref={ref} // set ref for focus management\r\n *             />\r\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\r\n *           </>\r\n *         )}\r\n *       />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? {\r\n        ...errors[name],\r\n        types: {\r\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\r\n            [type]: message || true,\r\n        },\r\n    }\r\n    : {};\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\r\n    for (const key of fieldsNames || Object.keys(fields)) {\r\n        const field = get(fields, key);\r\n        if (field) {\r\n            const { _f, ...currentField } = field;\r\n            if (_f && callback(_f.name)) {\r\n                if (_f.ref.focus) {\r\n                    _f.ref.focus();\r\n                    break;\r\n                }\r\n                else if (_f.refs && _f.refs[0].focus) {\r\n                    _f.refs[0].focus();\r\n                    break;\r\n                }\r\n            }\r\n            else if (isObject(currentField)) {\r\n                focusFieldBy(currentField, callback);\r\n            }\r\n        }\r\n    }\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\r\n    ? options.focusName ||\r\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\r\n    : '';\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\r\n    (_names.watchAll ||\r\n        _names.watch.has(name) ||\r\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\r\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\r\n    const fieldArrayErrors = compact(get(errors, name));\r\n    set(fieldArrayErrors, 'root', error[name]);\r\n    set(errors, name, fieldArrayErrors);\r\n    return errors;\r\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isMessage = (value) => isString(value) || React.isValidElement(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.checked && !option.disabled)\r\n                .map((option) => option.value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        return options[0].checked && !options[0].disabled\r\n            ? // @ts-expect-error expected to work in the browser\r\n                options[0].attributes && !isUndefined(options[0].attributes.value)\r\n                    ? isUndefined(options[0].value) || options[0].value === ''\r\n                        ? validResult\r\n                        : { value: options[0].value, isValid: true }\r\n                    : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\r\n        ? {\r\n            isValid: true,\r\n            value: option.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) ||\r\n        (Array.isArray(result) && result.every(isMessage)) ||\r\n        (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar validateField = async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\r\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\r\n    if (!mount || disabled) {\r\n        return {};\r\n    }\r\n    const inputRef = refs ? refs[0] : ref;\r\n    const setCustomValidity = (message) => {\r\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\r\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\r\n            inputRef.reportValidity();\r\n        }\r\n    };\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\r\n        inputValue === '' ||\r\n        (Array.isArray(inputValue) && !inputValue.length);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = {\r\n            type: exceedMax ? maxType : minType,\r\n            message,\r\n            ref,\r\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\r\n        };\r\n    };\r\n    if (isFieldArray\r\n        ? !Array.isArray(inputValue) || !inputValue.length\r\n        : required &&\r\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n                (isBoolean(inputValue) && !inputValue) ||\r\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n                (isRadio && !getRadioValue(refs).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.required,\r\n                message,\r\n                ref: inputRef,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\r\n            const valueNumber = ref.valueAsNumber ||\r\n                (inputValue ? +inputValue : inputValue);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(inputValue);\r\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\r\n            const isTime = ref.type == 'time';\r\n            const isWeek = ref.type == 'week';\r\n            if (isString(maxOutput.value) && inputValue) {\r\n                exceedMax = isTime\r\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\r\n                    : isWeek\r\n                        ? inputValue > maxOutput.value\r\n                        : valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value) && inputValue) {\r\n                exceedMin = isTime\r\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\r\n                    : isWeek\r\n                        ? inputValue < minOutput.value\r\n                        : valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((maxLength || minLength) &&\r\n        !isEmpty &&\r\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            inputValue.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            inputValue.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty && isString(inputValue)) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.pattern,\r\n                message,\r\n                ref,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        if (isFunction(validate)) {\r\n            const result = await validate(inputValue);\r\n            const validateError = getValidateError(result, inputRef);\r\n            if (validateError) {\r\n                error[name] = {\r\n                    ...validateError,\r\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    setCustomValidity(validateError.message);\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const key in validate) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\r\n                if (validateError) {\r\n                    validationResult = {\r\n                        ...validateError,\r\n                        ...appendErrorsCurry(key, validateError.message),\r\n                    };\r\n                    setCustomValidity(validateError.message);\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = {\r\n                    ref: inputRef,\r\n                    ...validationResult,\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setCustomValidity(true);\r\n    return error;\r\n};\n\nfunction append(data, value) {\r\n    return [...data, ...convertToArrayPayload(value)];\r\n}\n\nvar isPlainObject = (tempObject) => {\r\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\r\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\r\n};\n\nvar isWeb = typeof window !== 'undefined' &&\r\n    typeof window.HTMLElement !== 'undefined' &&\r\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\r\n    let copy;\r\n    const isArray = Array.isArray(data);\r\n    if (data instanceof Date) {\r\n        copy = new Date(data);\r\n    }\r\n    else if (data instanceof Set) {\r\n        copy = new Set(data);\r\n    }\r\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\r\n        (isArray || isObject(data))) {\r\n        copy = isArray ? [] : {};\r\n        if (!Array.isArray(data) && !isPlainObject(data)) {\r\n            copy = data;\r\n        }\r\n        else {\r\n            for (const key in data) {\r\n                copy[key] = cloneObject(data[key]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n    return copy;\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nvar getValidationModes = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...convertToArrayPayload(value),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (!Array.isArray(data)) {\r\n        return [];\r\n    }\r\n    if (isUndefined(data[to])) {\r\n        data[to] = undefined;\r\n    }\r\n    data.splice(to, 0, data.splice(from, 1)[0]);\r\n    return data;\r\n};\n\nfunction prepend(data, value) {\r\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\r\n}\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction isEmptyArray(obj) {\r\n    for (const key in obj) {\r\n        if (!isUndefined(obj[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (Array.isArray(objectRef) && isEmptyArray(objectRef)))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nvar updateAt = (fieldValues, index, value) => {\r\n    fieldValues[index] = value;\r\n    return fieldValues;\r\n};\n\n/**\r\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\r\n *\r\n * @param props - useFieldArray props\r\n *\r\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n *     defaultValues: {\r\n *       test: []\r\n *     }\r\n *   });\r\n *   const { fields, append } = useFieldArray({\r\n *     control,\r\n *     name: \"test\"\r\n *   });\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\r\n *       {fields.map((item, index) => (\r\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\r\n *       ))}\r\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\r\n *         append\r\n *       </button>\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFieldArray(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\r\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\r\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\r\n    const _fieldIds = React.useRef(fields);\r\n    const _name = React.useRef(name);\r\n    const _actioned = React.useRef(false);\r\n    _name.current = name;\r\n    _fieldIds.current = fields;\r\n    control._names.array.add(name);\r\n    props.rules &&\r\n        control.register(name, props.rules);\r\n    const callback = React.useCallback(({ values, name: fieldArrayName, }) => {\r\n        if (fieldArrayName === _name.current || !fieldArrayName) {\r\n            const fieldValues = get(values, _name.current);\r\n            if (Array.isArray(fieldValues)) {\r\n                setFields(fieldValues);\r\n                ids.current = fieldValues.map(generateId);\r\n            }\r\n        }\r\n    }, []);\r\n    useSubscribe({\r\n        callback,\r\n        subject: control._subjects.array,\r\n    });\r\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\r\n        _actioned.current = true;\r\n        control._updateFieldArray(name, updatedFieldArrayValues);\r\n    }, [control, name]);\r\n    const append$1 = (value, options) => {\r\n        const appendValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\r\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\r\n        ids.current = append(ids.current, appendValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const prepend$1 = (value, options) => {\r\n        const prependValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\r\n        control._names.focus = getFocusFieldName(name, 0, options);\r\n        ids.current = prepend(ids.current, prependValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const remove = (index) => {\r\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\r\n        ids.current = removeArrayAt(ids.current, index);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\r\n            argA: index,\r\n        });\r\n    };\r\n    const insert$1 = (index, value, options) => {\r\n        const insertValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\r\n        control._names.focus = getFocusFieldName(name, index, options);\r\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\r\n            argA: index,\r\n            argB: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\r\n        swapArrayAt(ids.current, indexA, indexB);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n        }, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        moveArrayAt(updatedFieldArrayValues, from, to);\r\n        moveArrayAt(ids.current, from, to);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n        }, false);\r\n    };\r\n    const update = (index, value) => {\r\n        const updateValue = cloneObject(value);\r\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\r\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\r\n            argA: index,\r\n            argB: updateValue,\r\n        }, true, false);\r\n    };\r\n    const replace = (value) => {\r\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\r\n        ids.current = updatedFieldArrayValues.map(generateId);\r\n        updateValues([...updatedFieldArrayValues]);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\r\n    };\r\n    React.useEffect(() => {\r\n        control._stateFlags.action = false;\r\n        isWatched(name, control._names) && control._subjects.state.next({});\r\n        if (_actioned.current &&\r\n            (!getValidationModes(control._options.mode).isOnSubmit ||\r\n                control._formState.isSubmitted)) {\r\n            if (control._options.resolver) {\r\n                control._executeSchema([name]).then((result) => {\r\n                    const error = get(result.errors, name);\r\n                    const existingError = get(control._formState.errors, name);\r\n                    if (existingError ? !error && existingError.type : error && error.type) {\r\n                        error\r\n                            ? set(control._formState.errors, name, error)\r\n                            : unset(control._formState.errors, name);\r\n                        control._subjects.state.next({\r\n                            errors: control._formState.errors,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                const field = get(control._fields, name);\r\n                if (field && field._f) {\r\n                    validateField(field, get(control._formValues, name), control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\r\n                        control._subjects.state.next({\r\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\r\n                        }));\r\n                }\r\n            }\r\n        }\r\n        control._subjects.watch.next({\r\n            name,\r\n            values: control._formValues,\r\n        });\r\n        control._names.focus &&\r\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus));\r\n        control._names.focus = '';\r\n        control._proxyFormState.isValid && control._updateValid();\r\n    }, [fields, name, control]);\r\n    React.useEffect(() => {\r\n        !get(control._formValues, name) && control._updateFieldArray(name);\r\n        return () => {\r\n            (control._options.shouldUnregister || shouldUnregister) &&\r\n                control.unregister(name);\r\n        };\r\n    }, [name, control, keyName, shouldUnregister]);\r\n    return {\r\n        swap: React.useCallback(swap, [updateValues, name, control]),\r\n        move: React.useCallback(move, [updateValues, name, control]),\r\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\r\n        append: React.useCallback(append$1, [updateValues, name, control]),\r\n        remove: React.useCallback(remove, [updateValues, name, control]),\r\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\r\n        update: React.useCallback(update, [updateValues, name, control]),\r\n        replace: React.useCallback(replace, [updateValues, name, control]),\r\n        fields: React.useMemo(() => fields.map((field, index) => ({\r\n            ...field,\r\n            [keyName]: ids.current[index] || generateId(),\r\n        })), [fields, keyName]),\r\n    };\r\n}\n\nfunction createSubject() {\r\n    let _observers = [];\r\n    const next = (value) => {\r\n        for (const observer of _observers) {\r\n            observer.next(value);\r\n        }\r\n    };\r\n    const subscribe = (observer) => {\r\n        _observers.push(observer);\r\n        return {\r\n            unsubscribe: () => {\r\n                _observers = _observers.filter((o) => o !== observer);\r\n            },\r\n        };\r\n    };\r\n    const unsubscribe = () => {\r\n        _observers = [];\r\n    };\r\n    return {\r\n        get observers() {\r\n            return _observers;\r\n        },\r\n        next,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\r\n    if (isPrimitive(object1) || isPrimitive(object2)) {\r\n        return object1 === object2;\r\n    }\r\n    if (isDateObject(object1) && isDateObject(object2)) {\r\n        return object1.getTime() === object2.getTime();\r\n    }\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        const val1 = object1[key];\r\n        if (!keys2.includes(key)) {\r\n            return false;\r\n        }\r\n        if (key !== 'ref') {\r\n            const val2 = object2[key];\r\n            if ((isDateObject(val1) && isDateObject(val2)) ||\r\n                (isObject(val1) && isObject(val2)) ||\r\n                (Array.isArray(val1) && Array.isArray(val2))\r\n                ? !deepEqual(val1, val2)\r\n                : val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar isHTMLElement = (value) => {\r\n    const owner = value ? value.ownerDocument : 0;\r\n    const ElementClass = owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\r\n    return value instanceof ElementClass;\r\n};\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nfunction markFieldsDirty(data, fields = {}) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                fields[key] = Array.isArray(data[key]) ? [] : {};\r\n                markFieldsDirty(data[key], fields[key]);\r\n            }\r\n            else if (!isNullOrUndefined(data[key])) {\r\n                fields[key] = true;\r\n            }\r\n        }\r\n    }\r\n    return fields;\r\n}\r\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                if (isUndefined(formValues) ||\r\n                    isPrimitive(dirtyFieldsFromValues[key])) {\r\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\r\n                        ? markFieldsDirty(data[key], [])\r\n                        : { ...markFieldsDirty(data[key]) };\r\n                }\r\n                else {\r\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\r\n                }\r\n            }\r\n            else {\r\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\r\n            }\r\n        }\r\n    }\r\n    return dirtyFieldsFromValues;\r\n}\r\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n        ? value === ''\r\n            ? NaN\r\n            : value\r\n                ? +value\r\n                : value\r\n        : valueAsDate && isString(value)\r\n            ? new Date(value)\r\n            : setValueAs\r\n                ? setValueAs(value)\r\n                : value;\n\nfunction getFieldValue(_f) {\r\n    const ref = _f.ref;\r\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\r\n        return;\r\n    }\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return getRadioValue(_f.refs).value;\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return [...ref.selectedOptions].map(({ value }) => value);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return getCheckboxValue(_f.refs).value;\r\n    }\r\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\r\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\r\n    const fields = {};\r\n    for (const name of fieldsNames) {\r\n        const field = get(_fields, name);\r\n        field && set(fields, name, field._f);\r\n    }\r\n    return {\r\n        criteriaMode,\r\n        names: [...fieldsNames],\r\n        fields,\r\n        shouldUseNativeValidation,\r\n    };\r\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\r\n    ? undefined\r\n    : isRegex(rule)\r\n        ? rule.source\r\n        : isObject(rule)\r\n            ? isRegex(rule.value)\r\n                ? rule.value.source\r\n                : rule.value\r\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\r\n    (options.required ||\r\n        options.min ||\r\n        options.max ||\r\n        options.maxLength ||\r\n        options.minLength ||\r\n        options.pattern ||\r\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\r\n    const error = get(errors, name);\r\n    if (error || isKey(name)) {\r\n        return {\r\n            error,\r\n            name,\r\n        };\r\n    }\r\n    const names = name.split('.');\r\n    while (names.length) {\r\n        const fieldName = names.join('.');\r\n        const field = get(_fields, fieldName);\r\n        const foundError = get(errors, fieldName);\r\n        if (field && !Array.isArray(field) && name !== fieldName) {\r\n            return { name };\r\n        }\r\n        if (foundError && foundError.type) {\r\n            return {\r\n                name: fieldName,\r\n                error: foundError,\r\n            };\r\n        }\r\n        names.pop();\r\n    }\r\n    return {\r\n        name,\r\n    };\r\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\r\n    if (mode.isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && mode.isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\r\n    mode: VALIDATION_MODE.onSubmit,\r\n    reValidateMode: VALIDATION_MODE.onChange,\r\n    shouldFocusError: true,\r\n};\r\nfunction createFormControl(props = {}) {\r\n    let _options = {\r\n        ...defaultOptions,\r\n        ...props,\r\n    };\r\n    let _formState = {\r\n        submitCount: 0,\r\n        isDirty: false,\r\n        isValidating: false,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        touchedFields: {},\r\n        dirtyFields: {},\r\n        errors: {},\r\n    };\r\n    let _fields = {};\r\n    let _defaultValues = cloneObject(_options.defaultValues) || {};\r\n    let _formValues = _options.shouldUnregister\r\n        ? {}\r\n        : cloneObject(_defaultValues);\r\n    let _stateFlags = {\r\n        action: false,\r\n        mount: false,\r\n        watch: false,\r\n    };\r\n    let _names = {\r\n        mount: new Set(),\r\n        unMount: new Set(),\r\n        array: new Set(),\r\n        watch: new Set(),\r\n    };\r\n    let delayErrorCallback;\r\n    let timer = 0;\r\n    let validateFields = {};\r\n    const _proxyFormState = {\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    };\r\n    const _subjects = {\r\n        watch: createSubject(),\r\n        array: createSubject(),\r\n        state: createSubject(),\r\n    };\r\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\r\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\r\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\r\n    const debounce = (callback) => (wait) => {\r\n        clearTimeout(timer);\r\n        timer = window.setTimeout(callback, wait);\r\n    };\r\n    const _updateValid = async (shouldSkipRender) => {\r\n        let isValid = false;\r\n        if (_proxyFormState.isValid) {\r\n            isValid = _options.resolver\r\n                ? isEmptyObject((await _executeSchema()).errors)\r\n                : await executeBuiltInValidation(_fields, true);\r\n            if (!shouldSkipRender && isValid !== _formState.isValid) {\r\n                _formState.isValid = isValid;\r\n                _subjects.state.next({\r\n                    isValid,\r\n                });\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\r\n        if (args && method) {\r\n            _stateFlags.action = true;\r\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\r\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_fields, name, fieldValues);\r\n            }\r\n            if (_proxyFormState.errors &&\r\n                shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.errors, name))) {\r\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.errors, name, errors);\r\n                unsetEmptyArray(_formState.errors, name);\r\n            }\r\n            if (_proxyFormState.touchedFields &&\r\n                shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.touchedFields, name))) {\r\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\r\n            }\r\n            if (_proxyFormState.dirtyFields) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n            }\r\n            _subjects.state.next({\r\n                isDirty: _getDirty(name, values),\r\n                dirtyFields: _formState.dirtyFields,\r\n                errors: _formState.errors,\r\n                isValid: _formState.isValid,\r\n            });\r\n        }\r\n        else {\r\n            set(_formValues, name, values);\r\n        }\r\n    };\r\n    const updateErrors = (name, error) => {\r\n        set(_formState.errors, name, error);\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\r\n            isUndefined(defaultValue) ||\r\n                (ref && ref.defaultChecked) ||\r\n                shouldSkipSetValueAs\r\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\r\n                : setFieldValue(name, defaultValue);\r\n            _stateFlags.mount && _updateValid();\r\n        }\r\n    };\r\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\r\n        let isFieldDirty = false;\r\n        const output = {\r\n            name,\r\n        };\r\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\r\n        if (_proxyFormState.isDirty) {\r\n            const isPreviousFormDirty = _formState.isDirty;\r\n            _formState.isDirty = output.isDirty = _getDirty();\r\n            isFieldDirty = isPreviousFormDirty !== output.isDirty;\r\n        }\r\n        if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\r\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\r\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\r\n            isCurrentFieldPristine\r\n                ? unset(_formState.dirtyFields, name)\r\n                : set(_formState.dirtyFields, name, true);\r\n            output.dirtyFields = _formState.dirtyFields;\r\n            isFieldDirty =\r\n                isFieldDirty ||\r\n                    isPreviousFieldDirty !== get(_formState.dirtyFields, name);\r\n        }\r\n        if (isBlurEvent && !isPreviousFieldTouched) {\r\n            set(_formState.touchedFields, name, isBlurEvent);\r\n            output.touchedFields = _formState.touchedFields;\r\n            isFieldDirty =\r\n                isFieldDirty ||\r\n                    (_proxyFormState.touchedFields &&\r\n                        isPreviousFieldTouched !== isBlurEvent);\r\n        }\r\n        isFieldDirty && shouldRender && _subjects.state.next(output);\r\n        return isFieldDirty ? output : {};\r\n    };\r\n    const shouldRenderByError = async (name, isValid, error, fieldState) => {\r\n        const previousFieldError = get(_formState.errors, name);\r\n        const shouldUpdateValid = _proxyFormState.isValid && _formState.isValid !== isValid;\r\n        if (props.delayError && error) {\r\n            delayErrorCallback = debounce(() => updateErrors(name, error));\r\n            delayErrorCallback(props.delayError);\r\n        }\r\n        else {\r\n            clearTimeout(timer);\r\n            delayErrorCallback = null;\r\n            error\r\n                ? set(_formState.errors, name, error)\r\n                : unset(_formState.errors, name);\r\n        }\r\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\r\n            !isEmptyObject(fieldState) ||\r\n            shouldUpdateValid) {\r\n            const updatedFormState = {\r\n                ...fieldState,\r\n                ...(shouldUpdateValid ? { isValid } : {}),\r\n                errors: _formState.errors,\r\n                name,\r\n            };\r\n            _formState = {\r\n                ..._formState,\r\n                ...updatedFormState,\r\n            };\r\n            _subjects.state.next(updatedFormState);\r\n        }\r\n        validateFields[name]--;\r\n        if (_proxyFormState.isValidating &&\r\n            !Object.values(validateFields).some((v) => v)) {\r\n            _subjects.state.next({\r\n                isValidating: false,\r\n            });\r\n            validateFields = {};\r\n        }\r\n    };\r\n    const _executeSchema = async (name) => _options.resolver\r\n        ? await _options.resolver({ ..._formValues }, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation))\r\n        : {};\r\n    const executeSchemaAndUpdateState = async (names) => {\r\n        const { errors } = await _executeSchema();\r\n        if (names) {\r\n            for (const name of names) {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(_formState.errors, name, error)\r\n                    : unset(_formState.errors, name);\r\n            }\r\n        }\r\n        else {\r\n            _formState.errors = errors;\r\n        }\r\n        return errors;\r\n    };\r\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\r\n        valid: true,\r\n    }) => {\r\n        for (const name in fields) {\r\n            const field = fields[name];\r\n            if (field) {\r\n                const { _f, ...fieldValue } = field;\r\n                if (_f) {\r\n                    const isFieldArrayRoot = _names.array.has(_f.name);\r\n                    const fieldError = await validateField(field, get(_formValues, _f.name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\r\n                    if (fieldError[_f.name]) {\r\n                        context.valid = false;\r\n                        if (shouldOnlyCheckValid) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    !shouldOnlyCheckValid &&\r\n                        (get(fieldError, _f.name)\r\n                            ? isFieldArrayRoot\r\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\r\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\r\n                            : unset(_formState.errors, _f.name));\r\n                }\r\n                fieldValue &&\r\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\r\n            }\r\n        }\r\n        return context.valid;\r\n    };\r\n    const _removeUnmounted = () => {\r\n        for (const name of _names.unMount) {\r\n            const field = get(_fields, name);\r\n            field &&\r\n                (field._f.refs\r\n                    ? field._f.refs.every((ref) => !live(ref))\r\n                    : !live(field._f.ref)) &&\r\n                unregister(name);\r\n        }\r\n        _names.unMount = new Set();\r\n    };\r\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\r\n        !deepEqual(getValues(), _defaultValues));\r\n    const _getWatch = (names, defaultValue, isGlobal) => {\r\n        const fieldValues = {\r\n            ...(_stateFlags.mount\r\n                ? _formValues\r\n                : isUndefined(defaultValue)\r\n                    ? _defaultValues\r\n                    : isString(names)\r\n                        ? { [names]: defaultValue }\r\n                        : defaultValue),\r\n        };\r\n        return generateWatchOutput(names, _names, fieldValues, isGlobal);\r\n    };\r\n    const _getFieldArray = (name) => compact(get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\r\n    const setFieldValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        let fieldValue = value;\r\n        if (field) {\r\n            const fieldReference = field._f;\r\n            if (fieldReference) {\r\n                !fieldReference.disabled &&\r\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\r\n                fieldValue =\r\n                    isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\r\n                        ? ''\r\n                        : value;\r\n                if (isMultipleSelect(fieldReference.ref)) {\r\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\r\n                }\r\n                else if (fieldReference.refs) {\r\n                    if (isCheckBoxInput(fieldReference.ref)) {\r\n                        fieldReference.refs.length > 1\r\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\r\n                                (checkboxRef.checked = Array.isArray(fieldValue)\r\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\r\n                                    : fieldValue === checkboxRef.value))\r\n                            : fieldReference.refs[0] &&\r\n                                (fieldReference.refs[0].checked = !!fieldValue);\r\n                    }\r\n                    else {\r\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\r\n                    }\r\n                }\r\n                else if (isFileInput(fieldReference.ref)) {\r\n                    fieldReference.ref.value = '';\r\n                }\r\n                else {\r\n                    fieldReference.ref.value = fieldValue;\r\n                    if (!fieldReference.ref.type) {\r\n                        _subjects.watch.next({\r\n                            name,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        (options.shouldDirty || options.shouldTouch) &&\r\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\r\n        options.shouldValidate && trigger(name);\r\n    };\r\n    const setValues = (name, value, options) => {\r\n        for (const fieldKey in value) {\r\n            const fieldValue = value[fieldKey];\r\n            const fieldName = `${name}.${fieldKey}`;\r\n            const field = get(_fields, fieldName);\r\n            (_names.array.has(name) ||\r\n                !isPrimitive(fieldValue) ||\r\n                (field && !field._f)) &&\r\n                !isDateObject(fieldValue)\r\n                ? setValues(fieldName, fieldValue, options)\r\n                : setFieldValue(fieldName, fieldValue, options);\r\n        }\r\n    };\r\n    const setValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const isFieldArray = _names.array.has(name);\r\n        const cloneValue = cloneObject(value);\r\n        set(_formValues, name, cloneValue);\r\n        if (isFieldArray) {\r\n            _subjects.array.next({\r\n                name,\r\n                values: _formValues,\r\n            });\r\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\r\n                options.shouldDirty) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n                _subjects.state.next({\r\n                    name,\r\n                    dirtyFields: _formState.dirtyFields,\r\n                    isDirty: _getDirty(name, cloneValue),\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            field && !field._f && !isNullOrUndefined(cloneValue)\r\n                ? setValues(name, cloneValue, options)\r\n                : setFieldValue(name, cloneValue, options);\r\n        }\r\n        isWatched(name, _names) && _subjects.state.next({});\r\n        _subjects.watch.next({\r\n            name,\r\n        });\r\n    };\r\n    const onChange = async (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            let error;\r\n            let isValid;\r\n            const fieldValue = target.type\r\n                ? getFieldValue(field._f)\r\n                : getEventValue(event);\r\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\r\n            const shouldSkipValidation = (!hasValidation(field._f) &&\r\n                !_options.resolver &&\r\n                !get(_formState.errors, name) &&\r\n                !field._f.deps) ||\r\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\r\n            const watched = isWatched(name, _names, isBlurEvent);\r\n            set(_formValues, name, fieldValue);\r\n            if (isBlurEvent) {\r\n                field._f.onBlur && field._f.onBlur(event);\r\n                delayErrorCallback && delayErrorCallback(0);\r\n            }\r\n            else if (field._f.onChange) {\r\n                field._f.onChange(event);\r\n            }\r\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\r\n            const shouldRender = !isEmptyObject(fieldState) || watched;\r\n            !isBlurEvent &&\r\n                _subjects.watch.next({\r\n                    name,\r\n                    type: event.type,\r\n                });\r\n            if (shouldSkipValidation) {\r\n                return (shouldRender &&\r\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\r\n            }\r\n            !isBlurEvent && watched && _subjects.state.next({});\r\n            validateFields[name] = validateFields[name] ? +1 : 1;\r\n            _subjects.state.next({\r\n                isValidating: true,\r\n            });\r\n            if (_options.resolver) {\r\n                const { errors } = await _executeSchema([name]);\r\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\r\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\r\n                error = errorLookupResult.error;\r\n                name = errorLookupResult.name;\r\n                isValid = isEmptyObject(errors);\r\n            }\r\n            else {\r\n                error = (await validateField(field, get(_formValues, name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\r\n                isValid = await _updateValid(true);\r\n            }\r\n            field._f.deps &&\r\n                trigger(field._f.deps);\r\n            shouldRenderByError(name, isValid, error, fieldState);\r\n        }\r\n    };\r\n    const trigger = async (name, options = {}) => {\r\n        let isValid;\r\n        let validationResult;\r\n        const fieldNames = convertToArrayPayload(name);\r\n        _subjects.state.next({\r\n            isValidating: true,\r\n        });\r\n        if (_options.resolver) {\r\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\r\n            isValid = isEmptyObject(errors);\r\n            validationResult = name\r\n                ? !fieldNames.some((name) => get(errors, name))\r\n                : isValid;\r\n        }\r\n        else if (name) {\r\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\r\n                const field = get(_fields, fieldName);\r\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\r\n            }))).every(Boolean);\r\n            !(!validationResult && !_formState.isValid) && _updateValid();\r\n        }\r\n        else {\r\n            validationResult = isValid = await executeBuiltInValidation(_fields);\r\n        }\r\n        _subjects.state.next({\r\n            ...(!isString(name) ||\r\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\r\n                ? {}\r\n                : { name }),\r\n            ...(_options.resolver || !name ? { isValid } : {}),\r\n            errors: _formState.errors,\r\n            isValidating: false,\r\n        });\r\n        options.shouldFocus &&\r\n            !validationResult &&\r\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\r\n        return validationResult;\r\n    };\r\n    const getValues = (fieldNames) => {\r\n        const values = {\r\n            ..._defaultValues,\r\n            ...(_stateFlags.mount ? _formValues : {}),\r\n        };\r\n        return isUndefined(fieldNames)\r\n            ? values\r\n            : isString(fieldNames)\r\n                ? get(values, fieldNames)\r\n                : fieldNames.map((name) => get(values, name));\r\n    };\r\n    const getFieldState = (name, formState) => ({\r\n        invalid: !!get((formState || _formState).errors, name),\r\n        isDirty: !!get((formState || _formState).dirtyFields, name),\r\n        isTouched: !!get((formState || _formState).touchedFields, name),\r\n        error: get((formState || _formState).errors, name),\r\n    });\r\n    const clearErrors = (name) => {\r\n        name\r\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\r\n            : (_formState.errors = {});\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const setError = (name, error, options) => {\r\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\r\n        set(_formState.errors, name, {\r\n            ...error,\r\n            ref,\r\n        });\r\n        _subjects.state.next({\r\n            name,\r\n            errors: _formState.errors,\r\n            isValid: false,\r\n        });\r\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n    };\r\n    const watch = (name, defaultValue) => isFunction(name)\r\n        ? _subjects.watch.subscribe({\r\n            next: (info) => name(_getWatch(undefined, defaultValue), info),\r\n        })\r\n        : _getWatch(name, defaultValue, true);\r\n    const unregister = (name, options = {}) => {\r\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\r\n            _names.mount.delete(fieldName);\r\n            _names.array.delete(fieldName);\r\n            if (get(_fields, fieldName)) {\r\n                if (!options.keepValue) {\r\n                    unset(_fields, fieldName);\r\n                    unset(_formValues, fieldName);\r\n                }\r\n                !options.keepError && unset(_formState.errors, fieldName);\r\n                !options.keepDirty && unset(_formState.dirtyFields, fieldName);\r\n                !options.keepTouched && unset(_formState.touchedFields, fieldName);\r\n                !_options.shouldUnregister &&\r\n                    !options.keepDefaultValue &&\r\n                    unset(_defaultValues, fieldName);\r\n            }\r\n        }\r\n        _subjects.watch.next({});\r\n        _subjects.state.next({\r\n            ..._formState,\r\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\r\n        });\r\n        !options.keepIsValid && _updateValid();\r\n    };\r\n    const register = (name, options = {}) => {\r\n        let field = get(_fields, name);\r\n        const disabledIsDefined = isBoolean(options.disabled);\r\n        set(_fields, name, {\r\n            ...(field || {}),\r\n            _f: {\r\n                ...(field && field._f ? field._f : { ref: { name } }),\r\n                name,\r\n                mount: true,\r\n                ...options,\r\n            },\r\n        });\r\n        _names.mount.add(name);\r\n        field\r\n            ? disabledIsDefined &&\r\n                set(_formValues, name, options.disabled\r\n                    ? undefined\r\n                    : get(_formValues, name, getFieldValue(field._f)))\r\n            : updateValidAndValue(name, true, options.value);\r\n        return {\r\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\r\n            ...(_options.shouldUseNativeValidation\r\n                ? {\r\n                    required: !!options.required,\r\n                    min: getRuleValue(options.min),\r\n                    max: getRuleValue(options.max),\r\n                    minLength: getRuleValue(options.minLength),\r\n                    maxLength: getRuleValue(options.maxLength),\r\n                    pattern: getRuleValue(options.pattern),\r\n                }\r\n                : {}),\r\n            name,\r\n            onChange,\r\n            onBlur: onChange,\r\n            ref: (ref) => {\r\n                if (ref) {\r\n                    register(name, options);\r\n                    field = get(_fields, name);\r\n                    const fieldRef = isUndefined(ref.value)\r\n                        ? ref.querySelectorAll\r\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\r\n                            : ref\r\n                        : ref;\r\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\r\n                    const refs = field._f.refs || [];\r\n                    if (radioOrCheckbox\r\n                        ? refs.find((option) => option === fieldRef)\r\n                        : fieldRef === field._f.ref) {\r\n                        return;\r\n                    }\r\n                    set(_fields, name, {\r\n                        _f: {\r\n                            ...field._f,\r\n                            ...(radioOrCheckbox\r\n                                ? {\r\n                                    refs: [\r\n                                        ...refs.filter(live),\r\n                                        fieldRef,\r\n                                        ...(!!Array.isArray(get(_defaultValues, name))\r\n                                            ? [{}]\r\n                                            : []),\r\n                                    ],\r\n                                    ref: { type: fieldRef.type, name },\r\n                                }\r\n                                : { ref: fieldRef }),\r\n                        },\r\n                    });\r\n                    updateValidAndValue(name, false, undefined, fieldRef);\r\n                }\r\n                else {\r\n                    field = get(_fields, name, {});\r\n                    if (field._f) {\r\n                        field._f.mount = false;\r\n                    }\r\n                    (_options.shouldUnregister || options.shouldUnregister) &&\r\n                        !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\r\n                        _names.unMount.add(name);\r\n                }\r\n            },\r\n        };\r\n    };\r\n    const _focusError = () => _options.shouldFocusError &&\r\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\r\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            e.persist && e.persist();\r\n        }\r\n        let hasNoPromiseError = true;\r\n        let fieldValues = cloneObject(_formValues);\r\n        _subjects.state.next({\r\n            isSubmitting: true,\r\n        });\r\n        try {\r\n            if (_options.resolver) {\r\n                const { errors, values } = await _executeSchema();\r\n                _formState.errors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                await executeBuiltInValidation(_fields);\r\n            }\r\n            if (isEmptyObject(_formState.errors)) {\r\n                _subjects.state.next({\r\n                    errors: {},\r\n                    isSubmitting: true,\r\n                });\r\n                await onValid(fieldValues, e);\r\n            }\r\n            else {\r\n                if (onInvalid) {\r\n                    await onInvalid({ ..._formState.errors }, e);\r\n                }\r\n                _focusError();\r\n            }\r\n        }\r\n        catch (err) {\r\n            hasNoPromiseError = false;\r\n            throw err;\r\n        }\r\n        finally {\r\n            _formState.isSubmitted = true;\r\n            _subjects.state.next({\r\n                isSubmitted: true,\r\n                isSubmitting: false,\r\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\r\n                submitCount: _formState.submitCount + 1,\r\n                errors: _formState.errors,\r\n            });\r\n        }\r\n    };\r\n    const resetField = (name, options = {}) => {\r\n        if (get(_fields, name)) {\r\n            if (isUndefined(options.defaultValue)) {\r\n                setValue(name, get(_defaultValues, name));\r\n            }\r\n            else {\r\n                setValue(name, options.defaultValue);\r\n                set(_defaultValues, name, options.defaultValue);\r\n            }\r\n            if (!options.keepTouched) {\r\n                unset(_formState.touchedFields, name);\r\n            }\r\n            if (!options.keepDirty) {\r\n                unset(_formState.dirtyFields, name);\r\n                _formState.isDirty = options.defaultValue\r\n                    ? _getDirty(name, get(_defaultValues, name))\r\n                    : _getDirty();\r\n            }\r\n            if (!options.keepError) {\r\n                unset(_formState.errors, name);\r\n                _proxyFormState.isValid && _updateValid();\r\n            }\r\n            _subjects.state.next({ ..._formState });\r\n        }\r\n    };\r\n    const _reset = (formValues, keepStateOptions = {}) => {\r\n        const updatedValues = formValues || _defaultValues;\r\n        const cloneUpdatedValues = cloneObject(updatedValues);\r\n        const values = formValues && !isEmptyObject(formValues)\r\n            ? cloneUpdatedValues\r\n            : _defaultValues;\r\n        if (!keepStateOptions.keepDefaultValues) {\r\n            _defaultValues = updatedValues;\r\n        }\r\n        if (!keepStateOptions.keepValues) {\r\n            if (keepStateOptions.keepDirtyValues) {\r\n                for (const fieldName of _names.mount) {\r\n                    get(_formState.dirtyFields, fieldName)\r\n                        ? set(values, fieldName, get(_formValues, fieldName))\r\n                        : setValue(fieldName, get(values, fieldName));\r\n                }\r\n            }\r\n            else {\r\n                if (isWeb && isUndefined(formValues)) {\r\n                    for (const name of _names.mount) {\r\n                        const field = get(_fields, name);\r\n                        if (field && field._f) {\r\n                            const fieldReference = Array.isArray(field._f.refs)\r\n                                ? field._f.refs[0]\r\n                                : field._f.ref;\r\n                            try {\r\n                                if (isHTMLElement(fieldReference)) {\r\n                                    fieldReference.closest('form').reset();\r\n                                    break;\r\n                                }\r\n                            }\r\n                            catch (_a) { }\r\n                        }\r\n                    }\r\n                }\r\n                _fields = {};\r\n            }\r\n            _formValues = props.shouldUnregister\r\n                ? keepStateOptions.keepDefaultValues\r\n                    ? cloneObject(_defaultValues)\r\n                    : {}\r\n                : cloneUpdatedValues;\r\n            _subjects.array.next({\r\n                values,\r\n            });\r\n            _subjects.watch.next({\r\n                values,\r\n            });\r\n        }\r\n        _names = {\r\n            mount: new Set(),\r\n            unMount: new Set(),\r\n            array: new Set(),\r\n            watch: new Set(),\r\n            watchAll: false,\r\n            focus: '',\r\n        };\r\n        _stateFlags.mount =\r\n            !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\r\n        _stateFlags.watch = !!props.shouldUnregister;\r\n        _subjects.state.next({\r\n            submitCount: keepStateOptions.keepSubmitCount\r\n                ? _formState.submitCount\r\n                : 0,\r\n            isDirty: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.isDirty\r\n                : !!(keepStateOptions.keepDefaultValues &&\r\n                    !deepEqual(formValues, _defaultValues)),\r\n            isSubmitted: keepStateOptions.keepIsSubmitted\r\n                ? _formState.isSubmitted\r\n                : false,\r\n            dirtyFields: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.dirtyFields\r\n                : keepStateOptions.keepDefaultValues && formValues\r\n                    ? getDirtyFields(_defaultValues, formValues)\r\n                    : {},\r\n            touchedFields: keepStateOptions.keepTouched\r\n                ? _formState.touchedFields\r\n                : {},\r\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\r\n        ? formValues(_formValues)\r\n        : formValues, keepStateOptions);\r\n    const setFocus = (name, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const fieldReference = field && field._f;\r\n        if (fieldReference) {\r\n            const fieldRef = fieldReference.refs\r\n                ? fieldReference.refs[0]\r\n                : fieldReference.ref;\r\n            if (fieldRef.focus) {\r\n                fieldRef.focus();\r\n                options.shouldSelect && fieldRef.select();\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        control: {\r\n            register,\r\n            unregister,\r\n            getFieldState,\r\n            _executeSchema,\r\n            _focusError,\r\n            _getWatch,\r\n            _getDirty,\r\n            _updateValid,\r\n            _removeUnmounted,\r\n            _updateFieldArray,\r\n            _getFieldArray,\r\n            _subjects,\r\n            _proxyFormState,\r\n            get _fields() {\r\n                return _fields;\r\n            },\r\n            get _formValues() {\r\n                return _formValues;\r\n            },\r\n            get _stateFlags() {\r\n                return _stateFlags;\r\n            },\r\n            set _stateFlags(value) {\r\n                _stateFlags = value;\r\n            },\r\n            get _defaultValues() {\r\n                return _defaultValues;\r\n            },\r\n            get _names() {\r\n                return _names;\r\n            },\r\n            set _names(value) {\r\n                _names = value;\r\n            },\r\n            get _formState() {\r\n                return _formState;\r\n            },\r\n            set _formState(value) {\r\n                _formState = value;\r\n            },\r\n            get _options() {\r\n                return _options;\r\n            },\r\n            set _options(value) {\r\n                _options = {\r\n                    ..._options,\r\n                    ...value,\r\n                };\r\n            },\r\n        },\r\n        trigger,\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        setValue,\r\n        getValues,\r\n        reset,\r\n        resetField,\r\n        clearErrors,\r\n        unregister,\r\n        setError,\r\n        setFocus,\r\n        getFieldState,\r\n    };\r\n}\n\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useForm(props = {}) {\r\n    const _formControl = React.useRef();\r\n    const [formState, updateFormState] = React.useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        submitCount: 0,\r\n        dirtyFields: {},\r\n        touchedFields: {},\r\n        errors: {},\r\n        defaultValues: props.defaultValues,\r\n    });\r\n    if (!_formControl.current) {\r\n        _formControl.current = {\r\n            ...createFormControl(props),\r\n            formState,\r\n        };\r\n    }\r\n    const control = _formControl.current.control;\r\n    control._options = props;\r\n    useSubscribe({\r\n        subject: control._subjects.state,\r\n        callback: React.useCallback((value) => {\r\n            if (shouldRenderFormState(value, control._proxyFormState, true)) {\r\n                control._formState = {\r\n                    ...control._formState,\r\n                    ...value,\r\n                };\r\n                updateFormState({ ...control._formState });\r\n            }\r\n        }, [control]),\r\n    });\r\n    React.useEffect(() => {\r\n        if (!control._stateFlags.mount) {\r\n            control._proxyFormState.isValid && control._updateValid();\r\n            control._stateFlags.mount = true;\r\n        }\r\n        if (control._stateFlags.watch) {\r\n            control._stateFlags.watch = false;\r\n            control._subjects.state.next({});\r\n        }\r\n        control._removeUnmounted();\r\n    });\r\n    React.useEffect(() => {\r\n        formState.submitCount && control._focusError();\r\n    }, [control, formState.submitCount]);\r\n    _formControl.current.formState = getProxyFormState(formState, control);\r\n    return _formControl.current;\r\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import metadata from './block.json';\nconst { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks; \n\n// Import JS\nimport edit from './edit';\n\nexport const name = 'has/click-to-share';\nregisterBlockType( metadata, {\n\ttitle: __( 'Click to Share', 'highlight-and-share' ), // Block title.\n\tdesription: __( 'A block for clicking and sharing text.', 'highlight-and-share' ),\n\ticon: <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"share-alt\" className=\"svg-inline--fa fa-share-alt fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"></path></svg>,\n\tcategory: 'common', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'click', 'highlight-and-share' ),\n\t\t__( 'social', 'highlight-and-share' ),\n\t\t__( 'better', 'highlight-and-share' ),\n\t\t__( 'tweet', 'highlight-and-share' ),\n\t\t__( 'twitter', 'highlight-and-share' ),\n\t\t__( 'facebook', 'highlight-and-share' ),\n\t\t__( 'share', 'highlight-and-share' ),\n\t\t__( 'feature', 'highlight-and-share' ),\n\t],\n\tedit,\n\n\t// Render via PHP\n\tsave() {\n\t\treturn null;\n\t},\n} );"],"names":["classnames","useEffect","ColorPicker","DimensionsControlBlock","useDeviceType","buildDimensionsCSS","__","wp","i18n","components","PanelBody","RangeControl","SelectControl","TextControl","ButtonGroup","Button","BaseControl","blockEditor","InspectorControls","RichText","useBlockProps","useInstanceId","compose","HAS_Click_To_Share","props","deviceType","setDeviceType","generatedUniqueId","attributes","setAttributes","shareText","backgroundColor","textColor","fontSize","clickText","padding","border","borderRadius","borderColor","fontWeight","clickShareFontSize","maxWidth","alignment","marginTop","marginRight","marginBottom","marginLeft","paddingSize","uniqueId","portPadding","desktop","top","right","bottom","left","unit","unitSync","hasStyles","color","margin","fontWeightArr","Array","push","label","value","alignmentArr","panelHeader","document","querySelector","panelHeaderHeight","offsetHeight","inspectorControls","e","newValues","slug","newValue","has_gutenberg","colorPalette","block","width","height","blockProps","className","React","useState","hexToRgba","Tooltip","Popover","ColorPalette","HASColorPicker","colorKey","setColorKey","isVisible","setIsVisible","setColor","defaultColor","defaultColors","onChange","onOpacityChange","alpha","valueOpacity","getDefaultColors","existingColors","newColors","forEach","maybeNewColor","index","includes","opacityIcon","toggleVisible","toggleClose","background","newColor","hex","opacityValue","UnitPicker","sprintf","_x","useForm","Controller","useWatch","useFormState","classNames","geHierarchicalPlaceholderValue","getHierarchicalValueUnit","getHierarchicalValueUnitSync","screenSize","setScreenSize","getDefaultValues","mobile","values","tablet","defaultValues","register","control","handleSubmit","setValue","getValues","reset","trigger","formValues","errors","isDirty","dirtyFields","touchedFields","labelTop","labelRight","labelBottom","labelLeft","units","onValuesChange","toLowerCase","changeAllValues","syncUnits","numbers","syncValue","Math","max","apply","onChangeUnits","onDimensionChange","syncIcon","field","parseFloat","UnitChooser","onClick","map","unitName","useDispatch","useSelect","dispatch","__experimentalSetPreviewDeviceType","setPreviewDeviceType","select","__experimentalGetPreviewDeviceType","experimentalGetPreviewDeviceType","type","shorthandCSS","dimensions","output","trim","metadata","registerBlockType","blocks","edit","name","title","desription","icon","category","keywords","save"],"sourceRoot":""}