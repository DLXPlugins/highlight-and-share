{"version":3,"file":"highlight-and-share.js","mappings":"+HAAE,WACD,aAGA,IAAMA,EAAMC,oBAGNC,EAASF,EAAIE,OACbC,EAASH,EAAIG,OAEfC,EAAiB,KAGfC,EAAeC,SAASC,cAAe,4BAC7C,GAAK,OAASF,EAAd,CAIA,IAMMG,EAH2BH,EAAaE,cAAe,gCAGvBE,wBAChCC,EAAiBF,EAAKG,MAStBC,GARkBJ,EAAKK,OAQX,SAAEC,GACnB,IAAMC,EAAQC,OAAOC,iBAAkBH,GACvC,MAAyB,SAAlBC,EAAMG,SAA2C,WAArBH,EAAMI,YAA6C,MAAlBJ,EAAMK,OAC3E,GAKMC,EAA2B,WAChC,IAAMC,EAAgBhB,SAASiB,iBAAkB,gCAC5C,OAASD,GAEbA,EAAcE,SAAS,SAAEC,GAEnB,OAASA,EAAUC,QAAS,6BAChCD,EAAUE,QAEZ,GAEF,EAcMC,EAAqB,SAAEd,EAASe,EAAKC,EAAOC,EAAMC,GACvD,IAAMC,EAAgBnB,EAAQS,iBAlDR,iJAmDtB,GAAK,OAASU,EACb,OAAOnB,EAIRmB,EAAcT,SAAS,SAAEU,GAExB,IAAMC,EAAgBD,EAAG3B,cAAe,KACpC6B,EAAaD,EAAcE,aAAc,QAO7CD,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAaA,EAAWE,QAAS,QAASC,mBAAoBV,KACtCS,QAAS,aAAcC,mBAAoBvC,EAAIwC,oBAC/CF,QAAS,UAAWC,mBAAoBT,KACxCQ,QAAS,SAAUC,mBAAoBR,KACvCO,QAAS,aAAcC,mBAAoBP,KAC3CM,QAAS,WAAYC,mBAAoBrC,KACzCoC,QAAS,WAAYC,mBAAoBpC,IACjEgC,EAAcM,aAAc,OAAQL,GAGpC,IAAIM,EAAaR,EAAGG,aAAc,cAC7B,OAASK,IACbA,EAAaA,EAAWJ,QAAS,UAAWC,mBAAoBT,IAChEI,EAAGO,aAAc,aAAcC,IAIhC,IAAIC,EAAWT,EAAGG,aAAc,YAC3B,OAASM,IACbA,EAAWA,EAASL,QAAS,QAASC,mBAAoBV,IAC1DK,EAAGO,aAAc,WAAYE,GAE/B,GACD,EAYMC,EAAa,SAAEb,EAAMD,EAAOe,EAAMb,EAAUc,GAAiC,IAA3BC,EAAiB,UAAH,6CAAG,KAExE,IAAK,IAAU9C,oBAAoB+C,eAAgB,IAAU/C,oBAAoBgD,gBAAiB,IAAUhD,oBAAoBiD,gBAAiB,IAAUjD,oBAAoBkD,UAAW,IAAUlD,oBAAoBmD,UAAW,IAAUnD,oBAAoBoD,iBAAkB,IAAUpD,oBAAoBqD,WAAjT,CAKAjC,IAGA,IAAMkC,EAAWlD,EAAaE,cAAe,gCAAiCiD,WAAW,GAiBzF,OAfAD,EAASxC,MAAMG,QAAU,QACzBqC,EAASxC,MAAM0C,SAAW,WAC1BF,EAASxC,MAAMJ,MAAQ,OACvB4C,EAASxC,MAAMF,OAAS,OACxB0C,EAASxC,MAAO,WAAc,IAGzBwC,EAASG,UAAUC,SAAU,0BACjCJ,EAASxC,MAAMG,QAAU,eAG1BU,EAAoB2B,EAAUV,EAAMf,EAAOC,EAAMC,GAGjD1B,SAASsD,KAAKC,YAAaN,GAClBT,GACR,IAAK,YAEJgB,EAAkCP,GAClC,MACD,IAAK,SAEJQ,EAA+BR,EAAUR,GACzC,MACD,IAAK,MAEJiB,EAA4BT,EAAUR,GAKxC,IAAMd,EAAgB3B,SAASC,cAAe,QAASgB,iBAAkB,oGACpE,OAASU,GAEbA,EAAcT,SAAS,SAAEU,GACnBtB,EAAWsB,IACfA,EAAG3B,cAAe,KAAM0D,iBAAkB,SAAS,SAAEC,GACpDA,EAAMC,iBAGN,IAAMtC,EAAMK,EAAG3B,cAAe,KAAM8B,aAAc,QAG7C,oBAAuB+B,WAE3BA,UAAUC,KAAM,CACfH,MAAO,sBACPI,aAAcvC,EACdwC,gBAAiB1B,EACjB2B,kBAAmB1C,EACnB2C,aAAc3B,EACd4B,iBAAkBxC,EAAGG,aAAc,eAIrCrB,OAAO2D,KAAM9C,EAAK,sBAAuB,+EAC1C,GAEF,IAID,IAAM+C,EAActE,SAASiB,iBAAkB,aAC1C,OAASqD,GACbA,EAAYpD,SAAS,SAAEU,GACjBtB,EAAWsB,IACfA,EAAG+B,iBAAkB,SAAS,SAAEC,GAC/BA,EAAMC,iBACN,IAAMU,EAAW,IAAIC,KAAM,CAAE/C,GAAQ,CAAEe,KAAM,eACvCiC,EAAO,CAAE,IAAIC,cAAc,EAAD,GAAMH,EAAS/B,KAAQ+B,KACvDI,UAAUC,UAAUC,MAAOJ,GAGtB,oBAAuBX,WAE3BA,UAAUC,KAAM,CACfH,MAAO,sBACPI,aAAcvC,EACdwC,gBAAiB1B,EACjB2B,kBAAmB1C,EACnB2C,aAAc3B,EACd4B,iBAAkB,QAGrB,GAEF,GA9FD,CAkGD,EAOMZ,EAAmC,SAAEhD,GAE1C,IAAMsE,EAAcpE,OAAOqE,WACrBC,EAAetE,OAAOuE,YAGtBC,EAAgBxE,OAAOyE,eAAeC,WAAY,GAAIjF,wBACtDkF,EAAeH,EAAcI,IAC7BC,EAAgBL,EAAcM,KAC9BC,EAAiBP,EAAc7E,MAC/BqF,EAAkBR,EAAc3E,OAGjCC,EAAQmF,YAAcb,IAC1BtE,EAAQC,MAAMmF,SAAad,EAAc,GAAO,KAChDtE,EAAQ4C,UAAUyC,IAAK,yBAIxB,IAAMC,EAAetF,EAAQL,wBACvB4F,EAAgBD,EAAazF,MAC7B2F,EAAiBF,EAAavF,OAEpC,GAAKC,EAAQ4C,UAAUC,SAAU,wBAA2B,CAM3D,IAAM4C,EAAaV,EAAgB7E,OAAOwF,SAAYH,EAAgB,IAEhEI,EAAed,EAAe3E,OAAO0F,QAAcJ,EAAiB,EAAQN,EAAkB,EAGpG,GAFAlF,EAAQ4C,UAAUyC,IAAK,wBAEhBR,EAAe3E,OAAO0F,QAAcJ,EAAiB,EAAM,EAAI,CACrExF,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQD,EAAe3E,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQmF,EAAkB,EAAQ,KAChHlF,EAAQC,MAAM+E,KAASD,EAAgB7E,OAAOwF,QAAUI,EAAajG,MAAQ,GAAO,IAGrF,MAAO,GAAOgF,EAAe3E,OAAO0F,QAAcJ,EAAiB,EAAMhB,EAAe,CACvFxE,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQD,EAAe3E,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQmF,EAAkB,EAAQ,KAChHlF,EAAQC,MAAM+E,KAASD,EAAgB7E,OAAOwF,QAAUI,EAAajG,MAAQ,GAAO,IACrF,MACCG,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQC,MAAM6E,IAAMa,EAAa,KACjC3F,EAAQ4C,UAAU/B,OAAQ,uBAE5B,KAAO,CAMN,IAAM4E,EAAaV,EAAgB7E,OAAOwF,QAAYT,EAAiB,EAAQM,EAAgB,EAEzFI,EAAed,EAAe3E,OAAO0F,QAAYJ,EAAiB,GAGxExF,EAAQ4C,UAAUyC,IAAK,wBAClBI,EAAa,EAEjBzF,EAAQC,MAAM+E,KAAO,OACVS,EAAa7F,EAAiB0E,EAEzCtE,EAAQC,MAAM8F,MAAQ,QAGtB/F,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQ4C,UAAU/B,OAAQ,yBAI3Bb,EAAQC,MAAM6E,IAAMa,EAAa,IAClC,CACD,EAQM1C,EAAgC,SAAEjD,EAASiC,GAEhD,IAAMqC,EAAcpE,OAAOqE,WACrBC,EAAetE,OAAOuE,YAGtBuB,EAAa/D,EAAetC,wBAC5BsG,EAAYD,EAAWlB,IACvBoB,EAAaF,EAAWhB,KACxBmB,EAAcH,EAAWnG,MACzBuG,EAAeJ,EAAWjG,OAG1BuF,EAAetF,EAAQL,wBACvB4F,EAAgBD,EAAazF,MAC7B2F,EAAiBF,EAAavF,OAEpC,GAAKC,EAAQ4C,UAAUC,SAAU,wBAA2B,CAM3D,IAAM4C,EAAaS,EAAahG,OAAOwF,SAAYH,EAAgB,IAE7DI,EAAeM,EAAY/F,OAAO0F,QAAcJ,EAAiB,EAAQY,EAAe,EAG9F,GAFApG,EAAQ4C,UAAUyC,IAAK,wBAEhBY,EAAY/F,OAAO0F,QAAcJ,EAAiB,EAAM,EAAI,CAClExF,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQmB,EAAY/F,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQqG,EAAe,EAAQ,KAC1G,IAAMC,EAAiBH,EAAahG,OAAOwF,QAAUI,EAAajG,MAAQ,GAEzEG,EAAQC,MAAM+E,KADVqB,EAAe,EACE,OAEAA,EAAe,IAItC,MAAO,GAAOJ,EAAY/F,OAAO0F,QAAcJ,EAAiB,EAAMhB,EAAe,CACpFxE,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQmB,EAAY/F,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQqG,EAAe,EAAQ,KAC1G,IAAMC,EAAiBH,EAAahG,OAAOwF,QAAUI,EAAajG,MAAQ,GAEzEG,EAAQC,MAAM+E,KADVqB,EAAe,EACE,OAEAA,EAAe,IAEtC,MACCrG,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQC,MAAM6E,IAAMa,EAAa,KACjC3F,EAAQ4C,UAAU/B,OAAQ,uBAE5B,KAAO,CAEN,IAAM4E,EAAaS,EAAahG,OAAOwF,QAAYS,EAAc,EAAQZ,EAAgB,EAEnFI,EAAeM,EAAY/F,OAAO0F,QAAYJ,EAAiB,GAGrExF,EAAQ4C,UAAUyC,IAAK,wBAClBI,EAAa,EAEjBzF,EAAQC,MAAM+E,KAAO,OACVS,EAAa7F,EAAiB0E,EAEzCtE,EAAQC,MAAM8F,MAAQ,QAGtB/F,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQ4C,UAAU/B,OAAQ,yBAI3Bb,EAAQC,MAAM6E,IAAMa,EAAa,IAClC,CACD,EAQMzC,EAA6B,SAAElD,EAASiC,GAE7C,IAAMqC,EAAcpE,OAAOqE,WACrBC,EAAetE,OAAOuE,YAGtB6B,EAAUrE,EAAetC,wBACzB4G,EAASD,EAAQxB,IACjB0B,EAAUF,EAAQtB,KAClByB,EAAWH,EAAQzG,MACnB6G,EAAYJ,EAAQvG,OAGrBC,EAAQL,wBAAwBE,MAAQyE,IAC5CtE,EAAQC,MAAMmF,SAAad,EAAc,GAAO,KAChDtE,EAAQ4C,UAAUyC,IAAK,yBAIxB,IAAMC,EAAetF,EAAQL,wBACvB4F,EAAgBD,EAAazF,MAC7B2F,EAAiBF,EAAavF,OAEpC,GAAKC,EAAQ4C,UAAUC,SAAU,wBAA2B,CAM3D,IAAM4C,EAAae,EAAUtG,OAAOwF,SAAYH,EAAgB,IAE1DI,EAAeY,EAASrG,OAAO0F,QAAcJ,EAAiB,EAAQkB,EAAY,EAGxF,GAFA1G,EAAQ4C,UAAUyC,IAAK,wBAEhBkB,EAASrG,OAAO0F,QAAcJ,EAAiB,EAAM,EAAI,CAC/DxF,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQyB,EAASrG,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQ2G,EAAY,EAAQ,KACpG,IAAML,EAAiBG,EAAUtG,OAAOwF,QAAUI,EAAajG,MAAQ,GAEtEG,EAAQC,MAAM+E,KADVqB,EAAe,EACE,OAEAA,EAAe,IAItC,MAAO,GAAOE,EAASrG,OAAO0F,QAAcJ,EAAiB,EAAMhB,EAAe,CACjFxE,EAAQC,MAAMG,QAAU,OACxBJ,EAAQC,MAAM4F,oBAAsB,UAGpC,IAAMC,EAAe9F,EAAQL,wBAG7BK,EAAQC,MAAM6E,IAAQyB,EAASrG,OAAO0F,QAAYE,EAAa/F,OAAS,EAAQ2G,EAAY,EAAQ,KACpG,IAAML,EAAiBG,EAAUtG,OAAOwF,QAAUI,EAAajG,MAAQ,GAEtEG,EAAQC,MAAM+E,KADVqB,EAAe,EACE,OAEAA,EAAe,IAEtC,MACCrG,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQC,MAAM6E,IAAMa,EAAa,KACjC3F,EAAQ4C,UAAU/B,OAAQ,uBAE5B,KAAO,CAEN,IAAM4E,EAAae,EAAUtG,OAAOwF,QAAYe,EAAW,EAAQlB,EAAgB,EAE7EI,EAAeY,EAASrG,OAAO0F,QAAYJ,EAAiB,GAGlExF,EAAQ4C,UAAUyC,IAAK,wBAClBI,EAAa,EAEjBzF,EAAQC,MAAM+E,KAAO,OACVS,EAAa7F,EAAiB0E,EAEzCtE,EAAQC,MAAM8F,MAAQ,QAGtB/F,EAAQC,MAAM+E,KAAOS,EAAa,KAClCzF,EAAQ4C,UAAU/B,OAAQ,yBAI3Bb,EAAQC,MAAM6E,IAAMa,EAAa,IAClC,CACD,EAKMgB,EAAYzH,EAAI0H,QACtB,GAAK,KAAOD,EAAZ,CAKA,IAAME,EAAWrH,SAASiB,iBAAkBkG,GACvC,OAASE,GAuCbA,EAASnG,SAAS,SAAEV,GAInBA,EAAQmD,iBAAkB,WAAW,SAAEC,IArCV,SAAEA,GAAW,UAE1C7C,IAGA,IAAMuG,EAAYtH,SAASuH,YAAYpC,eAGjCqC,EAAeF,EAAUG,WAAWC,OAE1C,GAAK,KAAOF,EAKZ,GAAKF,IAAcxH,EAAnB,CAIAA,EAAiBwH,EAGjB,IAAMK,EAAgB/D,EAAMgE,OAAOxG,QAAS,qBAGtCmB,EAAgC,QAA5B,EAAGoF,EAAcE,QAAQtG,WAAG,QAAIb,OAAOoH,SAASvF,KACpDf,EAAmC,QAA9B,EAAGmG,EAAcE,QAAQrG,aAAK,QAAIxB,SAASwB,MAChDE,EAAyC,QAAjC,EAAGiG,EAAcE,QAAQnG,gBAAQ,QAAI,GAGnDY,EAAYkF,EAAchG,EAAOe,EAAMb,EAAU,YAZjD,MAFC5B,EAAiB,IAenB,CAOEiI,CAAuBnE,EACxB,GACD,IAID,IAAMoE,EAAiBhI,SAASiB,iBAAkB,oBAC7C,OAAS+G,GAoCbA,EAAe9G,SAAS,SAAEV,GAEzBA,EAAQmD,iBAAkB,SAAS,SAAEC,IA/BR,SAAEA,EAAOpD,GAAa,UAKnD,GAHAO,IAGKP,IAAYV,EAAjB,CAIAA,EAAiBU,EAGjB,IAAMgH,EAAehH,EAAQyH,UAAUP,OAEvC,GAAK,KAAOF,EAAZ,CAKA,IAAMG,EAAgB/D,EAAMgE,OAAOxG,QAAS,qBAGtCmB,EAAgC,QAA5B,EAAGoF,EAAcE,QAAQtG,WAAG,QAAIb,OAAOoH,SAASvF,KACpDf,EAAmC,QAA9B,EAAGmG,EAAcE,QAAQrG,aAAK,QAAIxB,SAASwB,MAChDE,EAAyC,QAAjC,EAAGiG,EAAcE,QAAQnG,gBAAQ,QAAI,GAGnDY,EAAYkF,EAAchG,EAAOe,EAAMb,EAAU,SAAUlB,EAX3D,CARA,MAFCV,EAAiB,IAsBnB,CAIEoI,CAAuBtE,EAAOpD,EAC/B,GACD,IAID,IAAM2H,EAAcnI,SAASiB,iBAAkB,qBAC1C,OAASkH,GACbA,EAAYjH,SAAS,SAAEV,GACtBA,EAAQmD,iBAAkB,SAAS,SAAEC,GAAW,UAO/C,GANAA,EAAMC,iBAGN9C,IAGKP,IAAYV,EAAjB,CAIAA,EAAiBU,EAGjB,IAGMgH,EAHiBhH,EAAQ4H,WAAWnI,cAAe,4BAGrB8B,aAAc,kBAG5C4F,EAAgBnH,EAAQY,QAAS,qBAGjCmB,EAAgC,QAA5B,EAAGoF,EAAcE,QAAQtG,WAAG,QAAIb,OAAOoH,SAASvF,KACpDf,EAAmC,QAA9B,EAAGmG,EAAcE,QAAQrG,aAAK,QAAIxB,SAASwB,MAChDE,EAAyC,QAAjC,EAAGiG,EAAcE,QAAQnG,gBAAQ,QAAI,GAGnDY,EAAYkF,EAAchG,EAAOe,EAAMb,EAAU,MAAOlB,EAAQY,QAAS,+BAlBzE,MAFCtB,EAAiB,IAqBnB,GACD,GArID,CApfA,CA2nBA,CA3oBC,E","sources":["webpack://highlight-and-share/./src/frontendjs/highlight-and-share.js"],"sourcesContent":["( function() {\n\t'use strict';\n\n\t// Get localized var.\n\tconst HAS = highlight_and_share;\n\n\t// Set variables.\n\tconst prefix = HAS.prefix;\n\tconst suffix = HAS.suffix;\n\n\tlet currentElement = null;\n\n\t// Main HAS container in the footer. If \".highlight-and-share-wrapper\" doesn't have this parent, it is a clone.\n\tconst hasContainer = document.querySelector( '#has-highlight-and-share' );\n\tif ( null === hasContainer ) {\n\t\treturn;\n\t}\n\n\tconst socialNetworks = '.has_whatsapp, .has_facebook, .has_twitter, .has_copy, .has_email, .has_reddit, .has_telegram, .has_linkedin, .has_xing, .has_signal, .has_vk';\n\n\t// Get highlight and share container dimensions.\n\tconst hasSharingIconsContainer = hasContainer.querySelector( '.highlight-and-share-wrapper' );\n\n\t// Populate container dimensions/width/height.\n\tconst rect = hasSharingIconsContainer.getBoundingClientRect();\n\tconst hasSharerWidth = rect.width;\n\tconst hasSharerHeight = rect.height;\n\n\t/**\n\t * Determine if an element is visible or not.\n\t *\n\t * @param {Element} element The element to check if visible or not.\n\t * @return {boolean} true if visible, false if not.\n\t */\n\tconst isVisible = ( element ) => {\n\t\tconst style = window.getComputedStyle( element );\n\t\treturn style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0';\n\t};\n\n\t/**\n\t * Remove any visible HAS containers.\n\t */\n\tconst hasRemoveVisibleElements = () => {\n\t\tconst hasContainers = document.querySelectorAll( '.highlight-and-share-wrapper' );\n\t\tif ( null !== hasContainers ) {\n\t\t\t// Remove visible containers from dom.\n\t\t\thasContainers.forEach( ( container ) => {\n\t\t\t\t// If the container is a clone, remove it. (doesn't have the parent \"#has-highlight-and-share\").\n\t\t\t\tif ( null === container.closest( '#has-highlight-and-share' ) ) {\n\t\t\t\t\tcontainer.remove();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\n\t/**\n\t * Replace attributes of element and child elements.\n\t *\n\t * @param {Element} element  The element to replace attributes on with child social networks.\n\t * @param {string}  url      The URL of the post/page.\n\t * @param {string}  title    The title of the post/page.\n\t * @param {string}  text     Text that is selected or to be shared\n\t * @param {string}  hashtags Hashtags present on the post/page.\n\t *\n\t * @return {Element} The element with replaced attributes.\n\t *\n\t */\n\tconst hasVariableReplace = ( element, url, title, text, hashtags ) => {\n\t\tconst queryElements = element.querySelectorAll( socialNetworks );\n\t\tif ( null === queryElements ) {\n\t\t\treturn element;\n\t\t}\n\n\t\t// Loop through elements.\n\t\tqueryElements.forEach( ( el ) => {\n\t\t\t// Replace attributes in URL.\n\t\t\tconst elementAnchor = el.querySelector( 'a' );\n\t\t\tlet elementUrl = elementAnchor.getAttribute( 'href' );\n\t\t\telementUrl = elementUrl.replace( '%url%', encodeURIComponent( url ) );\n\t\t\telementUrl = elementUrl.replace( '%username%', encodeURIComponent( HAS.twitter_username ) );\n\t\t\telementUrl = elementUrl.replace( '%title%', encodeURIComponent( title ) );\n\t\t\telementUrl = elementUrl.replace( '%text%', encodeURIComponent( text ) );\n\t\t\telementUrl = elementUrl.replace( '%hashtags%', encodeURIComponent( hashtags ) );\n\t\t\telementUrl = elementUrl.replace( '%prefix%', encodeURIComponent( prefix ) );\n\t\t\telementUrl = elementUrl.replace( '%suffix%', encodeURIComponent( suffix ) );\n\t\t\telementAnchor.setAttribute( 'href', elementUrl );\n\n\t\t\t// Replace the title data attribute.\n\t\t\tlet title_attr = el.getAttribute( 'data-title' );\n\t\t\tif ( null !== title_attr ) {\n\t\t\t\ttitle_attr = title_attr.replace( '%title%', encodeURIComponent( title ) );\n\t\t\t\tel.setAttribute( 'data-title', title_attr );\n\t\t\t}\n\n\t\t\t// Replace the url data attribute.\n\t\t\tlet url_attr = el.getAttribute( 'data-url' );\n\t\t\tif ( null !== url_attr ) {\n\t\t\t\turl_attr = url_attr.replace( '%url%', encodeURIComponent( url ) );\n\t\t\t\tel.setAttribute( 'data-url', url_attr );\n\t\t\t}\n\t\t} );\n\t};\n\n\t/**\n\t * Display the Highlight and Share Interface.\n\t *\n\t * @param {string}  text           Text that is selected or to be shared.\n\t * @param {string}  title          The title of the post/page.\n\t * @param {string}  href           The URL of the post/page.\n\t * @param {string}  hashtags       Hashtags present on the post/page.\n\t * @param {string}  type           The type of display (selection|inline|cta).\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst hasDisplay = ( text, title, href, hashtags, type, triggerElement = null ) => {\n\t\t// Do not show the interface if nothing is enabled.\n\t\tif ( false === highlight_and_share.show_twitter && false === highlight_and_share.show_facebook && false === highlight_and_share.show_linkedin && false === highlight_and_share.show_ok && false === highlight_and_share.show_vk && false === highlight_and_share.show_pinterest && false === highlight_and_share.show_email ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove any existing visible interfaces/containers.\n\t\thasRemoveVisibleElements();\n\n\t\t// Get interface clone.\n\t\tconst hasClone = hasContainer.querySelector( '.highlight-and-share-wrapper' ).cloneNode( true );\n\t\t// Style the interface via inline styles and position.\n\t\thasClone.style.display = 'block';\n\t\thasClone.style.position = 'absolute';\n\t\thasClone.style.width = 'auto';\n\t\thasClone.style.height = 'auto';\n\t\thasClone.style[ 'z-index' ] = 10000;\n\n\t\t// Change to inline flex if vertical.\n\t\tif ( hasClone.classList.contains( 'orientation-vertical' ) ) {\n\t\t\thasClone.style.display = 'inline-flex';\n\t\t}\n\n\t\thasVariableReplace( hasClone, href, title, text, hashtags ); // Replaced by reference.\n\n\t\t// Add to the end of the body element.\n\t\tdocument.body.appendChild( hasClone );\n\t\tswitch ( type ) {\n\t\t\tcase 'selection':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionSelection( hasClone );\n\t\t\t\tbreak;\n\t\t\tcase 'inline':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionInline( hasClone, triggerElement );\n\t\t\t\tbreak;\n\t\t\tcase 'cta':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionCta( hasClone, triggerElement );\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Setup event handlers for links (for desktop).\n\t\tconst queryElements = document.querySelector( 'body' ).querySelectorAll( '.has_whatsapp, .has_facebook, .has_twitter, .has_telegram, .has_linkedin, .has_xing, .has_reddit' );\n\t\tif ( null !== queryElements ) {\n\t\t\t// Add click listeners to visible elements.\n\t\t\tqueryElements.forEach( ( el ) => {\n\t\t\t\tif ( isVisible( el ) ) {\n\t\t\t\t\tel.querySelector( 'a' ).addEventListener( 'click', ( event ) => {\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Get the URL.\n\t\t\t\t\t\tconst url = el.querySelector( 'a' ).getAttribute( 'href' );\n\n\t\t\t\t\t\t// Set dataLayer event for GTM.\n\t\t\t\t\t\tif ( 'undefined' !== typeof dataLayer ) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\tdataLayer.push( {\n\t\t\t\t\t\t\t\tevent: 'highlight-and-share',\n\t\t\t\t\t\t\t\thasShareText: text,\n\t\t\t\t\t\t\t\thasSharePostUrl: href,\n\t\t\t\t\t\t\t\thasSharePostTitle: title,\n\t\t\t\t\t\t\t\thasShareType: type, /* selection|cta|inline */\n\t\t\t\t\t\t\t\thasSocialNetwork: el.getAttribute( 'data-type' ),\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.open( url, 'Highlight and Share', 'width=575,height=430,toolbar=false,menubar=false,location=false,status=false' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Set up copy event.\n\t\tconst copyButtons = document.querySelectorAll( '.has_copy' );\n\t\tif ( null !== copyButtons ) {\n\t\t\tcopyButtons.forEach( ( el ) => {\n\t\t\t\tif ( isVisible( el ) ) {\n\t\t\t\t\tel.addEventListener( 'click', ( event ) => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst copyBlob = new Blob( [ text ], { type: 'text/plain' } );\n\t\t\t\t\t\tconst data = [ new ClipboardItem( { [ copyBlob.type ]: copyBlob } ) ];\n\t\t\t\t\t\tnavigator.clipboard.write( data );\n\n\t\t\t\t\t\t// Set dataLayer event for GTM.\n\t\t\t\t\t\tif ( 'undefined' !== typeof dataLayer ) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\tdataLayer.push( {\n\t\t\t\t\t\t\t\tevent: 'highlight-and-share',\n\t\t\t\t\t\t\t\thasShareText: text,\n\t\t\t\t\t\t\t\thasSharePostUrl: href,\n\t\t\t\t\t\t\t\thasSharePostTitle: title,\n\t\t\t\t\t\t\t\thasShareType: type, /* selection|cta|inline */\n\t\t\t\t\t\t\t\thasSocialNetwork: 'copy',\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Todo - set up email event.\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the current selection. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element The cloned social sharer element.\n\t */\n\tconst setHasContainerPositionSelection = ( element ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst selectionRect = window.getSelection().getRangeAt( 0 ).getBoundingClientRect();\n\t\tconst selectionTop = selectionRect.top; // top position relative to view port.\n\t\tconst selectionLeft = selectionRect.left; // left position relative to view port.\n\t\tconst selectionWidth = selectionRect.width;\n\t\tconst selectionHeight = selectionRect.height;\n\n\t\t// Set container width to smaller than window width if larger.\n\t\tif ( element.offsetWidth > windowWidth ) {\n\t\t\telement.style.maxWidth = ( windowWidth - 20 ) + 'px';\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t}\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = selectionLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( selectionTop + window.scrollY ) - ( hasCloneHeight / 2 ) + ( selectionHeight / 2 );\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( ( selectionTop + window.scrollY ) - ( hasCloneHeight / 2 ) < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( selectionTop + window.scrollY - ( newCloneRect.height / 2 ) + ( selectionHeight / 2 ) ) + 'px';\n\t\t\t\telement.style.left = ( selectionLeft + window.scrollX - newCloneRect.width - 15 ) + 'px';\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if ( ( selectionTop + window.scrollY ) + ( hasCloneHeight / 2 ) > windowHeight ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( selectionTop + window.scrollY - ( newCloneRect.height / 2 ) + ( selectionHeight / 2 ) ) + 'px';\n\t\t\t\telement.style.left = ( selectionLeft + window.scrollX - newCloneRect.width - 15 ) + 'px';\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * Get horizontal position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = selectionLeft + window.scrollX + ( selectionWidth / 2 ) - ( hasCloneWidth / 2 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( selectionTop + window.scrollY ) - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the inline highlighter. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element        The cloned social sharer element.\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst setHasContainerPositionInline = ( element, triggerElement ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst inlineRect = triggerElement.getBoundingClientRect();\n\t\tconst inlineTop = inlineRect.top; // top position relative to view port.\n\t\tconst inlineLeft = inlineRect.left; // left position relative to view port.\n\t\tconst inlineWidth = inlineRect.width;\n\t\tconst inlineHeight = inlineRect.height;\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = inlineLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( inlineTop + window.scrollY ) - ( hasCloneHeight / 2 ) + ( inlineHeight / 2 );\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( ( inlineTop + window.scrollY ) - ( hasCloneHeight / 2 ) < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( inlineTop + window.scrollY - ( newCloneRect.height / 2 ) + ( inlineHeight / 2 ) ) + 'px';\n\t\t\t\tconst leftPosition = ( inlineLeft + window.scrollX - newCloneRect.width - 15 );\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if ( ( inlineTop + window.scrollY ) + ( hasCloneHeight / 2 ) > windowHeight ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( inlineTop + window.scrollY - ( newCloneRect.height / 2 ) + ( inlineHeight / 2 ) ) + 'px';\n\t\t\t\tconst leftPosition = ( inlineLeft + window.scrollX - newCloneRect.width - 15 );\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = inlineLeft + window.scrollX + ( inlineWidth / 2 ) - ( hasCloneWidth / 2 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( inlineTop + window.scrollY ) - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the inline highlighter. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element        The cloned social sharer element.\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst setHasContainerPositionCta = ( element, triggerElement ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst ctaRect = triggerElement.getBoundingClientRect();\n\t\tconst ctaTop = ctaRect.top; // top position relative to view port.\n\t\tconst ctaLeft = ctaRect.left; // left position relative to view port.\n\t\tconst ctaWidth = ctaRect.width;\n\t\tconst ctaHeight = ctaRect.height;\n\n\t\t// Set container width to smaller than window width if larger.\n\t\tif ( element.getBoundingClientRect().width > windowWidth ) {\n\t\t\telement.style.maxWidth = ( windowWidth - 20 ) + 'px';\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t}\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = ctaLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( ctaTop + window.scrollY ) - ( hasCloneHeight / 2 ) + ( ctaHeight / 2 );\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( ( ctaTop + window.scrollY ) - ( hasCloneHeight / 2 ) < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( ctaTop + window.scrollY - ( newCloneRect.height / 2 ) + ( ctaHeight / 2 ) ) + 'px';\n\t\t\t\tconst leftPosition = ( ctaLeft + window.scrollX - newCloneRect.width - 15 );\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if ( ( ctaTop + window.scrollY ) + ( hasCloneHeight / 2 ) > windowHeight ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top = ( ctaTop + window.scrollY - ( newCloneRect.height / 2 ) + ( ctaHeight / 2 ) ) + 'px';\n\t\t\t\tconst leftPosition = ( ctaLeft + window.scrollX - newCloneRect.width - 15 );\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = ctaLeft + window.scrollX + ( ctaWidth / 2 ) - ( hasCloneWidth / 2 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ( ctaTop + window.scrollY ) - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t// Begin setting up events.\n\n\t// Get JS Content and return if not set.\n\tconst jsContent = HAS.content;\n\tif ( '' === jsContent ) {\n\t\treturn;\n\t}\n\n\t// Get all elements matching jsContent. Set up events.\n\tconst elements = document.querySelectorAll( jsContent );\n\tif ( null !== elements ) {\n\t\t/**\n\t\t * Handle touch/click events for select (mouseup) events.\n\t\t *\n\t\t * @param {event} event The original event.\n\t\t */\n\t\tconst hasHandleSelectEvents = ( event ) => {\n\t\t\t// Remove any visible elements.\n\t\t\thasRemoveVisibleElements();\n\n\t\t\t// Get selection.\n\t\t\tconst selection = document.defaultView.getSelection();\n\n\t\t\t// Get the selected text.\n\t\t\tconst selectedText = selection.toString().trim();\n\n\t\t\tif ( '' === selectedText ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the element selection is the same and the sharing interface is visible (works like a toggle).\n\t\t\tif ( selection === currentElement ) {\n\t\t\t\tcurrentElement = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrentElement = selection;\n\n\t\t\t// Get closest parent container.\n\t\t\tconst elementParent = event.target.closest( '.has-content-area' );\n\n\t\t\t// Get data attributes.\n\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t// Display Highlight and Share.\n\t\t\thasDisplay( selectedText, title, href, hashtags, 'selection' );\n\t\t};\n\t\t// Loop through elements and set up mouseup event.\n\t\telements.forEach( ( element ) => {\n\t\t\t// element.addEventListener( 'touchcancel', ( event ) => {  // This partially works on Android, but only for the first word. Selections do not work. Android is currently not supported. iOS still works.\n\t\t\t// \thasHandleSelectEvents( event );\n\t\t\t// } );\n\t\t\telement.addEventListener( 'mouseup', ( event ) => {\n\t\t\t\thasHandleSelectEvents( event );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Get inline elements.\n\tconst inlineElements = document.querySelectorAll( '.has-inline-text' );\n\tif ( null !== inlineElements ) {\n\t\t/**\n\t\t * Handle touch/click events for inline highlighting.\n\t\t *\n\t\t * @param {event}   event   The original event.\n\t\t * @param {element} element The element the event happened on.\n\t\t */\n\t\tconst hasHandleInlineEvents = ( event, element ) => {\n\t\t\t// Remove any visible elements.\n\t\t\thasRemoveVisibleElements();\n\n\t\t\t// Exit early if the element is already visible (works like a toggle).\n\t\t\tif ( element === currentElement ) {\n\t\t\t\tcurrentElement = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrentElement = element;\n\n\t\t\t// Get selected text.\n\t\t\tconst selectedText = element.innerText.trim();\n\n\t\t\tif ( '' === selectedText ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get closest parent container.\n\t\t\tconst elementParent = event.target.closest( '.has-content-area' );\n\n\t\t\t// Get data attributes.\n\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t// Display Highlight and Share.\n\t\t\thasDisplay( selectedText, title, href, hashtags, 'inline', element );\n\t\t};\n\t\tinlineElements.forEach( ( element ) => {\n\t\t\t// For mouse and trackpad.\n\t\t\telement.addEventListener( 'click', ( event ) => {\n\t\t\t\thasHandleInlineEvents( event, element );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Get click to share block elements.\n\tconst ctsElements = document.querySelectorAll( '.has-click-prompt' );\n\tif ( null !== ctsElements ) {\n\t\tctsElements.forEach( ( element ) => {\n\t\t\telement.addEventListener( 'click', ( event ) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\t// Remove any visible elements.\n\t\t\t\thasRemoveVisibleElements();\n\n\t\t\t\t// Exit early if the element is already visible (works like a toggle).\n\t\t\t\tif ( element === currentElement ) {\n\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentElement = element;\n\n\t\t\t\t// Get parent element of prompt.\n\t\t\t\tconst ctsTextElement = element.parentNode.querySelector( '.has-click-to-share-text' );\n\n\t\t\t\t// Get text.\n\t\t\t\tconst selectedText = ctsTextElement.getAttribute( 'data-text-full' );\n\n\t\t\t\t// Get closest parent container.\n\t\t\t\tconst elementParent = element.closest( '.has-content-area' );\n\n\t\t\t\t// Get data attributes.\n\t\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t\t// Display Highlight and Share.\n\t\t\t\thasDisplay( selectedText, title, href, hashtags, 'cta', element.closest( '.has-click-to-share-wrapper' ) );\n\t\t\t} );\n\t\t} );\n\t}\n}() );\n"],"names":["HAS","highlight_and_share","prefix","suffix","currentElement","hasContainer","document","querySelector","rect","getBoundingClientRect","hasSharerWidth","width","isVisible","height","element","style","window","getComputedStyle","display","visibility","opacity","hasRemoveVisibleElements","hasContainers","querySelectorAll","forEach","container","closest","remove","hasVariableReplace","url","title","text","hashtags","queryElements","el","elementAnchor","elementUrl","getAttribute","replace","encodeURIComponent","twitter_username","setAttribute","title_attr","url_attr","hasDisplay","href","type","triggerElement","show_twitter","show_facebook","show_linkedin","show_ok","show_vk","show_pinterest","show_email","hasClone","cloneNode","position","classList","contains","body","appendChild","setHasContainerPositionSelection","setHasContainerPositionInline","setHasContainerPositionCta","addEventListener","event","preventDefault","dataLayer","push","hasShareText","hasSharePostUrl","hasSharePostTitle","hasShareType","hasSocialNetwork","open","copyButtons","copyBlob","Blob","data","ClipboardItem","navigator","clipboard","write","windowWidth","innerWidth","windowHeight","innerHeight","selectionRect","getSelection","getRangeAt","selectionTop","top","selectionLeft","left","selectionWidth","selectionHeight","offsetWidth","maxWidth","add","hasCloneRect","hasCloneWidth","hasCloneHeight","hasSharerX","scrollX","hasSharerY","scrollY","gridTemplateColumns","newCloneRect","right","inlineRect","inlineTop","inlineLeft","inlineWidth","inlineHeight","leftPosition","ctaRect","ctaTop","ctaLeft","ctaWidth","ctaHeight","jsContent","content","elements","selection","defaultView","selectedText","toString","trim","elementParent","target","dataset","location","hasHandleSelectEvents","inlineElements","innerText","hasHandleInlineEvents","ctsElements","parentNode"],"sourceRoot":""}