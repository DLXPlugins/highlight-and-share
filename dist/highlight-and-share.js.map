{"version":3,"file":"highlight-and-share.js","mappings":"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","sources":["webpack://highlight-and-share/./src/frontendjs/highlight-and-share.js"],"sourcesContent":["( function() {\n\t'use strict';\n\n\t// Get localized var.\n\tconst HAS = highlight_and_share;\n\n\t// Set variables.\n\tconst prefix = HAS.prefix;\n\tconst suffix = HAS.suffix;\n\n\tlet currentElement = null;\n\n\t// Main HAS container in the footer. If \".highlight-and-share-wrapper\" doesn't have this parent, it is a clone.\n\tconst hasContainer = document.querySelector( '#has-highlight-and-share' );\n\tif ( null === hasContainer ) {\n\t\treturn;\n\t}\n\n\tconst socialNetworks =\n\t\t'.has_whatsapp, .has_facebook, .has_twitter, .has_copy, .has_email, .has_reddit, .has_telegram, .has_linkedin, .has_xing, .has_signal, .has_vk';\n\n\t// Get highlight and share container dimensions.\n\tconst hasSharingIconsContainer = hasContainer.querySelector(\n\t\t'.highlight-and-share-wrapper'\n\t);\n\n\t// Populate container dimensions/width/height.\n\tconst rect = hasSharingIconsContainer.getBoundingClientRect();\n\tconst hasSharerWidth = rect.width;\n\tconst hasSharerHeight = rect.height;\n\n\t/**\n\t * Determine if an element is visible or not.\n\t *\n\t * @param {Element} element The element to check if visible or not.\n\t * @return {boolean} true if visible, false if not.\n\t */\n\tconst isVisible = ( element ) => {\n\t\tconst style = window.getComputedStyle( element );\n\t\treturn (\n\t\t\tstyle.display !== 'none' &&\n\t\t\tstyle.visibility !== 'hidden' &&\n\t\t\tstyle.opacity !== '0'\n\t\t);\n\t};\n\n\t/**\n\t * Remove any visible HAS containers.\n\t */\n\tconst hasRemoveVisibleElements = () => {\n\t\tconst hasContainers = document.querySelectorAll(\n\t\t\t'.highlight-and-share-wrapper'\n\t\t);\n\t\tif ( null !== hasContainers ) {\n\t\t\t// Remove visible containers from dom.\n\t\t\thasContainers.forEach( ( container ) => {\n\t\t\t\t// If the container is a clone, remove it. (doesn't have the parent \"#has-highlight-and-share\").\n\t\t\t\tif ( null === container.closest( '#has-highlight-and-share' ) ) {\n\t\t\t\t\tcontainer.remove();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\n\t/**\n\t * Replace attributes of element and child elements.\n\t *\n\t * @param {Element} element  The element to replace attributes on with child social networks.\n\t * @param {string}  url      The URL of the post/page.\n\t * @param {string}  title    The title of the post/page.\n\t * @param {string}  text     Text that is selected or to be shared\n\t * @param {string}  hashtags Hashtags present on the post/page.\n\t * @param {string}  type     The type of trigger element (inline, selection, cta).\n\t *\n\t * @return {Element} The element with replaced attributes.\n\t *\n\t */\n\tconst hasVariableReplace = ( element, url, title, text, hashtags, type ) => {\n\t\tconst queryElements = element.querySelectorAll( socialNetworks );\n\t\tif ( null === queryElements ) {\n\t\t\treturn element;\n\t\t}\n\n\t\t// Get types mapped for the modal view.\n\t\tlet triggerType = '';\n\t\tif ( 'inline' === type ) {\n\t\t\ttriggerType = 'highlight';\n\t\t} else if ( 'selection' === type ) {\n\t\t\ttriggerType = 'selection';\n\t\t} else if ( 'cta' === type ) {\n\t\t\ttriggerType = 'quote';\n\t\t}\n\n\t\t// Loop through elements.\n\t\tqueryElements.forEach( ( el ) => {\n\t\t\t// Replace attributes in URL.\n\t\t\tconst elementAnchor = el.querySelector( 'a' );\n\t\t\tlet elementUrl = elementAnchor.getAttribute( 'href' );\n\t\t\telementUrl = elementUrl.replace( '%url%', encodeURIComponent( url ) );\n\t\t\telementUrl = elementUrl.replace(\n\t\t\t\t'%username%',\n\t\t\t\tencodeURIComponent( HAS.twitter_username )\n\t\t\t);\n\t\t\telementUrl = elementUrl.replace( '%title%', encodeURIComponent( title ) );\n\t\t\telementUrl = elementUrl.replace( '%text%', encodeURIComponent( text ) );\n\t\t\telementUrl = elementUrl.replace(\n\t\t\t\t'%hashtags%',\n\t\t\t\tencodeURIComponent( hashtags )\n\t\t\t);\n\t\t\telementUrl = elementUrl.replace( '%type%', encodeURIComponent( triggerType ) );\n\t\t\telementUrl = elementUrl.replace( '%prefix%', encodeURIComponent( prefix ) );\n\t\t\telementUrl = elementUrl.replace( '%suffix%', encodeURIComponent( suffix ) );\n\t\t\telementAnchor.setAttribute( 'href', elementUrl );\n\n\t\t\t// Replace the title data attribute.\n\t\t\tlet title_attr = el.getAttribute( 'data-title' );\n\t\t\tif ( null !== title_attr ) {\n\t\t\t\ttitle_attr = title_attr.replace( '%title%', encodeURIComponent( title ) );\n\t\t\t\tel.setAttribute( 'data-title', title_attr );\n\t\t\t}\n\n\t\t\t// Replace the url data attribute.\n\t\t\tlet url_attr = el.getAttribute( 'data-url' );\n\t\t\tif ( null !== url_attr ) {\n\t\t\t\turl_attr = url_attr.replace( '%url%', encodeURIComponent( url ) );\n\t\t\t\tel.setAttribute( 'data-url', url_attr );\n\t\t\t}\n\t\t} );\n\t};\n\n\t/**\n\t * Display the Highlight and Share Interface.\n\t *\n\t * @param {string}  text           Text that is selected or to be shared.\n\t * @param {string}  title          The title of the post/page.\n\t * @param {string}  href           The URL of the post/page.\n\t * @param {string}  hashtags       Hashtags present on the post/page.\n\t * @param {string}  type           The type of display (selection|inline|cta).\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst hasDisplay = (\n\t\ttext,\n\t\ttitle,\n\t\thref,\n\t\thashtags,\n\t\ttype,\n\t\ttriggerElement = null\n\t) => {\n\t\t// Do not show the interface if nothing is enabled.\n\t\tif (\n\t\t\tfalse === highlight_and_share.show_twitter &&\n\t\t\tfalse === highlight_and_share.show_facebook &&\n\t\t\tfalse === highlight_and_share.show_linkedin &&\n\t\t\tfalse === highlight_and_share.show_ok &&\n\t\t\tfalse === highlight_and_share.show_vk &&\n\t\t\tfalse === highlight_and_share.show_pinterest &&\n\t\t\tfalse === highlight_and_share.show_email\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove any existing visible interfaces/containers.\n\t\thasRemoveVisibleElements();\n\n\t\t// Get interface clone.\n\t\tconst hasClone = hasContainer\n\t\t\t.querySelector( '.highlight-and-share-wrapper' )\n\t\t\t.cloneNode( true );\n\t\t// Style the interface via inline styles and position.\n\t\thasClone.style.display = 'block';\n\t\thasClone.style.position = 'absolute';\n\t\thasClone.style.width = 'auto';\n\t\thasClone.style.height = 'auto';\n\t\thasClone.style[ 'z-index' ] = 10000;\n\n\t\t// Change to inline flex if vertical.\n\t\tif ( hasClone.classList.contains( 'orientation-vertical' ) ) {\n\t\t\thasClone.style.display = 'inline-flex';\n\t\t}\n\n\t\thasVariableReplace( hasClone, href, title, text, hashtags, type ); // Replaced by reference.\n\n\t\t// Add to the end of the body element.\n\t\tdocument.body.appendChild( hasClone );\n\t\tswitch ( type ) {\n\t\t\tcase 'selection':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionSelection( hasClone );\n\t\t\t\tbreak;\n\t\t\tcase 'inline':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionInline( hasClone, triggerElement );\n\t\t\t\tbreak;\n\t\t\tcase 'cta':\n\t\t\t\t// Position the interface.\n\t\t\t\tsetHasContainerPositionCta( hasClone, triggerElement );\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Setup event handlers for links (for desktop).\n\t\tconst queryElements = document\n\t\t\t.querySelector( 'body' )\n\t\t\t.querySelectorAll(\n\t\t\t\t'.has_whatsapp, .has_facebook, .has_twitter, .has_telegram, .has_linkedin, .has_xing, .has_reddit'\n\t\t\t);\n\t\tif ( null !== queryElements ) {\n\t\t\t// Add click listeners to visible elements.\n\t\t\tqueryElements.forEach( ( el ) => {\n\t\t\t\tif ( isVisible( el ) ) {\n\t\t\t\t\tel.querySelector( 'a' ).addEventListener( 'click', ( event ) => {\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Get the URL.\n\t\t\t\t\t\tconst url = el.querySelector( 'a' ).getAttribute( 'href' );\n\n\t\t\t\t\t\t// Set dataLayer event for GTM.\n\t\t\t\t\t\tif ( 'undefined' !== typeof dataLayer ) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\tdataLayer.push( {\n\t\t\t\t\t\t\t\tevent: 'highlight-and-share',\n\t\t\t\t\t\t\t\thasShareText: text,\n\t\t\t\t\t\t\t\thasSharePostUrl: href,\n\t\t\t\t\t\t\t\thasSharePostTitle: title,\n\t\t\t\t\t\t\t\thasShareType: type /* selection|cta|inline */,\n\t\t\t\t\t\t\t\thasSocialNetwork: el.getAttribute( 'data-type' ),\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.open(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t'Highlight and Share',\n\t\t\t\t\t\t\t'width=575,height=430,toolbar=false,menubar=false,location=false,status=false'\n\t\t\t\t\t\t);\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Set up copy event.\n\t\tconst copyButtons = document.querySelectorAll( '.has_copy' );\n\t\tif ( null !== copyButtons ) {\n\t\t\tcopyButtons.forEach( ( el ) => {\n\t\t\t\tif ( isVisible( el ) ) {\n\t\t\t\t\tel.addEventListener( 'click', ( event ) => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst copyBlob = new Blob( [ text ], { type: 'text/plain' } );\n\t\t\t\t\t\tconst data = [ new ClipboardItem( { [ copyBlob.type ]: copyBlob } ) ];\n\t\t\t\t\t\tnavigator.clipboard.write( data );\n\n\t\t\t\t\t\t// Set dataLayer event for GTM.\n\t\t\t\t\t\tif ( 'undefined' !== typeof dataLayer ) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\tdataLayer.push( {\n\t\t\t\t\t\t\t\tevent: 'highlight-and-share',\n\t\t\t\t\t\t\t\thasShareText: text,\n\t\t\t\t\t\t\t\thasSharePostUrl: href,\n\t\t\t\t\t\t\t\thasSharePostTitle: title,\n\t\t\t\t\t\t\t\thasShareType: type /* selection|cta|inline */,\n\t\t\t\t\t\t\t\thasSocialNetwork: 'copy',\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Set up email event.\n\t\tconst emailButtons = document.querySelectorAll( '.has_email' );\n\t\tif ( null !== emailButtons ) {\n\t\t\temailButtons.forEach( ( el ) => {\n\t\t\t\tif ( isVisible( el ) ) {\n\t\t\t\t\tel.addEventListener( 'click', ( event ) => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst url = event.target.closest( 'a' ).getAttribute( 'href' );\n\t\t\t\t\t\tif ( 'undefined' !== typeof Fancybox ) {\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\thasRemoveVisibleElements();\n\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\twindow.highlightShareFancy = new Fancybox(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t\t\t\t\t\ttype: 'iframe',\n\t\t\t\t\t\t\t\t\t\tpreload: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tToolbar: {\n\t\t\t\t\t\t\t\t\t\tautoEnable: false,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Todo - set up email event.\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the current selection. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element The cloned social sharer element.\n\t */\n\tconst setHasContainerPositionSelection = ( element ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst selectionRect = window\n\t\t\t.getSelection()\n\t\t\t.getRangeAt( 0 )\n\t\t\t.getBoundingClientRect();\n\t\tconst selectionTop = selectionRect.top; // top position relative to view port.\n\t\tconst selectionLeft = selectionRect.left; // left position relative to view port.\n\t\tconst selectionWidth = selectionRect.width;\n\t\tconst selectionHeight = selectionRect.height;\n\n\t\t// Set container width to smaller than window width if larger.\n\t\tif ( element.offsetWidth > windowWidth ) {\n\t\t\telement.style.maxWidth = windowWidth - 20 + 'px';\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t}\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = selectionLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY =\n\t\t\t\tselectionTop +\n\t\t\t\twindow.scrollY -\n\t\t\t\thasCloneHeight / 2 +\n\t\t\t\tselectionHeight / 2;\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( selectionTop + window.scrollY - hasCloneHeight / 2 < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tselectionTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tselectionHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\telement.style.left =\n\t\t\t\t\tselectionLeft + window.scrollX - newCloneRect.width - 15 + 'px';\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if (\n\t\t\t\tselectionTop + window.scrollY + hasCloneHeight / 2 >\n\t\t\t\twindowHeight\n\t\t\t) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tselectionTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tselectionHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\telement.style.left =\n\t\t\t\t\tselectionLeft + window.scrollX - newCloneRect.width - 15 + 'px';\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * Get horizontal position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX =\n\t\t\t\tselectionLeft + window.scrollX + selectionWidth / 2 - hasCloneWidth / 2;\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = selectionTop + window.scrollY - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the inline highlighter. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element        The cloned social sharer element.\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst setHasContainerPositionInline = ( element, triggerElement ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst inlineRect = triggerElement.getBoundingClientRect();\n\t\tconst inlineTop = inlineRect.top; // top position relative to view port.\n\t\tconst inlineLeft = inlineRect.left; // left position relative to view port.\n\t\tconst inlineWidth = inlineRect.width;\n\t\tconst inlineHeight = inlineRect.height;\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = inlineLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY =\n\t\t\t\tinlineTop + window.scrollY - hasCloneHeight / 2 + inlineHeight / 2;\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( inlineTop + window.scrollY - hasCloneHeight / 2 < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tinlineTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tinlineHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\tconst leftPosition =\n\t\t\t\t\tinlineLeft + window.scrollX - newCloneRect.width - 15;\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if (\n\t\t\t\tinlineTop + window.scrollY + hasCloneHeight / 2 >\n\t\t\t\twindowHeight\n\t\t\t) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tinlineTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tinlineHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\tconst leftPosition =\n\t\t\t\t\tinlineLeft + window.scrollX - newCloneRect.width - 15;\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX =\n\t\t\t\tinlineLeft + window.scrollX + inlineWidth / 2 - hasCloneWidth / 2;\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = inlineTop + window.scrollY - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t/**\n\t * Set the Social Sharer container position for the inline highlighter. This needs to run after cloned element has been appended to the dom.\n\t *\n\t * @param {element} element        The cloned social sharer element.\n\t * @param {element} triggerElement The event initiator (null if no trigger element).\n\t */\n\tconst setHasContainerPositionCta = ( element, triggerElement ) => {\n\t\t// Get the dimensions of the window.\n\t\tconst windowWidth = window.innerWidth;\n\t\tconst windowHeight = window.innerHeight;\n\n\t\t// Get the dimensions and location of the selection.\n\t\tconst ctaRect = triggerElement.getBoundingClientRect();\n\t\tconst ctaTop = ctaRect.top; // top position relative to view port.\n\t\tconst ctaLeft = ctaRect.left; // left position relative to view port.\n\t\tconst ctaWidth = ctaRect.width;\n\t\tconst ctaHeight = ctaRect.height;\n\n\t\t// Set container width to smaller than window width if larger.\n\t\tif ( element.getBoundingClientRect().width > windowWidth ) {\n\t\t\telement.style.maxWidth = windowWidth - 20 + 'px';\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t}\n\n\t\t// Get the dimensions of the click to share container.\n\t\tconst hasCloneRect = element.getBoundingClientRect();\n\t\tconst hasCloneWidth = hasCloneRect.width;\n\t\tconst hasCloneHeight = hasCloneRect.height;\n\n\t\tif ( element.classList.contains( 'orientation-vertical' ) ) {\n\t\t\t/**\n\t\t\t * Get Vertical position.\n\t\t\t */\n\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX = ctaLeft + window.scrollX - ( hasCloneWidth + 15 );\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY =\n\t\t\t\tctaTop + window.scrollY - hasCloneHeight / 2 + ctaHeight / 2;\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\t// If clone is outside of viewport, set width.\n\t\t\tif ( ctaTop + window.scrollY - hasCloneHeight / 2 < 0 ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tctaTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tctaHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\tconst leftPosition = ctaLeft + window.scrollX - newCloneRect.width - 15;\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\n\t\t\t\t// Calculate top position.\n\t\t\t} else if ( ctaTop + window.scrollY + hasCloneHeight / 2 > windowHeight ) {\n\t\t\t\telement.style.display = 'grid';\n\t\t\t\telement.style.gridTemplateColumns = '1fr 1fr';\n\n\t\t\t\t// Get new clone width dimensions.\n\t\t\t\tconst newCloneRect = element.getBoundingClientRect();\n\n\t\t\t\t// calculate left/top position.\n\t\t\t\telement.style.top =\n\t\t\t\t\tctaTop +\n\t\t\t\t\twindow.scrollY -\n\t\t\t\t\tnewCloneRect.height / 2 +\n\t\t\t\t\tctaHeight / 2 +\n\t\t\t\t\t'px';\n\t\t\t\tconst leftPosition = ctaLeft + window.scrollX - newCloneRect.width - 15;\n\t\t\t\tif ( leftPosition < 0 ) {\n\t\t\t\t\telement.style.left = '15px';\n\t\t\t\t} else {\n\t\t\t\t\telement.style.left = leftPosition + 'px';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.style.top = hasSharerY + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\t\t} else {\n\t\t\t// Get the X position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerX =\n\t\t\t\tctaLeft + window.scrollX + ctaWidth / 2 - hasCloneWidth / 2;\n\t\t\t// Get the Y position of where the HAS Sharer inteface should be displayed.\n\t\t\tconst hasSharerY = ctaTop + window.scrollY - hasCloneHeight - 15;\n\n\t\t\t// Determine if hasSharerX is outside of view.\n\t\t\telement.classList.add( 'has-no-margin-bottom' );\n\t\t\tif ( hasSharerX < 0 ) {\n\t\t\t\t// If so, set to 0.\n\t\t\t\telement.style.left = '15px';\n\t\t\t} else if ( hasSharerX + hasSharerWidth > windowWidth ) {\n\t\t\t\t// If so, set to windowWidth - hasSharerWidth.\n\t\t\t\telement.style.right = '15px';\n\t\t\t} else {\n\t\t\t\t// Otherwise, set to hasSharerX.\n\t\t\t\telement.style.left = hasSharerX + 'px';\n\t\t\t\telement.classList.remove( 'has-no-margin-bottom' );\n\t\t\t}\n\n\t\t\t// Set the left,top CSS in the clone.\n\t\t\telement.style.top = hasSharerY + 'px';\n\t\t}\n\t};\n\n\t// Begin setting up events.\n\n\t// Get JS Content and return if not set.\n\tconst jsContent = HAS.content;\n\tif ( '' === jsContent ) {\n\t\treturn;\n\t}\n\n\t// Get all elements matching jsContent. Set up events.\n\tconst elements = document.querySelectorAll( jsContent );\n\tif ( null !== elements ) {\n\t\t/**\n\t\t * Handle touch/click events for select (mouseup) events.\n\t\t *\n\t\t * @param {event} event The original event.\n\t\t */\n\t\tconst hasHandleSelectEvents = ( event ) => {\n\t\t\t// Remove any visible elements.\n\t\t\thasRemoveVisibleElements();\n\n\t\t\t// Get selection.\n\t\t\tconst selection = document.defaultView.getSelection();\n\n\t\t\t// Get the selected text.\n\t\t\tconst selectedText = selection.toString().trim();\n\n\t\t\tif ( '' === selectedText ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the element selection is the same and the sharing interface is visible (works like a toggle).\n\t\t\t// Commented out as this causes jumps in state, unlike with regular toggles.\n\t\t\t// if ( selection === currentElement ) {\n\t\t\t// \tcurrentElement = null;\n\t\t\t// \treturn;\n\t\t\t// }\n\t\t\t// currentElement = selection;\n\n\t\t\t// Get closest parent container.\n\t\t\tconst elementParent = event.target.closest( '.has-content-area' );\n\n\t\t\t// Get data attributes.\n\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t// Display Highlight and Share.\n\t\t\thasDisplay( selectedText, title, href, hashtags, 'selection' );\n\t\t};\n\t\t// Loop through elements and set up mouseup event.\n\t\telements.forEach( ( element ) => {\n\t\t\t// element.addEventListener( 'touchcancel', ( event ) => {  // This partially works on Android, but only for the first word. Selections do not work. Android is currently not supported. iOS still works.\n\t\t\t// \thasHandleSelectEvents( event );\n\t\t\t// } );\n\t\t\telement.addEventListener( 'mouseup', ( event ) => {\n\t\t\t\thasHandleSelectEvents( event );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Get inline elements.\n\tconst inlineElements = document.querySelectorAll( '.has-inline-text' );\n\tif ( null !== inlineElements ) {\n\t\t/**\n\t\t * Handle touch/click events for inline highlighting.\n\t\t *\n\t\t * @param {event}   event   The original event.\n\t\t * @param {element} element The element the event happened on.\n\t\t */\n\t\tconst hasHandleInlineEvents = ( event, element ) => {\n\t\t\t// Remove any visible elements.\n\t\t\thasRemoveVisibleElements();\n\n\t\t\t// Exit early if the element is already visible (works like a toggle).\n\t\t\tif ( element === currentElement ) {\n\t\t\t\tcurrentElement = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrentElement = element;\n\n\t\t\t// Get selected text.\n\t\t\tconst selectedText = element.innerText.trim();\n\n\t\t\tif ( '' === selectedText ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get closest parent container.\n\t\t\tconst elementParent = event.target.closest( '.has-content-area' );\n\n\t\t\t// Get data attributes.\n\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t// Display Highlight and Share.\n\t\t\thasDisplay( selectedText, title, href, hashtags, 'inline', element );\n\t\t};\n\t\tinlineElements.forEach( ( element ) => {\n\t\t\t// For mouse and trackpad.\n\t\t\telement.addEventListener( 'click', ( event ) => {\n\t\t\t\thasHandleInlineEvents( event, element );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Get click to share block elements.\n\tconst ctsElements = document.querySelectorAll( '.has-click-prompt' );\n\tif ( null !== ctsElements ) {\n\t\tctsElements.forEach( ( element ) => {\n\t\t\telement.addEventListener( 'click', ( event ) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\t// Remove any visible elements.\n\t\t\t\thasRemoveVisibleElements();\n\n\t\t\t\t// Exit early if the element is already visible (works like a toggle).\n\t\t\t\tif ( element === currentElement ) {\n\t\t\t\t\tcurrentElement = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentElement = element;\n\n\t\t\t\t// Get parent element of prompt.\n\t\t\t\tconst ctsTextElement = element.parentNode.querySelector(\n\t\t\t\t\t'.has-click-to-share-text'\n\t\t\t\t);\n\n\t\t\t\t// Get text.\n\t\t\t\tconst selectedText = ctsTextElement.getAttribute( 'data-text-full' );\n\n\t\t\t\t// Get closest parent container.\n\t\t\t\tconst elementParent = element.closest( '.has-content-area' );\n\n\t\t\t\t// Get data attributes.\n\t\t\t\tconst href = elementParent.dataset.url ?? window.location.href;\n\t\t\t\tconst title = elementParent.dataset.title ?? document.title;\n\t\t\t\tconst hashtags = elementParent.dataset.hashtags ?? '';\n\n\t\t\t\t// Display Highlight and Share.\n\t\t\t\thasDisplay(\n\t\t\t\t\tselectedText,\n\t\t\t\t\ttitle,\n\t\t\t\t\thref,\n\t\t\t\t\thashtags,\n\t\t\t\t\t'cta',\n\t\t\t\t\telement.closest( '.has-click-to-share-wrapper' )\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t}\n}() );\n"],"names":["HAS","highlight_and_share","prefix","suffix","currentElement","hasContainer","document","querySelector","rect","getBoundingClientRect","hasSharerWidth","width","isVisible","height","element","style","window","getComputedStyle","display","visibility","opacity","hasRemoveVisibleElements","hasContainers","querySelectorAll","forEach","container","closest","remove","hasVariableReplace","url","title","text","hashtags","type","queryElements","triggerType","el","elementAnchor","elementUrl","getAttribute","replace","encodeURIComponent","twitter_username","setAttribute","title_attr","url_attr","hasDisplay","href","triggerElement","show_twitter","show_facebook","show_linkedin","show_ok","show_vk","show_pinterest","show_email","hasClone","cloneNode","position","classList","contains","body","appendChild","setHasContainerPositionSelection","setHasContainerPositionInline","setHasContainerPositionCta","addEventListener","event","preventDefault","dataLayer","push","hasShareText","hasSharePostUrl","hasSharePostTitle","hasShareType","hasSocialNetwork","open","copyButtons","copyBlob","Blob","data","ClipboardItem","navigator","clipboard","write","emailButtons","target","Fancybox","highlightShareFancy","src","preload","Toolbar","autoEnable","windowWidth","innerWidth","windowHeight","innerHeight","selectionRect","getSelection","getRangeAt","selectionTop","top","selectionLeft","left","selectionWidth","selectionHeight","offsetWidth","maxWidth","add","hasCloneRect","hasCloneWidth","hasCloneHeight","hasSharerX","scrollX","hasSharerY","scrollY","gridTemplateColumns","newCloneRect","right","inlineRect","inlineTop","inlineLeft","inlineWidth","inlineHeight","leftPosition","ctaRect","ctaTop","ctaLeft","ctaWidth","ctaHeight","jsContent","content","elements","selectedText","defaultView","toString","trim","elementParent","dataset","location","hasHandleSelectEvents","inlineElements","innerText","hasHandleInlineEvents","ctsElements","parentNode"],"sourceRoot":""}