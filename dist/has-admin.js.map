{"version":3,"file":"has-admin.js","mappings":"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","sources":["webpack://highlight-and-share/webpack/runtime/load script","webpack://highlight-and-share/webpack/bootstrap","webpack://highlight-and-share/./node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","webpack://highlight-and-share/webpack/runtime/define property getters","webpack://highlight-and-share/webpack/runtime/ensure chunk","webpack://highlight-and-share/webpack/runtime/get javascript chunk filename","webpack://highlight-and-share/webpack/runtime/get mini-css chunk filename","webpack://highlight-and-share/webpack/runtime/global","webpack://highlight-and-share/webpack/runtime/hasOwnProperty shorthand","webpack://highlight-and-share/webpack/runtime/make namespace object","webpack://highlight-and-share/webpack/runtime/publicPath","webpack://highlight-and-share/webpack/runtime/jsonp chunk loading","webpack://highlight-and-share/./src/photoswipe-caption.js","webpack://highlight-and-share/./src/admin.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"highlight-and-share:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","/*!\n  * PhotoSwipe Lightbox 5.3.3 - https://photoswipe.com\n  * (c) 2022 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {undefined | null | false | '' | 0} Falsy */\r\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\r\n\r\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\r\nfunction createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  // @ts-expect-error\r\n  return el;\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nfunction toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nfunction setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nconst LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\r\nfunction specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nfunction getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n */\r\nfunction isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe=} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        // @ts-expect-error\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\n\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).decoding = 'async';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).alt = '';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\n\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement} */\r\n    this.element = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean=} isLazy\r\n   * @param {boolean=} reload\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src;\r\n\r\n    imageElement.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        // eslint-disable-next-line max-len\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (this.data.srcset) {\r\n      const image = /** @type HTMLImageElement */ (this.element);\r\n      const sizesWidth = this.instance.applyFilters(\r\n        'srcsetSizesWidth',\r\n        this.displayedImageWidth,\r\n        this\r\n      );\r\n\r\n      if (!image.dataset.largestUsedSize\r\n          || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\r\n        image.sizes = sizesWidth + 'px';\r\n        image.dataset.largestUsedSize = String(sizesWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = null;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      /** @type {HTMLElement} */\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\r\nfunction getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  /** @type {number} */\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\r\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // eslint-disable-next-line max-len\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (optionPrefix + 'ZoomLevel');\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox | PhotoSwipeBase} instance PhotoSwipe instance\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\r\nfunction lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  // @ts-expect-error should provide pswp instance?\r\n  const viewportSize = instance.viewportSize || getViewportSize(options, instance);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nfunction lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe.js\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if ('length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if ('gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    // @ts-expect-error\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    // eslint-disable-next-line max-len\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (element.tagName === 'A' ? element : element.querySelector('a'));\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   * @param {{ x?: number; y?: number }} [initialPoint]\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t790: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhighlight_and_share\"] = self[\"webpackChunkhighlight_and_share\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\r\n * PhotoSwipe Dynamic Caption plugin v1.1.0\r\n * https://github.com/dimsemenov/photoswipe-dynamic-caption-plugin\r\n * \r\n * By https://dimsemenov.com\r\n */\r\n\r\nconst defaultOptions = {\r\n  captionContent: '.pswp-caption-content',\r\n  type: 'auto',\r\n  horizontalEdgeThreshold: 20,\r\n  mobileCaptionOverlapRatio: 0.3,\r\n  mobileLayoutBreakpoint: 600,\r\n};\r\n\r\nclass PhotoSwipeDynamicCaption {\r\n  constructor(lightbox, options) {\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n\r\n    this.lightbox = lightbox;\r\n\r\n    this.lightbox.on('init', () => {\r\n      this.initPlugin();\r\n    });\r\n  }\r\n\r\n  initPlugin() {\r\n    this.pswp = this.lightbox.pswp;\r\n    this.isCaptionHidden = false;\r\n    this.tempCaption = false;\r\n    this.captionElement = false;\r\n\r\n    this.pswp.on('uiRegister', () => {\r\n      this.pswp.ui.registerElement({\r\n        name: 'dynamic-caption',\r\n        order: 9,\r\n        isButton: false,\r\n        appendTo: 'root',\r\n        html: '',\r\n        onInit: (el) => {\r\n          this.captionElement = el;\r\n          this.initCaption();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  initCaption() {\r\n    const { pswp } = this;\r\n\r\n    pswp.on('change', () => {\r\n      this.updateCaptionHTML(); \r\n      this.updateCurrentCaptionPosition();\r\n\r\n      // make sure caption is displayed after slides are switched\r\n      this.showCaption();\r\n    });\r\n\r\n    pswp.on('calcSlideSize', (e) => this.onCalcSlideSize(e));\r\n\r\n    // hide caption if mainscroll is shifted (dragging)\r\n    pswp.on('moveMainScroll', () => {\r\n      if (!this.useMobileLayout()) {\r\n        if (this.pswp.mainScroll.isShifted()) {\r\n          this.hideCaption();\r\n        } else {\r\n          this.showCaption();\r\n        }\r\n      }\r\n    });\r\n\r\n    // hide caption if zoomed\r\n    pswp.on('zoomPanUpdate', () => {\r\n      if (pswp.currSlide.currZoomLevel > pswp.currSlide.zoomLevels.initial) {\r\n        this.hideCaption();\r\n      } else {\r\n        this.showCaption();\r\n      }\r\n    });\r\n\r\n    pswp.on('beforeZoomTo', (e) => {\r\n      const { currSlide } = pswp;\r\n\r\n      if (currSlide.__dcAdjustedPanAreaSize) {\r\n        if (e.destZoomLevel > currSlide.zoomLevels.initial) {\r\n          currSlide.panAreaSize.x = currSlide.__dcOriginalPanAreaSize.x;\r\n          currSlide.panAreaSize.y = currSlide.__dcOriginalPanAreaSize.y;\r\n        } else {\r\n          // Restore panAreaSize after we zoom back to initial position\r\n          currSlide.panAreaSize.x = currSlide.__dcAdjustedPanAreaSize.x;\r\n          currSlide.panAreaSize.y = currSlide.__dcAdjustedPanAreaSize.y;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useMobileLayout() {\r\n    const { mobileLayoutBreakpoint } = this.options;\r\n\r\n    if (typeof mobileLayoutBreakpoint === 'function') {\r\n      return mobileLayoutBreakpoint.call(this);\r\n    } else if (typeof mobileLayoutBreakpoint === 'number') {\r\n      if (window.innerWidth < mobileLayoutBreakpoint) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  hideCaption() {\r\n    if (!this.isCaptionHidden) {\r\n      this.isCaptionHidden = true;\r\n      this.captionElement.classList.add('pswp__dynamic-caption--faded');\r\n\r\n      // Disable caption visibility with the delay, so it's not interactable \r\n      if (this.captionFadeTimeout) {\r\n        clearTimeout(this.captionFadeTimeout);\r\n      }\r\n      this.captionFadeTimeout = setTimeout(() => {\r\n        this.captionElement.style.visibility = 'hidden';\r\n        this.captionFadeTimeout = null;\r\n      }, 400);\r\n    }\r\n  }\r\n\r\n  showCaption() {\r\n    if (this.isCaptionHidden) {\r\n      this.isCaptionHidden = false;\r\n      this.captionElement.style.visibility = 'visible';\r\n      \r\n      clearTimeout(this.captionFadeTimeout);\r\n      this.captionFadeTimeout = setTimeout(() => {\r\n        this.captionElement.classList.remove('pswp__dynamic-caption--faded');\r\n        this.captionFadeTimeout = null;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  setCaptionPosition(x, y) {\r\n    const isOnHorizontalEdge = (x <= this.options.horizontalEdgeThreshold);\r\n    this.captionElement.classList[\r\n      isOnHorizontalEdge ? 'add' : 'remove'\r\n    ]('pswp__dynamic-caption--on-hor-edge');\r\n\r\n    this.captionElement.style.left = x + 'px';\r\n    this.captionElement.style.top = y + 'px';\r\n  }\r\n\r\n  setCaptionWidth(captionEl, width) {\r\n    if (!width) {\r\n      captionEl.style.removeProperty('width');\r\n    } else {\r\n      captionEl.style.width = width + 'px';\r\n    }\r\n  }\r\n\r\n  setCaptionType(captionEl, type) {\r\n    const prevType = captionEl.dataset.pswpCaptionType;\r\n    if (type !== prevType) {\r\n      captionEl.classList.add('pswp__dynamic-caption--' + type);\r\n      captionEl.classList.remove('pswp__dynamic-caption--' + prevType);\r\n      captionEl.dataset.pswpCaptionType = type;\r\n    }\r\n  }\r\n\r\n  updateCurrentCaptionPosition() {\r\n    const slide = this.pswp.currSlide;\r\n\r\n    if (!slide.dynamicCaptionType) {\r\n      return;\r\n    }\r\n\r\n    if (slide.dynamicCaptionType === 'mobile') {\r\n      this.setCaptionType(this.captionElement, slide.dynamicCaptionType);\r\n      \r\n      this.captionElement.style.removeProperty('left');\r\n      this.captionElement.style.removeProperty('top');\r\n      this.setCaptionWidth(this.captionElement, false);\r\n      return;\r\n    }\r\n\r\n    const zoomLevel = slide.zoomLevels.initial;\r\n    const imageWidth = Math.ceil(slide.width * zoomLevel);\r\n    const imageHeight = Math.ceil(slide.height * zoomLevel);\r\n\r\n    \r\n    this.setCaptionType(this.captionElement, slide.dynamicCaptionType);\r\n    if (slide.dynamicCaptionType === 'aside') {\r\n      this.setCaptionPosition(\r\n        this.pswp.currSlide.bounds.center.x + imageWidth,\r\n        this.pswp.currSlide.bounds.center.y\r\n      );\r\n      this.setCaptionWidth(this.captionElement, false);\r\n    } else if (slide.dynamicCaptionType === 'below') {\r\n      this.setCaptionPosition(\r\n        this.pswp.currSlide.bounds.center.x,\r\n        this.pswp.currSlide.bounds.center.y + imageHeight\r\n      );\r\n      this.setCaptionWidth(this.captionElement, imageWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Temporary caption is used to measure size for the current/next/previous captions,\r\n   * (it has visibility:hidden)\r\n   */\r\n  createTemporaryCaption() {\r\n    this.tempCaption = document.createElement('div');\r\n    this.tempCaption.className = 'pswp__dynamic-caption pswp__dynamic-caption--temp';\r\n    this.tempCaption.style.visibility = 'hidden';\r\n    this.tempCaption.setAttribute('aria-hidden', 'true');\r\n    // move caption element, so it's after BG,\r\n    // so that other controls can freely overlap it\r\n    this.pswp.bg.after(this.captionElement); \r\n    this.captionElement.after(this.tempCaption);\r\n  }\r\n\r\n  onCalcSlideSize(e) {\r\n    const { slide } = e;\r\n\r\n    const captionHTML = this.getCaptionHTML(e.slide);\r\n    let useMobileVersion = false;\r\n    let captionSize;\r\n\r\n    if (!captionHTML) {\r\n      slide.dynamicCaptionType = false;\r\n      return;\r\n    }\r\n\r\n    this.storeOriginalPanAreaSize(slide);\r\n\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n    \r\n    if (this.useMobileLayout()) {\r\n      slide.dynamicCaptionType = 'mobile';\r\n      useMobileVersion = true;\r\n    } else {\r\n      if (this.options.type === 'auto') {\r\n        if (slide.bounds.center.x > slide.bounds.center.y) {\r\n          slide.dynamicCaptionType = 'aside';\r\n        } else {\r\n          slide.dynamicCaptionType = 'below';\r\n        }\r\n      } else {\r\n        slide.dynamicCaptionType = this.options.type;\r\n      }\r\n    } \r\n\r\n    const imageWidth = Math.ceil(slide.width * slide.zoomLevels.initial);\r\n    const imageHeight = Math.ceil(slide.height * slide.zoomLevels.initial);\r\n\r\n    if (!this.tempCaption) {\r\n      this.createTemporaryCaption();\r\n    }\r\n\r\n    this.setCaptionType(this.tempCaption, slide.dynamicCaptionType);\r\n\r\n    if (slide.dynamicCaptionType === 'aside') {\r\n      this.tempCaption.innerHTML = this.getCaptionHTML(e.slide);\r\n      this.setCaptionWidth(this.tempCaption, false);\r\n      captionSize = this.measureCaptionSize(this.tempCaption, e.slide);\r\n      const captionWidth = captionSize.x;      \r\n\r\n      const horizontalEnding = imageWidth + slide.bounds.center.x;\r\n      const horizontalLeftover = (slide.panAreaSize.x - horizontalEnding);\r\n\r\n      if (horizontalLeftover <= captionWidth) {\r\n        slide.panAreaSize.x -= captionWidth;\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n      } else {\r\n        // do nothing, caption will fit aside without any adjustments\r\n      }\r\n    } else if (slide.dynamicCaptionType === 'below' || useMobileVersion) {\r\n      this.setCaptionWidth(\r\n        this.tempCaption, \r\n        useMobileVersion ? this.pswp.viewportSize.x : imageWidth\r\n      );\r\n      this.tempCaption.innerHTML = this.getCaptionHTML(e.slide);\r\n      captionSize = this.measureCaptionSize(this.tempCaption, e.slide);\r\n      const captionHeight = captionSize.y;\r\n\r\n\r\n      // vertical ending of the image\r\n      const verticalEnding = imageHeight + slide.bounds.center.y;\r\n\r\n      // height between bottom of the screen and ending of the image\r\n      // (before any adjustments applied) \r\n      const verticalLeftover = slide.panAreaSize.y - verticalEnding;\r\n      const initialPanAreaHeight = slide.panAreaSize.y;\r\n\r\n      if (verticalLeftover <= captionHeight) {\r\n        // lift up the image to give more space for caption\r\n        slide.panAreaSize.y -= Math.min((captionHeight - verticalLeftover) * 2, captionHeight);\r\n\r\n        // we reduce viewport size, thus we need to update zoom level and pan bounds\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n\r\n        const maxPositionX = slide.panAreaSize.x * this.options.mobileCaptionOverlapRatio / 2;\r\n\r\n        // Do not reduce viewport height if too few space available\r\n        if (useMobileVersion \r\n            && slide.bounds.center.x > maxPositionX) {\r\n          // Restore the default position\r\n          slide.panAreaSize.y = initialPanAreaHeight;\r\n          this.recalculateZoomLevelAndBounds(slide);\r\n        }\r\n      }\r\n\r\n      \r\n      \r\n      // if (this.useMobileLayout && slide.bounds.center.x > 100) {\r\n      //   // do nothing, caption will overlap the bottom part of the image\r\n      // } else if (verticalLeftover <= captionHeight) {\r\n        \r\n      // } else {\r\n      //   // do nothing, caption will fit below the image without any adjustments\r\n      // }\r\n    } else {\r\n      // mobile\r\n    }\r\n\r\n    this.storeAdjustedPanAreaSize(slide);\r\n\r\n    if (slide === this.pswp.currSlide) {\r\n      this.updateCurrentCaptionPosition();\r\n    }\r\n  }\r\n\r\n  measureCaptionSize(captionEl, slide) {\r\n    const rect = captionEl.getBoundingClientRect();\r\n    const event = this.pswp.dispatch('dynamicCaptionMeasureSize', {\r\n      captionEl,\r\n      slide,\r\n      captionSize: {\r\n        x: rect.width,\r\n        y: rect.height\r\n      }\r\n    });\r\n    return event.captionSize;\r\n  }\r\n\r\n  recalculateZoomLevelAndBounds(slide) {\r\n    slide.zoomLevels.update(slide.width, slide.height, slide.panAreaSize);\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n  }\r\n\r\n  storeAdjustedPanAreaSize(slide) {\r\n    if (!slide.__dcAdjustedPanAreaSize) {\r\n      slide.__dcAdjustedPanAreaSize = {};\r\n    }\r\n    slide.__dcAdjustedPanAreaSize.x = slide.panAreaSize.x;\r\n    slide.__dcAdjustedPanAreaSize.y = slide.panAreaSize.y;\r\n  }\r\n\r\n  storeOriginalPanAreaSize(slide) {\r\n    if (!slide.__dcOriginalPanAreaSize) {\r\n      slide.__dcOriginalPanAreaSize = {};\r\n    }\r\n    slide.__dcOriginalPanAreaSize.x = slide.panAreaSize.x;\r\n    slide.__dcOriginalPanAreaSize.y = slide.panAreaSize.y;\r\n  }\r\n\r\n  getCaptionHTML(slide) {\r\n    if (typeof this.options.captionContent === 'function') {\r\n      return this.options.captionContent.call(this, slide);\r\n    }\r\n\r\n    const currSlideElement = slide.data.element;\r\n    let captionHTML = '';\r\n    if (currSlideElement) {\r\n      const hiddenCaption = currSlideElement.querySelector(this.options.captionContent);\r\n      if (hiddenCaption) {\r\n        // get caption from element with class pswp-caption-content\r\n        captionHTML = hiddenCaption.innerHTML;\r\n      } else {\r\n        const img = currSlideElement.querySelector('img');\r\n        if (img) {\r\n          // get caption from alt attribute\r\n          captionHTML = img.getAttribute('alt');\r\n        }\r\n      }\r\n    }\r\n    return captionHTML;\r\n  }\r\n\r\n  updateCaptionHTML() {\r\n    const captionHTML = this.getCaptionHTML(pswp.currSlide);\r\n    this.captionElement.style.visibility = captionHTML ? 'visible' :  'hidden';\r\n    this.captionElement.innerHTML = captionHTML || '';\r\n    this.pswp.dispatch('dynamicCaptionUpdateHTML', { \r\n      captionElement: this.captionElement\r\n    });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeDynamicCaption;\r\n","import PhotoSwipeLightbox from 'photoswipe/lightbox';\nimport 'photoswipe/style.css';\n// or 'photoswipe-dynamic-caption-plugin' if using package manager\nimport PhotoSwipeDynamicCaption from './photoswipe-caption';\nimport './photoswipe-caption.css';\n\nconst lightbox = new PhotoSwipeLightbox({\n\tgallery: '.has-admin-preview',\n\tchildren: 'li',\n\tshowHideAnimationType: 'zoom',\n\tshowAnimationDuration: 750,\n\thideAnimationDuration: 750,\n\timageClickAction: 'next',\n  \ttapAction: 'next',\n\tpswpModule: () => import('photoswipe')\n  });\nconst captionPlugin = new PhotoSwipeDynamicCaption(lightbox, {\n\t// Plugins options, for example:\n\ttype: 'below',\n\tpaddingFn: (viewportSize) => {\n\t\treturn viewportSize.x < 700 ? smallScreenPadding : largeScreenPadding\n\t  },\n});\nlightbox.init();"],"names":["inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","createElement","className","tagName","appendToEl","el","document","appendChild","setWidthHeight","w","h","style","width","height","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","getElementsByTagName","i","length","s","getAttribute","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","self","LOAD_STATE","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","PhotoSwipeEvent","constructor","details","assign","preventDefault","defaultPrevented","Eventable","_listeners","_filters","pswp","options","addFilter","priority","sort","f1","f2","removeFilter","filter","applyFilters","args","apply","on","off","listener","dispatch","Placeholder","imageSrc","container","element","decoding","alt","setDisplayedSize","transformOrigin","transform","x","y","scale","propValue","toTransformString","destroy","remove","Content","itemData","instance","index","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","state","content","removePlaceholder","placeholder","keepPlaceholder","load","isLazy","reload","slide","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","innerText","errorMsg","supportsDecode","isDecoding","decode","catch","finally","appendImage","activate","deactivate","parsePaddingOption","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","ZoomLevel","update","maxWidth","maxHeight","panAreaSize","elementSize","hRatio","vRatio","fit","Math","min","fill","vFill","initial","_getInitial","secondary","_getSecondary","max","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","getViewportSize","getPanAreaSize","zoomLevel","ceil","PhotoSwipeBase","getNumItems","numItems","dataSource","items","_getGalleryDOMElements","gallery","getItemData","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","pswpCropped","cropped","thumbCropped","defaultOptions","captionContent","horizontalEdgeThreshold","mobileCaptionOverlapRatio","mobileLayoutBreakpoint","PhotoSwipeDynamicCaption","lightbox","initPlugin","isCaptionHidden","tempCaption","captionElement","ui","registerElement","order","isButton","appendTo","onInit","initCaption","updateCaptionHTML","updateCurrentCaptionPosition","showCaption","onCalcSlideSize","useMobileLayout","mainScroll","isShifted","hideCaption","currSlide","__dcAdjustedPanAreaSize","destZoomLevel","__dcOriginalPanAreaSize","innerWidth","classList","add","captionFadeTimeout","visibility","isOnHorizontalEdge","left","top","captionEl","removeProperty","prevType","pswpCaptionType","dynamicCaptionType","setCaptionType","setCaptionWidth","imageWidth","imageHeight","setCaptionPosition","bounds","center","bg","after","useMobileVersion","getCaptionHTML","storeOriginalPanAreaSize","createTemporaryCaption","captionWidth","measureCaptionSize","horizontalEnding","recalculateZoomLevelAndBounds","captionHeight","verticalEnding","verticalLeftover","initialPanAreaHeight","maxPositionX","storeAdjustedPanAreaSize","rect","getBoundingClientRect","captionSize","currSlideElement","captionHTML","hiddenCaption","img","super","_uid","init","onThumbnailsClick","gallerySelector","addEventListener","which","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","onLine","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","loadAndOpen","getClickedIndexFn","clickedTarget","clickedChildIndex","findIndex","child","contains","initialPointerPos","shouldOpen","preload","promiseArray","pswpModuleType","pswpModule","goTo","openPromise","preloadFirstSlide","_preloadedContent","lazyLoadSlide","uid","then","iterableModules","mainModule","_openPhotoswipe","default","contentLoader","addToCache","removeEventListener","showHideAnimationType","showAnimationDuration","hideAnimationDuration","imageClickAction","tapAction","smallScreenPadding","largeScreenPadding"],"sourceRoot":""}