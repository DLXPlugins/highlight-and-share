{"version":3,"file":"has-admin.js","mappings":"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ACA,UAAU,qEAAqE;AAC/E;AACA;AACA;AACA,UAAU,wDAAwD;AAClE;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,eAAe,iDAAiD;AAChE;AACA;AACA;AACA,cAAc,2BAA2B;AACzC,aAAa,6GAA6G;AAC1H;AACA;AACA;AACA,cAAc,2BAA2B;AACzC,aAAa,oCAAoC;AACjD;AACA;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,yBAAyB;AACtC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C,aAAa,GAAG;AAChB,aAAa,qCAAqC;AAClD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C,aAAa,GAAG;AAChB,aAAa,wBAAwB;AACrC,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA,iBAAiB,kBAAkB;AACnC;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,8BAA8B;AAC5C,cAAc,gCAAgC;AAC9C,cAAc,oCAAoC;AAClD,cAAc,qCAAqC;AACnD;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,YAAY;AACzB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,qDAAqD,uBAAuB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iDAAiD;AAChG,4CAA4C,kCAAkC;AAC9E;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,8BAA8B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,oDAAoD,iDAAiD;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC,8CAA8C;AAC9C;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,8CAA8C;AAC5D,cAAc,oCAAoC;AAClD,cAAc,uCAAuC;AACrD;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mBAAmB;AAC9B,aAAa,YAAY,cAAc,sDAAsD;AAC7F,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,YAAY,cAAc;AACvC,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD,cAAc,8CAA8C;AAC5D,cAAc,uCAAuC;AACrD;AACA,cAAc,oEAAoE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,YAAY,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4CAA4C;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA;AACA;AACA,kCAAkC,4DAA4D;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,kDAAkD;AAC7D,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA,2CAA2C,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;;AAEA,cAAc,oCAAoC;AAClD,cAAc,8CAA8C;AAC5D,cAAc,uCAAuC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA,cAAc,oCAAoC;AAClD,cAAc,8CAA8C;AAC5D,cAAc,uCAAuC;AACrD,cAAc,uCAAuC;AACrD,cAAc,oDAAoD;AAClE,cAAc,qDAAqD;AACnE;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,eAAe,YAAY,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB;AACrE,MAAM;AACN;AACA,MAAM;AACN,mCAAmC,iCAAiC;AACpE,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,qBAAqB,6BAA6B;AAC/D,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA,iCAAiC,4BAA4B;AAC7D,OAAO;AACP,KAAK;AACL;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEyC;AACzC;;;;;;;UCzxDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;;;;;;;;;;ACrFqD;AACvB;AAC9B;AAC4D;AAC1B;AAElC,IAAMC,QAAQ,GAAG,IAAI4G,2DAAkB,CAAC;EACvCC,OAAO,EAAE,oBAAoB;EAC7BC,QAAQ,EAAE,IAAI;EACdC,qBAAqB,EAAE,MAAM;EAC7BC,qBAAqB,EAAE,GAAG;EAC1BC,qBAAqB,EAAE,GAAG;EAC1BC,gBAAgB,EAAE,MAAM;EACtBC,SAAS,EAAE,MAAM;EACnBC,UAAU,EAAE;IAAA,OAAM,yNAAoB;EAAA;AACrC,CAAC,CAAC;AACJ,IAAMC,aAAa,GAAG,IAAItH,2DAAwB,CAACC,QAAQ,EAAE;EAC5D;EACAL,IAAI,EAAE,OAAO;EACb2H,SAAS,EAAE,mBAAC7B,YAAY,EAAK;IAC5B,OAAOA,YAAY,CAACvD,CAAC,GAAG,GAAG,GAAGqF,kBAAkB,GAAGC,kBAAkB;EACpE;AACH,CAAC,CAAC;AACFxH,QAAQ,CAACyH,IAAI,EAAE,C","sources":["webpack://highlight-and-share/./src/photoswipe-caption.js","webpack://highlight-and-share/./node_modules/photoswipe/dist/photoswipe.css?f604","webpack://highlight-and-share/./node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","webpack://highlight-and-share/webpack/bootstrap","webpack://highlight-and-share/webpack/runtime/define property getters","webpack://highlight-and-share/webpack/runtime/ensure chunk","webpack://highlight-and-share/webpack/runtime/get javascript chunk filename","webpack://highlight-and-share/webpack/runtime/get mini-css chunk filename","webpack://highlight-and-share/webpack/runtime/global","webpack://highlight-and-share/webpack/runtime/hasOwnProperty shorthand","webpack://highlight-and-share/webpack/runtime/load script","webpack://highlight-and-share/webpack/runtime/make namespace object","webpack://highlight-and-share/webpack/runtime/publicPath","webpack://highlight-and-share/webpack/runtime/jsonp chunk loading","webpack://highlight-and-share/./src/admin.js"],"sourcesContent":["/**\r\n * PhotoSwipe Dynamic Caption plugin v1.1.0\r\n * https://github.com/dimsemenov/photoswipe-dynamic-caption-plugin\r\n * \r\n * By https://dimsemenov.com\r\n */\r\n\r\nconst defaultOptions = {\r\n  captionContent: '.pswp-caption-content',\r\n  type: 'auto',\r\n  horizontalEdgeThreshold: 20,\r\n  mobileCaptionOverlapRatio: 0.3,\r\n  mobileLayoutBreakpoint: 600,\r\n};\r\n\r\nclass PhotoSwipeDynamicCaption {\r\n  constructor(lightbox, options) {\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n\r\n    this.lightbox = lightbox;\r\n\r\n    this.lightbox.on('init', () => {\r\n      this.initPlugin();\r\n    });\r\n  }\r\n\r\n  initPlugin() {\r\n    this.pswp = this.lightbox.pswp;\r\n    this.isCaptionHidden = false;\r\n    this.tempCaption = false;\r\n    this.captionElement = false;\r\n\r\n    this.pswp.on('uiRegister', () => {\r\n      this.pswp.ui.registerElement({\r\n        name: 'dynamic-caption',\r\n        order: 9,\r\n        isButton: false,\r\n        appendTo: 'root',\r\n        html: '',\r\n        onInit: (el) => {\r\n          this.captionElement = el;\r\n          this.initCaption();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  initCaption() {\r\n    const { pswp } = this;\r\n\r\n    pswp.on('change', () => {\r\n      this.updateCaptionHTML(); \r\n      this.updateCurrentCaptionPosition();\r\n\r\n      // make sure caption is displayed after slides are switched\r\n      this.showCaption();\r\n    });\r\n\r\n    pswp.on('calcSlideSize', (e) => this.onCalcSlideSize(e));\r\n\r\n    // hide caption if mainscroll is shifted (dragging)\r\n    pswp.on('moveMainScroll', () => {\r\n      if (!this.useMobileLayout()) {\r\n        if (this.pswp.mainScroll.isShifted()) {\r\n          this.hideCaption();\r\n        } else {\r\n          this.showCaption();\r\n        }\r\n      }\r\n    });\r\n\r\n    // hide caption if zoomed\r\n    pswp.on('zoomPanUpdate', () => {\r\n      if (pswp.currSlide.currZoomLevel > pswp.currSlide.zoomLevels.initial) {\r\n        this.hideCaption();\r\n      } else {\r\n        this.showCaption();\r\n      }\r\n    });\r\n\r\n    pswp.on('beforeZoomTo', (e) => {\r\n      const { currSlide } = pswp;\r\n\r\n      if (currSlide.__dcAdjustedPanAreaSize) {\r\n        if (e.destZoomLevel > currSlide.zoomLevels.initial) {\r\n          currSlide.panAreaSize.x = currSlide.__dcOriginalPanAreaSize.x;\r\n          currSlide.panAreaSize.y = currSlide.__dcOriginalPanAreaSize.y;\r\n        } else {\r\n          // Restore panAreaSize after we zoom back to initial position\r\n          currSlide.panAreaSize.x = currSlide.__dcAdjustedPanAreaSize.x;\r\n          currSlide.panAreaSize.y = currSlide.__dcAdjustedPanAreaSize.y;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useMobileLayout() {\r\n    const { mobileLayoutBreakpoint } = this.options;\r\n\r\n    if (typeof mobileLayoutBreakpoint === 'function') {\r\n      return mobileLayoutBreakpoint.call(this);\r\n    } else if (typeof mobileLayoutBreakpoint === 'number') {\r\n      if (window.innerWidth < mobileLayoutBreakpoint) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  hideCaption() {\r\n    if (!this.isCaptionHidden) {\r\n      this.isCaptionHidden = true;\r\n      this.captionElement.classList.add('pswp__dynamic-caption--faded');\r\n\r\n      // Disable caption visibility with the delay, so it's not interactable \r\n      if (this.captionFadeTimeout) {\r\n        clearTimeout(this.captionFadeTimeout);\r\n      }\r\n      this.captionFadeTimeout = setTimeout(() => {\r\n        this.captionElement.style.visibility = 'hidden';\r\n        this.captionFadeTimeout = null;\r\n      }, 400);\r\n    }\r\n  }\r\n\r\n  showCaption() {\r\n    if (this.isCaptionHidden) {\r\n      this.isCaptionHidden = false;\r\n      this.captionElement.style.visibility = 'visible';\r\n      \r\n      clearTimeout(this.captionFadeTimeout);\r\n      this.captionFadeTimeout = setTimeout(() => {\r\n        this.captionElement.classList.remove('pswp__dynamic-caption--faded');\r\n        this.captionFadeTimeout = null;\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  setCaptionPosition(x, y) {\r\n    const isOnHorizontalEdge = (x <= this.options.horizontalEdgeThreshold);\r\n    this.captionElement.classList[\r\n      isOnHorizontalEdge ? 'add' : 'remove'\r\n    ]('pswp__dynamic-caption--on-hor-edge');\r\n\r\n    this.captionElement.style.left = x + 'px';\r\n    this.captionElement.style.top = y + 'px';\r\n  }\r\n\r\n  setCaptionWidth(captionEl, width) {\r\n    if (!width) {\r\n      captionEl.style.removeProperty('width');\r\n    } else {\r\n      captionEl.style.width = width + 'px';\r\n    }\r\n  }\r\n\r\n  setCaptionType(captionEl, type) {\r\n    const prevType = captionEl.dataset.pswpCaptionType;\r\n    if (type !== prevType) {\r\n      captionEl.classList.add('pswp__dynamic-caption--' + type);\r\n      captionEl.classList.remove('pswp__dynamic-caption--' + prevType);\r\n      captionEl.dataset.pswpCaptionType = type;\r\n    }\r\n  }\r\n\r\n  updateCurrentCaptionPosition() {\r\n    const slide = this.pswp.currSlide;\r\n\r\n    if (!slide.dynamicCaptionType) {\r\n      return;\r\n    }\r\n\r\n    if (slide.dynamicCaptionType === 'mobile') {\r\n      this.setCaptionType(this.captionElement, slide.dynamicCaptionType);\r\n      \r\n      this.captionElement.style.removeProperty('left');\r\n      this.captionElement.style.removeProperty('top');\r\n      this.setCaptionWidth(this.captionElement, false);\r\n      return;\r\n    }\r\n\r\n    const zoomLevel = slide.zoomLevels.initial;\r\n    const imageWidth = Math.ceil(slide.width * zoomLevel);\r\n    const imageHeight = Math.ceil(slide.height * zoomLevel);\r\n\r\n    \r\n    this.setCaptionType(this.captionElement, slide.dynamicCaptionType);\r\n    if (slide.dynamicCaptionType === 'aside') {\r\n      this.setCaptionPosition(\r\n        this.pswp.currSlide.bounds.center.x + imageWidth,\r\n        this.pswp.currSlide.bounds.center.y\r\n      );\r\n      this.setCaptionWidth(this.captionElement, false);\r\n    } else if (slide.dynamicCaptionType === 'below') {\r\n      this.setCaptionPosition(\r\n        this.pswp.currSlide.bounds.center.x,\r\n        this.pswp.currSlide.bounds.center.y + imageHeight\r\n      );\r\n      this.setCaptionWidth(this.captionElement, imageWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Temporary caption is used to measure size for the current/next/previous captions,\r\n   * (it has visibility:hidden)\r\n   */\r\n  createTemporaryCaption() {\r\n    this.tempCaption = document.createElement('div');\r\n    this.tempCaption.className = 'pswp__dynamic-caption pswp__dynamic-caption--temp';\r\n    this.tempCaption.style.visibility = 'hidden';\r\n    this.tempCaption.setAttribute('aria-hidden', 'true');\r\n    // move caption element, so it's after BG,\r\n    // so that other controls can freely overlap it\r\n    this.pswp.bg.after(this.captionElement); \r\n    this.captionElement.after(this.tempCaption);\r\n  }\r\n\r\n  onCalcSlideSize(e) {\r\n    const { slide } = e;\r\n\r\n    const captionHTML = this.getCaptionHTML(e.slide);\r\n    let useMobileVersion = false;\r\n    let captionSize;\r\n\r\n    if (!captionHTML) {\r\n      slide.dynamicCaptionType = false;\r\n      return;\r\n    }\r\n\r\n    this.storeOriginalPanAreaSize(slide);\r\n\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n    \r\n    if (this.useMobileLayout()) {\r\n      slide.dynamicCaptionType = 'mobile';\r\n      useMobileVersion = true;\r\n    } else {\r\n      if (this.options.type === 'auto') {\r\n        if (slide.bounds.center.x > slide.bounds.center.y) {\r\n          slide.dynamicCaptionType = 'aside';\r\n        } else {\r\n          slide.dynamicCaptionType = 'below';\r\n        }\r\n      } else {\r\n        slide.dynamicCaptionType = this.options.type;\r\n      }\r\n    } \r\n\r\n    const imageWidth = Math.ceil(slide.width * slide.zoomLevels.initial);\r\n    const imageHeight = Math.ceil(slide.height * slide.zoomLevels.initial);\r\n\r\n    if (!this.tempCaption) {\r\n      this.createTemporaryCaption();\r\n    }\r\n\r\n    this.setCaptionType(this.tempCaption, slide.dynamicCaptionType);\r\n\r\n    if (slide.dynamicCaptionType === 'aside') {\r\n      this.tempCaption.innerHTML = this.getCaptionHTML(e.slide);\r\n      this.setCaptionWidth(this.tempCaption, false);\r\n      captionSize = this.measureCaptionSize(this.tempCaption, e.slide);\r\n      const captionWidth = captionSize.x;      \r\n\r\n      const horizontalEnding = imageWidth + slide.bounds.center.x;\r\n      const horizontalLeftover = (slide.panAreaSize.x - horizontalEnding);\r\n\r\n      if (horizontalLeftover <= captionWidth) {\r\n        slide.panAreaSize.x -= captionWidth;\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n      } else {\r\n        // do nothing, caption will fit aside without any adjustments\r\n      }\r\n    } else if (slide.dynamicCaptionType === 'below' || useMobileVersion) {\r\n      this.setCaptionWidth(\r\n        this.tempCaption, \r\n        useMobileVersion ? this.pswp.viewportSize.x : imageWidth\r\n      );\r\n      this.tempCaption.innerHTML = this.getCaptionHTML(e.slide);\r\n      captionSize = this.measureCaptionSize(this.tempCaption, e.slide);\r\n      const captionHeight = captionSize.y;\r\n\r\n\r\n      // vertical ending of the image\r\n      const verticalEnding = imageHeight + slide.bounds.center.y;\r\n\r\n      // height between bottom of the screen and ending of the image\r\n      // (before any adjustments applied) \r\n      const verticalLeftover = slide.panAreaSize.y - verticalEnding;\r\n      const initialPanAreaHeight = slide.panAreaSize.y;\r\n\r\n      if (verticalLeftover <= captionHeight) {\r\n        // lift up the image to give more space for caption\r\n        slide.panAreaSize.y -= Math.min((captionHeight - verticalLeftover) * 2, captionHeight);\r\n\r\n        // we reduce viewport size, thus we need to update zoom level and pan bounds\r\n        this.recalculateZoomLevelAndBounds(slide);\r\n\r\n        const maxPositionX = slide.panAreaSize.x * this.options.mobileCaptionOverlapRatio / 2;\r\n\r\n        // Do not reduce viewport height if too few space available\r\n        if (useMobileVersion \r\n            && slide.bounds.center.x > maxPositionX) {\r\n          // Restore the default position\r\n          slide.panAreaSize.y = initialPanAreaHeight;\r\n          this.recalculateZoomLevelAndBounds(slide);\r\n        }\r\n      }\r\n\r\n      \r\n      \r\n      // if (this.useMobileLayout && slide.bounds.center.x > 100) {\r\n      //   // do nothing, caption will overlap the bottom part of the image\r\n      // } else if (verticalLeftover <= captionHeight) {\r\n        \r\n      // } else {\r\n      //   // do nothing, caption will fit below the image without any adjustments\r\n      // }\r\n    } else {\r\n      // mobile\r\n    }\r\n\r\n    this.storeAdjustedPanAreaSize(slide);\r\n\r\n    if (slide === this.pswp.currSlide) {\r\n      this.updateCurrentCaptionPosition();\r\n    }\r\n  }\r\n\r\n  measureCaptionSize(captionEl, slide) {\r\n    const rect = captionEl.getBoundingClientRect();\r\n    const event = this.pswp.dispatch('dynamicCaptionMeasureSize', {\r\n      captionEl,\r\n      slide,\r\n      captionSize: {\r\n        x: rect.width,\r\n        y: rect.height\r\n      }\r\n    });\r\n    return event.captionSize;\r\n  }\r\n\r\n  recalculateZoomLevelAndBounds(slide) {\r\n    slide.zoomLevels.update(slide.width, slide.height, slide.panAreaSize);\r\n    slide.bounds.update(slide.zoomLevels.initial);\r\n  }\r\n\r\n  storeAdjustedPanAreaSize(slide) {\r\n    if (!slide.__dcAdjustedPanAreaSize) {\r\n      slide.__dcAdjustedPanAreaSize = {};\r\n    }\r\n    slide.__dcAdjustedPanAreaSize.x = slide.panAreaSize.x;\r\n    slide.__dcAdjustedPanAreaSize.y = slide.panAreaSize.y;\r\n  }\r\n\r\n  storeOriginalPanAreaSize(slide) {\r\n    if (!slide.__dcOriginalPanAreaSize) {\r\n      slide.__dcOriginalPanAreaSize = {};\r\n    }\r\n    slide.__dcOriginalPanAreaSize.x = slide.panAreaSize.x;\r\n    slide.__dcOriginalPanAreaSize.y = slide.panAreaSize.y;\r\n  }\r\n\r\n  getCaptionHTML(slide) {\r\n    if (typeof this.options.captionContent === 'function') {\r\n      return this.options.captionContent.call(this, slide);\r\n    }\r\n\r\n    const currSlideElement = slide.data.element;\r\n    let captionHTML = '';\r\n    if (currSlideElement) {\r\n      const hiddenCaption = currSlideElement.querySelector(this.options.captionContent);\r\n      if (hiddenCaption) {\r\n        // get caption from element with class pswp-caption-content\r\n        captionHTML = hiddenCaption.innerHTML;\r\n      } else {\r\n        const img = currSlideElement.querySelector('img');\r\n        if (img) {\r\n          // get caption from alt attribute\r\n          captionHTML = img.getAttribute('alt');\r\n        }\r\n      }\r\n    }\r\n    return captionHTML;\r\n  }\r\n\r\n  updateCaptionHTML() {\r\n    const captionHTML = this.getCaptionHTML(pswp.currSlide);\r\n    this.captionElement.style.visibility = captionHTML ? 'visible' :  'hidden';\r\n    this.captionElement.innerHTML = captionHTML || '';\r\n    this.pswp.dispatch('dynamicCaptionUpdateHTML', { \r\n      captionElement: this.captionElement\r\n    });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeDynamicCaption;\r\n","// extracted by mini-css-extract-plugin\nexport {};","/*!\n  * PhotoSwipe Lightbox 5.3.3 - https://photoswipe.com\n  * (c) 2022 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {undefined | null | false | '' | 0} Falsy */\r\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\r\n\r\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\r\nfunction createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  // @ts-expect-error\r\n  return el;\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nfunction toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nfunction setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nconst LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\r\nfunction specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nfunction getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n */\r\nfunction isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe=} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        // @ts-expect-error\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\n\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).decoding = 'async';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).alt = '';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\n\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement} */\r\n    this.element = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean=} isLazy\r\n   * @param {boolean=} reload\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src;\r\n\r\n    imageElement.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        // eslint-disable-next-line max-len\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (this.data.srcset) {\r\n      const image = /** @type HTMLImageElement */ (this.element);\r\n      const sizesWidth = this.instance.applyFilters(\r\n        'srcsetSizesWidth',\r\n        this.displayedImageWidth,\r\n        this\r\n      );\r\n\r\n      if (!image.dataset.largestUsedSize\r\n          || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\r\n        image.sizes = sizesWidth + 'px';\r\n        image.dataset.largestUsedSize = String(sizesWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = null;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      /** @type {HTMLElement} */\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\r\nfunction getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  /** @type {number} */\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\r\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // eslint-disable-next-line max-len\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (optionPrefix + 'ZoomLevel');\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox | PhotoSwipeBase} instance PhotoSwipe instance\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\r\nfunction lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  // @ts-expect-error should provide pswp instance?\r\n  const viewportSize = instance.viewportSize || getViewportSize(options, instance);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nfunction lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe.js\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if ('length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if ('gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    // @ts-expect-error\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    // eslint-disable-next-line max-len\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (element.tagName === 'A' ? element : element.querySelector('a'));\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   * @param {{ x?: number; y?: number }} [initialPoint]\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"highlight-and-share:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"has-admin\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhighlight_and_share\"] = self[\"webpackChunkhighlight_and_share\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import PhotoSwipeLightbox from 'photoswipe/lightbox';\nimport 'photoswipe/style.css';\n// or 'photoswipe-dynamic-caption-plugin' if using package manager\nimport PhotoSwipeDynamicCaption from './photoswipe-caption';\nimport './photoswipe-caption.css';\n\nconst lightbox = new PhotoSwipeLightbox({\n\tgallery: '.has-admin-preview',\n\tchildren: 'li',\n\tshowHideAnimationType: 'zoom',\n\tshowAnimationDuration: 750,\n\thideAnimationDuration: 750,\n\timageClickAction: 'next',\n  \ttapAction: 'next',\n\tpswpModule: () => import('photoswipe')\n  });\nconst captionPlugin = new PhotoSwipeDynamicCaption(lightbox, {\n\t// Plugins options, for example:\n\ttype: 'below',\n\tpaddingFn: (viewportSize) => {\n\t\treturn viewportSize.x < 700 ? smallScreenPadding : largeScreenPadding\n\t  },\n});\nlightbox.init();"],"names":["defaultOptions","captionContent","type","horizontalEdgeThreshold","mobileCaptionOverlapRatio","mobileLayoutBreakpoint","PhotoSwipeDynamicCaption","lightbox","options","on","initPlugin","pswp","isCaptionHidden","tempCaption","captionElement","ui","registerElement","name","order","isButton","appendTo","html","onInit","el","initCaption","updateCaptionHTML","updateCurrentCaptionPosition","showCaption","e","onCalcSlideSize","useMobileLayout","mainScroll","isShifted","hideCaption","currSlide","currZoomLevel","zoomLevels","initial","__dcAdjustedPanAreaSize","destZoomLevel","panAreaSize","x","__dcOriginalPanAreaSize","y","call","window","innerWidth","classList","add","captionFadeTimeout","clearTimeout","setTimeout","style","visibility","remove","isOnHorizontalEdge","left","top","captionEl","width","removeProperty","prevType","dataset","pswpCaptionType","slide","dynamicCaptionType","setCaptionType","setCaptionWidth","zoomLevel","imageWidth","Math","ceil","imageHeight","height","setCaptionPosition","bounds","center","document","createElement","className","setAttribute","bg","after","captionHTML","getCaptionHTML","useMobileVersion","captionSize","storeOriginalPanAreaSize","update","createTemporaryCaption","innerHTML","measureCaptionSize","captionWidth","horizontalEnding","horizontalLeftover","recalculateZoomLevelAndBounds","viewportSize","captionHeight","verticalEnding","verticalLeftover","initialPanAreaHeight","min","maxPositionX","storeAdjustedPanAreaSize","rect","getBoundingClientRect","event","dispatch","currSlideElement","data","element","hiddenCaption","querySelector","img","getAttribute","PhotoSwipeLightbox","gallery","children","showHideAnimationType","showAnimationDuration","hideAnimationDuration","imageClickAction","tapAction","pswpModule","captionPlugin","paddingFn","smallScreenPadding","largeScreenPadding","init"],"sourceRoot":""}